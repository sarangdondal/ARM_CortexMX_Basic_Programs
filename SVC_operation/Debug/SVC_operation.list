
SVC_operation.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001340  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e0  08001510  08001510  00011510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015f0  080015f0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015f0  080015f0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015f0  080015f0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015f0  080015f0  000115f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015f4  080015f4  000115f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015f8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  0800165c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  0800165c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000231a  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000631  00000000  00000000  000223a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000148  00000000  00000000  000229e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000110  00000000  00000000  00022b28  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000029cc  00000000  00000000  00022c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000128b  00000000  00000000  00025604  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009168  00000000  00000000  0002688f  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f9f7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b7c  00000000  00000000  0002fa74  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080014f8 	.word	0x080014f8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080014f8 	.word	0x080014f8

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <sum_numbers>:


#include <stdio.h>
#include <stdint.h>

int32_t sum_numbers(int32_t x, int32_t y){
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]


	int32_t res;
	__asm volatile("SVC #36");
 80002ba:	df24      	svc	36	; 0x24
	__asm volatile ("MOV %0,R0": "=r"(res):  );
 80002bc:	4603      	mov	r3, r0
 80002be:	60fb      	str	r3, [r7, #12]
	return res;
 80002c0:	68fb      	ldr	r3, [r7, #12]
}
 80002c2:	4618      	mov	r0, r3
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr

080002cc <sub_numbers>:

int32_t sub_numbers(int32_t x, int32_t y){
 80002cc:	b480      	push	{r7}
 80002ce:	b085      	sub	sp, #20
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
 80002d4:	6039      	str	r1, [r7, #0]

	int32_t res;
	__asm volatile("SVC #37");
 80002d6:	df25      	svc	37	; 0x25
	__asm volatile ("MOV %0,R0": "=r"(res):  );
 80002d8:	4603      	mov	r3, r0
 80002da:	60fb      	str	r3, [r7, #12]
	return res;
 80002dc:	68fb      	ldr	r3, [r7, #12]

}
 80002de:	4618      	mov	r0, r3
 80002e0:	3714      	adds	r7, #20
 80002e2:	46bd      	mov	sp, r7
 80002e4:	bc80      	pop	{r7}
 80002e6:	4770      	bx	lr

080002e8 <div_numbers>:

int32_t div_numbers(int32_t x, int32_t y){
 80002e8:	b480      	push	{r7}
 80002ea:	b085      	sub	sp, #20
 80002ec:	af00      	add	r7, sp, #0
 80002ee:	6078      	str	r0, [r7, #4]
 80002f0:	6039      	str	r1, [r7, #0]

	int32_t res;
	__asm volatile("SVC #39");
 80002f2:	df27      	svc	39	; 0x27
	__asm volatile ("MOV %0,R0": "=r"(res):  );
 80002f4:	4603      	mov	r3, r0
 80002f6:	60fb      	str	r3, [r7, #12]
	return res;
 80002f8:	68fb      	ldr	r3, [r7, #12]

}
 80002fa:	4618      	mov	r0, r3
 80002fc:	3714      	adds	r7, #20
 80002fe:	46bd      	mov	sp, r7
 8000300:	bc80      	pop	{r7}
 8000302:	4770      	bx	lr

08000304 <mul_numbers>:

int32_t mul_numbers(int32_t x, int32_t y){
 8000304:	b480      	push	{r7}
 8000306:	b085      	sub	sp, #20
 8000308:	af00      	add	r7, sp, #0
 800030a:	6078      	str	r0, [r7, #4]
 800030c:	6039      	str	r1, [r7, #0]

	int32_t res;
	__asm volatile("SVC #38");
 800030e:	df26      	svc	38	; 0x26
	__asm volatile ("MOV %0,R0": "=r"(res):  );
 8000310:	4603      	mov	r3, r0
 8000312:	60fb      	str	r3, [r7, #12]
	return res;
 8000314:	68fb      	ldr	r3, [r7, #12]

}
 8000316:	4618      	mov	r0, r3
 8000318:	3714      	adds	r7, #20
 800031a:	46bd      	mov	sp, r7
 800031c:	bc80      	pop	{r7}
 800031e:	4770      	bx	lr

08000320 <main>:

int main(void)
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b082      	sub	sp, #8
 8000324:	af00      	add	r7, sp, #0

	int32_t res;

	res= sum_numbers(40,-90);
 8000326:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800032a:	2028      	movs	r0, #40	; 0x28
 800032c:	f7ff ffc0 	bl	80002b0 <sum_numbers>
 8000330:	6078      	str	r0, [r7, #4]
	printf("add_res = %ld\n",res);
 8000332:	6879      	ldr	r1, [r7, #4]
 8000334:	480f      	ldr	r0, [pc, #60]	; (8000374 <main+0x54>)
 8000336:	f000 f999 	bl	800066c <iprintf>

	res= sub_numbers(40,20);
 800033a:	2114      	movs	r1, #20
 800033c:	2028      	movs	r0, #40	; 0x28
 800033e:	f7ff ffc5 	bl	80002cc <sub_numbers>
 8000342:	6078      	str	r0, [r7, #4]
	printf("add_res = %ld\n",res);
 8000344:	6879      	ldr	r1, [r7, #4]
 8000346:	480b      	ldr	r0, [pc, #44]	; (8000374 <main+0x54>)
 8000348:	f000 f990 	bl	800066c <iprintf>

	res= mul_numbers(3,2);
 800034c:	2102      	movs	r1, #2
 800034e:	2003      	movs	r0, #3
 8000350:	f7ff ffd8 	bl	8000304 <mul_numbers>
 8000354:	6078      	str	r0, [r7, #4]
	printf("add_res = %ld\n",res);
 8000356:	6879      	ldr	r1, [r7, #4]
 8000358:	4806      	ldr	r0, [pc, #24]	; (8000374 <main+0x54>)
 800035a:	f000 f987 	bl	800066c <iprintf>

	res= div_numbers(4,2);
 800035e:	2102      	movs	r1, #2
 8000360:	2004      	movs	r0, #4
 8000362:	f7ff ffc1 	bl	80002e8 <div_numbers>
 8000366:	6078      	str	r0, [r7, #4]
	printf("add_res = %ld\n",res);
 8000368:	6879      	ldr	r1, [r7, #4]
 800036a:	4802      	ldr	r0, [pc, #8]	; (8000374 <main+0x54>)
 800036c:	f000 f97e 	bl	800066c <iprintf>

	for(;;);
 8000370:	e7fe      	b.n	8000370 <main+0x50>
 8000372:	bf00      	nop
 8000374:	08001510 	.word	0x08001510

08000378 <SVC_Handler>:
}

__attribute__((naked)) void SVC_Handler (void){

	//1.get the value of MSP
	__asm ("MRS R0,MSP");
 8000378:	f3ef 8008 	mrs	r0, MSP
	__asm ("B SVC_Handler_c");
 800037c:	f000 b802 	b.w	8000384 <SVC_Handler_c>


}
 8000380:	bf00      	nop
	...

08000384 <SVC_Handler_c>:

void SVC_Handler_c(uint32_t* pBaseOfStackFrame){
 8000384:	b580      	push	{r7, lr}
 8000386:	b088      	sub	sp, #32
 8000388:	af00      	add	r7, sp, #0
 800038a:	6078      	str	r0, [r7, #4]

	printf("In SVC Handler\n");
 800038c:	4823      	ldr	r0, [pc, #140]	; (800041c <SVC_Handler_c+0x98>)
 800038e:	f000 f9e1 	bl	8000754 <puts>

	int32_t arg0,arg1,res;

	uint8_t *pReturn_addr = (uint8_t*) pBaseOfStackFrame[6];
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	3318      	adds	r3, #24
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	61bb      	str	r3, [r7, #24]

	//2.decreament the address by 2 to point to
	//opcode of SVC instruction in program memory

	pReturn_addr-=2;
 800039a:	69bb      	ldr	r3, [r7, #24]
 800039c:	3b02      	subs	r3, #2
 800039e:	61bb      	str	r3, [r7, #24]

	//3. Get the SVC number

	uint8_t SVC_number = *pReturn_addr;
 80003a0:	69bb      	ldr	r3, [r7, #24]
 80003a2:	781b      	ldrb	r3, [r3, #0]
 80003a4:	75fb      	strb	r3, [r7, #23]

	printf("SVC number is %d\n",SVC_number);
 80003a6:	7dfb      	ldrb	r3, [r7, #23]
 80003a8:	4619      	mov	r1, r3
 80003aa:	481d      	ldr	r0, [pc, #116]	; (8000420 <SVC_Handler_c+0x9c>)
 80003ac:	f000 f95e 	bl	800066c <iprintf>

	arg0 = pBaseOfStackFrame[0];
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	613b      	str	r3, [r7, #16]
	arg1 = pBaseOfStackFrame[1];
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	3304      	adds	r3, #4
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	60fb      	str	r3, [r7, #12]

	switch(SVC_number){
 80003be:	7dfb      	ldrb	r3, [r7, #23]
 80003c0:	3b24      	subs	r3, #36	; 0x24
 80003c2:	2b03      	cmp	r3, #3
 80003c4:	d820      	bhi.n	8000408 <SVC_Handler_c+0x84>
 80003c6:	a201      	add	r2, pc, #4	; (adr r2, 80003cc <SVC_Handler_c+0x48>)
 80003c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003cc:	080003dd 	.word	0x080003dd
 80003d0:	080003e7 	.word	0x080003e7
 80003d4:	080003f1 	.word	0x080003f1
 80003d8:	080003fd 	.word	0x080003fd

	case 36:
		res= arg0 + arg1;
 80003dc:	693a      	ldr	r2, [r7, #16]
 80003de:	68fb      	ldr	r3, [r7, #12]
 80003e0:	4413      	add	r3, r2
 80003e2:	61fb      	str	r3, [r7, #28]
		break;
 80003e4:	e013      	b.n	800040e <SVC_Handler_c+0x8a>

	case 37:
		res= arg0 - arg1;
 80003e6:	693a      	ldr	r2, [r7, #16]
 80003e8:	68fb      	ldr	r3, [r7, #12]
 80003ea:	1ad3      	subs	r3, r2, r3
 80003ec:	61fb      	str	r3, [r7, #28]
		break;
 80003ee:	e00e      	b.n	800040e <SVC_Handler_c+0x8a>

	case 38:
		res= arg0 * arg1;
 80003f0:	693b      	ldr	r3, [r7, #16]
 80003f2:	68fa      	ldr	r2, [r7, #12]
 80003f4:	fb02 f303 	mul.w	r3, r2, r3
 80003f8:	61fb      	str	r3, [r7, #28]
		break;
 80003fa:	e008      	b.n	800040e <SVC_Handler_c+0x8a>

	case 39:
		res= arg0 / arg1;
 80003fc:	693a      	ldr	r2, [r7, #16]
 80003fe:	68fb      	ldr	r3, [r7, #12]
 8000400:	fb92 f3f3 	sdiv	r3, r2, r3
 8000404:	61fb      	str	r3, [r7, #28]
		break;
 8000406:	e002      	b.n	800040e <SVC_Handler_c+0x8a>

	default:
		printf("Invalid SVC code\n");
 8000408:	4806      	ldr	r0, [pc, #24]	; (8000424 <SVC_Handler_c+0xa0>)
 800040a:	f000 f9a3 	bl	8000754 <puts>

	}

	pBaseOfStackFrame[0] = res;
 800040e:	69fa      	ldr	r2, [r7, #28]
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	601a      	str	r2, [r3, #0]
}
 8000414:	bf00      	nop
 8000416:	3720      	adds	r7, #32
 8000418:	46bd      	mov	sp, r7
 800041a:	bd80      	pop	{r7, pc}
 800041c:	08001520 	.word	0x08001520
 8000420:	08001530 	.word	0x08001530
 8000424:	08001544 	.word	0x08001544

08000428 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000428:	b480      	push	{r7}
 800042a:	b083      	sub	sp, #12
 800042c:	af00      	add	r7, sp, #0
 800042e:	4603      	mov	r3, r0
 8000430:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000432:	4b0e      	ldr	r3, [pc, #56]	; (800046c <ITM_SendChar+0x44>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	4a0d      	ldr	r2, [pc, #52]	; (800046c <ITM_SendChar+0x44>)
 8000438:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800043c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800043e:	4b0c      	ldr	r3, [pc, #48]	; (8000470 <ITM_SendChar+0x48>)
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	4a0b      	ldr	r2, [pc, #44]	; (8000470 <ITM_SendChar+0x48>)
 8000444:	f043 0301 	orr.w	r3, r3, #1
 8000448:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800044a:	bf00      	nop
 800044c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	f003 0301 	and.w	r3, r3, #1
 8000456:	2b00      	cmp	r3, #0
 8000458:	d0f8      	beq.n	800044c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800045a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800045e:	79fb      	ldrb	r3, [r7, #7]
 8000460:	6013      	str	r3, [r2, #0]
}
 8000462:	bf00      	nop
 8000464:	370c      	adds	r7, #12
 8000466:	46bd      	mov	sp, r7
 8000468:	bc80      	pop	{r7}
 800046a:	4770      	bx	lr
 800046c:	e000edfc 	.word	0xe000edfc
 8000470:	e0000e00 	.word	0xe0000e00

08000474 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000474:	b580      	push	{r7, lr}
 8000476:	b086      	sub	sp, #24
 8000478:	af00      	add	r7, sp, #0
 800047a:	60f8      	str	r0, [r7, #12]
 800047c:	60b9      	str	r1, [r7, #8]
 800047e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000480:	2300      	movs	r3, #0
 8000482:	617b      	str	r3, [r7, #20]
 8000484:	e00a      	b.n	800049c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000486:	f3af 8000 	nop.w
 800048a:	4601      	mov	r1, r0
 800048c:	68bb      	ldr	r3, [r7, #8]
 800048e:	1c5a      	adds	r2, r3, #1
 8000490:	60ba      	str	r2, [r7, #8]
 8000492:	b2ca      	uxtb	r2, r1
 8000494:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000496:	697b      	ldr	r3, [r7, #20]
 8000498:	3301      	adds	r3, #1
 800049a:	617b      	str	r3, [r7, #20]
 800049c:	697a      	ldr	r2, [r7, #20]
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	429a      	cmp	r2, r3
 80004a2:	dbf0      	blt.n	8000486 <_read+0x12>
	}

return len;
 80004a4:	687b      	ldr	r3, [r7, #4]
}
 80004a6:	4618      	mov	r0, r3
 80004a8:	3718      	adds	r7, #24
 80004aa:	46bd      	mov	sp, r7
 80004ac:	bd80      	pop	{r7, pc}

080004ae <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004ae:	b580      	push	{r7, lr}
 80004b0:	b086      	sub	sp, #24
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	60f8      	str	r0, [r7, #12]
 80004b6:	60b9      	str	r1, [r7, #8]
 80004b8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ba:	2300      	movs	r3, #0
 80004bc:	617b      	str	r3, [r7, #20]
 80004be:	e009      	b.n	80004d4 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80004c0:	68bb      	ldr	r3, [r7, #8]
 80004c2:	1c5a      	adds	r2, r3, #1
 80004c4:	60ba      	str	r2, [r7, #8]
 80004c6:	781b      	ldrb	r3, [r3, #0]
 80004c8:	4618      	mov	r0, r3
 80004ca:	f7ff ffad 	bl	8000428 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ce:	697b      	ldr	r3, [r7, #20]
 80004d0:	3301      	adds	r3, #1
 80004d2:	617b      	str	r3, [r7, #20]
 80004d4:	697a      	ldr	r2, [r7, #20]
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	429a      	cmp	r2, r3
 80004da:	dbf1      	blt.n	80004c0 <_write+0x12>
	}
	return len;
 80004dc:	687b      	ldr	r3, [r7, #4]
}
 80004de:	4618      	mov	r0, r3
 80004e0:	3718      	adds	r7, #24
 80004e2:	46bd      	mov	sp, r7
 80004e4:	bd80      	pop	{r7, pc}

080004e6 <_close>:

int _close(int file)
{
 80004e6:	b480      	push	{r7}
 80004e8:	b083      	sub	sp, #12
 80004ea:	af00      	add	r7, sp, #0
 80004ec:	6078      	str	r0, [r7, #4]
	return -1;
 80004ee:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004f2:	4618      	mov	r0, r3
 80004f4:	370c      	adds	r7, #12
 80004f6:	46bd      	mov	sp, r7
 80004f8:	bc80      	pop	{r7}
 80004fa:	4770      	bx	lr

080004fc <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004fc:	b480      	push	{r7}
 80004fe:	b083      	sub	sp, #12
 8000500:	af00      	add	r7, sp, #0
 8000502:	6078      	str	r0, [r7, #4]
 8000504:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000506:	683b      	ldr	r3, [r7, #0]
 8000508:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800050c:	605a      	str	r2, [r3, #4]
	return 0;
 800050e:	2300      	movs	r3, #0
}
 8000510:	4618      	mov	r0, r3
 8000512:	370c      	adds	r7, #12
 8000514:	46bd      	mov	sp, r7
 8000516:	bc80      	pop	{r7}
 8000518:	4770      	bx	lr

0800051a <_isatty>:

int _isatty(int file)
{
 800051a:	b480      	push	{r7}
 800051c:	b083      	sub	sp, #12
 800051e:	af00      	add	r7, sp, #0
 8000520:	6078      	str	r0, [r7, #4]
	return 1;
 8000522:	2301      	movs	r3, #1
}
 8000524:	4618      	mov	r0, r3
 8000526:	370c      	adds	r7, #12
 8000528:	46bd      	mov	sp, r7
 800052a:	bc80      	pop	{r7}
 800052c:	4770      	bx	lr

0800052e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800052e:	b480      	push	{r7}
 8000530:	b085      	sub	sp, #20
 8000532:	af00      	add	r7, sp, #0
 8000534:	60f8      	str	r0, [r7, #12]
 8000536:	60b9      	str	r1, [r7, #8]
 8000538:	607a      	str	r2, [r7, #4]
	return 0;
 800053a:	2300      	movs	r3, #0
}
 800053c:	4618      	mov	r0, r3
 800053e:	3714      	adds	r7, #20
 8000540:	46bd      	mov	sp, r7
 8000542:	bc80      	pop	{r7}
 8000544:	4770      	bx	lr
	...

08000548 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000548:	b580      	push	{r7, lr}
 800054a:	b086      	sub	sp, #24
 800054c:	af00      	add	r7, sp, #0
 800054e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000550:	4a14      	ldr	r2, [pc, #80]	; (80005a4 <_sbrk+0x5c>)
 8000552:	4b15      	ldr	r3, [pc, #84]	; (80005a8 <_sbrk+0x60>)
 8000554:	1ad3      	subs	r3, r2, r3
 8000556:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000558:	697b      	ldr	r3, [r7, #20]
 800055a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800055c:	4b13      	ldr	r3, [pc, #76]	; (80005ac <_sbrk+0x64>)
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	2b00      	cmp	r3, #0
 8000562:	d102      	bne.n	800056a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000564:	4b11      	ldr	r3, [pc, #68]	; (80005ac <_sbrk+0x64>)
 8000566:	4a12      	ldr	r2, [pc, #72]	; (80005b0 <_sbrk+0x68>)
 8000568:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800056a:	4b10      	ldr	r3, [pc, #64]	; (80005ac <_sbrk+0x64>)
 800056c:	681a      	ldr	r2, [r3, #0]
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	4413      	add	r3, r2
 8000572:	693a      	ldr	r2, [r7, #16]
 8000574:	429a      	cmp	r2, r3
 8000576:	d207      	bcs.n	8000588 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000578:	f000 f846 	bl	8000608 <__errno>
 800057c:	4602      	mov	r2, r0
 800057e:	230c      	movs	r3, #12
 8000580:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000582:	f04f 33ff 	mov.w	r3, #4294967295
 8000586:	e009      	b.n	800059c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000588:	4b08      	ldr	r3, [pc, #32]	; (80005ac <_sbrk+0x64>)
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800058e:	4b07      	ldr	r3, [pc, #28]	; (80005ac <_sbrk+0x64>)
 8000590:	681a      	ldr	r2, [r3, #0]
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	4413      	add	r3, r2
 8000596:	4a05      	ldr	r2, [pc, #20]	; (80005ac <_sbrk+0x64>)
 8000598:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800059a:	68fb      	ldr	r3, [r7, #12]
}
 800059c:	4618      	mov	r0, r3
 800059e:	3718      	adds	r7, #24
 80005a0:	46bd      	mov	sp, r7
 80005a2:	bd80      	pop	{r7, pc}
 80005a4:	20020000 	.word	0x20020000
 80005a8:	00000400 	.word	0x00000400
 80005ac:	20000080 	.word	0x20000080
 80005b0:	20000090 	.word	0x20000090

080005b4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005b4:	480d      	ldr	r0, [pc, #52]	; (80005ec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005b6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005b8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005bc:	480c      	ldr	r0, [pc, #48]	; (80005f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80005be:	490d      	ldr	r1, [pc, #52]	; (80005f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005c0:	4a0d      	ldr	r2, [pc, #52]	; (80005f8 <LoopForever+0xe>)
  movs r3, #0
 80005c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005c4:	e002      	b.n	80005cc <LoopCopyDataInit>

080005c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ca:	3304      	adds	r3, #4

080005cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005d0:	d3f9      	bcc.n	80005c6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005d2:	4a0a      	ldr	r2, [pc, #40]	; (80005fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80005d4:	4c0a      	ldr	r4, [pc, #40]	; (8000600 <LoopForever+0x16>)
  movs r3, #0
 80005d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005d8:	e001      	b.n	80005de <LoopFillZerobss>

080005da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005dc:	3204      	adds	r2, #4

080005de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005e0:	d3fb      	bcc.n	80005da <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005e2:	f000 f817 	bl	8000614 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005e6:	f7ff fe9b 	bl	8000320 <main>

080005ea <LoopForever>:

LoopForever:
    b LoopForever
 80005ea:	e7fe      	b.n	80005ea <LoopForever>
  ldr   r0, =_estack
 80005ec:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005f4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005f8:	080015f8 	.word	0x080015f8
  ldr r2, =_sbss
 80005fc:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000600:	20000090 	.word	0x20000090

08000604 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000604:	e7fe      	b.n	8000604 <ADC_IRQHandler>
	...

08000608 <__errno>:
 8000608:	4b01      	ldr	r3, [pc, #4]	; (8000610 <__errno+0x8>)
 800060a:	6818      	ldr	r0, [r3, #0]
 800060c:	4770      	bx	lr
 800060e:	bf00      	nop
 8000610:	20000000 	.word	0x20000000

08000614 <__libc_init_array>:
 8000614:	b570      	push	{r4, r5, r6, lr}
 8000616:	4e0d      	ldr	r6, [pc, #52]	; (800064c <__libc_init_array+0x38>)
 8000618:	4c0d      	ldr	r4, [pc, #52]	; (8000650 <__libc_init_array+0x3c>)
 800061a:	1ba4      	subs	r4, r4, r6
 800061c:	10a4      	asrs	r4, r4, #2
 800061e:	2500      	movs	r5, #0
 8000620:	42a5      	cmp	r5, r4
 8000622:	d109      	bne.n	8000638 <__libc_init_array+0x24>
 8000624:	4e0b      	ldr	r6, [pc, #44]	; (8000654 <__libc_init_array+0x40>)
 8000626:	4c0c      	ldr	r4, [pc, #48]	; (8000658 <__libc_init_array+0x44>)
 8000628:	f000 ff66 	bl	80014f8 <_init>
 800062c:	1ba4      	subs	r4, r4, r6
 800062e:	10a4      	asrs	r4, r4, #2
 8000630:	2500      	movs	r5, #0
 8000632:	42a5      	cmp	r5, r4
 8000634:	d105      	bne.n	8000642 <__libc_init_array+0x2e>
 8000636:	bd70      	pop	{r4, r5, r6, pc}
 8000638:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800063c:	4798      	blx	r3
 800063e:	3501      	adds	r5, #1
 8000640:	e7ee      	b.n	8000620 <__libc_init_array+0xc>
 8000642:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000646:	4798      	blx	r3
 8000648:	3501      	adds	r5, #1
 800064a:	e7f2      	b.n	8000632 <__libc_init_array+0x1e>
 800064c:	080015f0 	.word	0x080015f0
 8000650:	080015f0 	.word	0x080015f0
 8000654:	080015f0 	.word	0x080015f0
 8000658:	080015f4 	.word	0x080015f4

0800065c <memset>:
 800065c:	4402      	add	r2, r0
 800065e:	4603      	mov	r3, r0
 8000660:	4293      	cmp	r3, r2
 8000662:	d100      	bne.n	8000666 <memset+0xa>
 8000664:	4770      	bx	lr
 8000666:	f803 1b01 	strb.w	r1, [r3], #1
 800066a:	e7f9      	b.n	8000660 <memset+0x4>

0800066c <iprintf>:
 800066c:	b40f      	push	{r0, r1, r2, r3}
 800066e:	4b0a      	ldr	r3, [pc, #40]	; (8000698 <iprintf+0x2c>)
 8000670:	b513      	push	{r0, r1, r4, lr}
 8000672:	681c      	ldr	r4, [r3, #0]
 8000674:	b124      	cbz	r4, 8000680 <iprintf+0x14>
 8000676:	69a3      	ldr	r3, [r4, #24]
 8000678:	b913      	cbnz	r3, 8000680 <iprintf+0x14>
 800067a:	4620      	mov	r0, r4
 800067c:	f000 fa22 	bl	8000ac4 <__sinit>
 8000680:	ab05      	add	r3, sp, #20
 8000682:	9a04      	ldr	r2, [sp, #16]
 8000684:	68a1      	ldr	r1, [r4, #8]
 8000686:	9301      	str	r3, [sp, #4]
 8000688:	4620      	mov	r0, r4
 800068a:	f000 fbd9 	bl	8000e40 <_vfiprintf_r>
 800068e:	b002      	add	sp, #8
 8000690:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000694:	b004      	add	sp, #16
 8000696:	4770      	bx	lr
 8000698:	20000000 	.word	0x20000000

0800069c <_puts_r>:
 800069c:	b570      	push	{r4, r5, r6, lr}
 800069e:	460e      	mov	r6, r1
 80006a0:	4605      	mov	r5, r0
 80006a2:	b118      	cbz	r0, 80006ac <_puts_r+0x10>
 80006a4:	6983      	ldr	r3, [r0, #24]
 80006a6:	b90b      	cbnz	r3, 80006ac <_puts_r+0x10>
 80006a8:	f000 fa0c 	bl	8000ac4 <__sinit>
 80006ac:	69ab      	ldr	r3, [r5, #24]
 80006ae:	68ac      	ldr	r4, [r5, #8]
 80006b0:	b913      	cbnz	r3, 80006b8 <_puts_r+0x1c>
 80006b2:	4628      	mov	r0, r5
 80006b4:	f000 fa06 	bl	8000ac4 <__sinit>
 80006b8:	4b23      	ldr	r3, [pc, #140]	; (8000748 <_puts_r+0xac>)
 80006ba:	429c      	cmp	r4, r3
 80006bc:	d117      	bne.n	80006ee <_puts_r+0x52>
 80006be:	686c      	ldr	r4, [r5, #4]
 80006c0:	89a3      	ldrh	r3, [r4, #12]
 80006c2:	071b      	lsls	r3, r3, #28
 80006c4:	d51d      	bpl.n	8000702 <_puts_r+0x66>
 80006c6:	6923      	ldr	r3, [r4, #16]
 80006c8:	b1db      	cbz	r3, 8000702 <_puts_r+0x66>
 80006ca:	3e01      	subs	r6, #1
 80006cc:	68a3      	ldr	r3, [r4, #8]
 80006ce:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006d2:	3b01      	subs	r3, #1
 80006d4:	60a3      	str	r3, [r4, #8]
 80006d6:	b9e9      	cbnz	r1, 8000714 <_puts_r+0x78>
 80006d8:	2b00      	cmp	r3, #0
 80006da:	da2e      	bge.n	800073a <_puts_r+0x9e>
 80006dc:	4622      	mov	r2, r4
 80006de:	210a      	movs	r1, #10
 80006e0:	4628      	mov	r0, r5
 80006e2:	f000 f83f 	bl	8000764 <__swbuf_r>
 80006e6:	3001      	adds	r0, #1
 80006e8:	d011      	beq.n	800070e <_puts_r+0x72>
 80006ea:	200a      	movs	r0, #10
 80006ec:	e011      	b.n	8000712 <_puts_r+0x76>
 80006ee:	4b17      	ldr	r3, [pc, #92]	; (800074c <_puts_r+0xb0>)
 80006f0:	429c      	cmp	r4, r3
 80006f2:	d101      	bne.n	80006f8 <_puts_r+0x5c>
 80006f4:	68ac      	ldr	r4, [r5, #8]
 80006f6:	e7e3      	b.n	80006c0 <_puts_r+0x24>
 80006f8:	4b15      	ldr	r3, [pc, #84]	; (8000750 <_puts_r+0xb4>)
 80006fa:	429c      	cmp	r4, r3
 80006fc:	bf08      	it	eq
 80006fe:	68ec      	ldreq	r4, [r5, #12]
 8000700:	e7de      	b.n	80006c0 <_puts_r+0x24>
 8000702:	4621      	mov	r1, r4
 8000704:	4628      	mov	r0, r5
 8000706:	f000 f87f 	bl	8000808 <__swsetup_r>
 800070a:	2800      	cmp	r0, #0
 800070c:	d0dd      	beq.n	80006ca <_puts_r+0x2e>
 800070e:	f04f 30ff 	mov.w	r0, #4294967295
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	2b00      	cmp	r3, #0
 8000716:	da04      	bge.n	8000722 <_puts_r+0x86>
 8000718:	69a2      	ldr	r2, [r4, #24]
 800071a:	429a      	cmp	r2, r3
 800071c:	dc06      	bgt.n	800072c <_puts_r+0x90>
 800071e:	290a      	cmp	r1, #10
 8000720:	d004      	beq.n	800072c <_puts_r+0x90>
 8000722:	6823      	ldr	r3, [r4, #0]
 8000724:	1c5a      	adds	r2, r3, #1
 8000726:	6022      	str	r2, [r4, #0]
 8000728:	7019      	strb	r1, [r3, #0]
 800072a:	e7cf      	b.n	80006cc <_puts_r+0x30>
 800072c:	4622      	mov	r2, r4
 800072e:	4628      	mov	r0, r5
 8000730:	f000 f818 	bl	8000764 <__swbuf_r>
 8000734:	3001      	adds	r0, #1
 8000736:	d1c9      	bne.n	80006cc <_puts_r+0x30>
 8000738:	e7e9      	b.n	800070e <_puts_r+0x72>
 800073a:	6823      	ldr	r3, [r4, #0]
 800073c:	200a      	movs	r0, #10
 800073e:	1c5a      	adds	r2, r3, #1
 8000740:	6022      	str	r2, [r4, #0]
 8000742:	7018      	strb	r0, [r3, #0]
 8000744:	e7e5      	b.n	8000712 <_puts_r+0x76>
 8000746:	bf00      	nop
 8000748:	0800157c 	.word	0x0800157c
 800074c:	0800159c 	.word	0x0800159c
 8000750:	0800155c 	.word	0x0800155c

08000754 <puts>:
 8000754:	4b02      	ldr	r3, [pc, #8]	; (8000760 <puts+0xc>)
 8000756:	4601      	mov	r1, r0
 8000758:	6818      	ldr	r0, [r3, #0]
 800075a:	f7ff bf9f 	b.w	800069c <_puts_r>
 800075e:	bf00      	nop
 8000760:	20000000 	.word	0x20000000

08000764 <__swbuf_r>:
 8000764:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000766:	460e      	mov	r6, r1
 8000768:	4614      	mov	r4, r2
 800076a:	4605      	mov	r5, r0
 800076c:	b118      	cbz	r0, 8000776 <__swbuf_r+0x12>
 800076e:	6983      	ldr	r3, [r0, #24]
 8000770:	b90b      	cbnz	r3, 8000776 <__swbuf_r+0x12>
 8000772:	f000 f9a7 	bl	8000ac4 <__sinit>
 8000776:	4b21      	ldr	r3, [pc, #132]	; (80007fc <__swbuf_r+0x98>)
 8000778:	429c      	cmp	r4, r3
 800077a:	d12a      	bne.n	80007d2 <__swbuf_r+0x6e>
 800077c:	686c      	ldr	r4, [r5, #4]
 800077e:	69a3      	ldr	r3, [r4, #24]
 8000780:	60a3      	str	r3, [r4, #8]
 8000782:	89a3      	ldrh	r3, [r4, #12]
 8000784:	071a      	lsls	r2, r3, #28
 8000786:	d52e      	bpl.n	80007e6 <__swbuf_r+0x82>
 8000788:	6923      	ldr	r3, [r4, #16]
 800078a:	b363      	cbz	r3, 80007e6 <__swbuf_r+0x82>
 800078c:	6923      	ldr	r3, [r4, #16]
 800078e:	6820      	ldr	r0, [r4, #0]
 8000790:	1ac0      	subs	r0, r0, r3
 8000792:	6963      	ldr	r3, [r4, #20]
 8000794:	b2f6      	uxtb	r6, r6
 8000796:	4283      	cmp	r3, r0
 8000798:	4637      	mov	r7, r6
 800079a:	dc04      	bgt.n	80007a6 <__swbuf_r+0x42>
 800079c:	4621      	mov	r1, r4
 800079e:	4628      	mov	r0, r5
 80007a0:	f000 f926 	bl	80009f0 <_fflush_r>
 80007a4:	bb28      	cbnz	r0, 80007f2 <__swbuf_r+0x8e>
 80007a6:	68a3      	ldr	r3, [r4, #8]
 80007a8:	3b01      	subs	r3, #1
 80007aa:	60a3      	str	r3, [r4, #8]
 80007ac:	6823      	ldr	r3, [r4, #0]
 80007ae:	1c5a      	adds	r2, r3, #1
 80007b0:	6022      	str	r2, [r4, #0]
 80007b2:	701e      	strb	r6, [r3, #0]
 80007b4:	6963      	ldr	r3, [r4, #20]
 80007b6:	3001      	adds	r0, #1
 80007b8:	4283      	cmp	r3, r0
 80007ba:	d004      	beq.n	80007c6 <__swbuf_r+0x62>
 80007bc:	89a3      	ldrh	r3, [r4, #12]
 80007be:	07db      	lsls	r3, r3, #31
 80007c0:	d519      	bpl.n	80007f6 <__swbuf_r+0x92>
 80007c2:	2e0a      	cmp	r6, #10
 80007c4:	d117      	bne.n	80007f6 <__swbuf_r+0x92>
 80007c6:	4621      	mov	r1, r4
 80007c8:	4628      	mov	r0, r5
 80007ca:	f000 f911 	bl	80009f0 <_fflush_r>
 80007ce:	b190      	cbz	r0, 80007f6 <__swbuf_r+0x92>
 80007d0:	e00f      	b.n	80007f2 <__swbuf_r+0x8e>
 80007d2:	4b0b      	ldr	r3, [pc, #44]	; (8000800 <__swbuf_r+0x9c>)
 80007d4:	429c      	cmp	r4, r3
 80007d6:	d101      	bne.n	80007dc <__swbuf_r+0x78>
 80007d8:	68ac      	ldr	r4, [r5, #8]
 80007da:	e7d0      	b.n	800077e <__swbuf_r+0x1a>
 80007dc:	4b09      	ldr	r3, [pc, #36]	; (8000804 <__swbuf_r+0xa0>)
 80007de:	429c      	cmp	r4, r3
 80007e0:	bf08      	it	eq
 80007e2:	68ec      	ldreq	r4, [r5, #12]
 80007e4:	e7cb      	b.n	800077e <__swbuf_r+0x1a>
 80007e6:	4621      	mov	r1, r4
 80007e8:	4628      	mov	r0, r5
 80007ea:	f000 f80d 	bl	8000808 <__swsetup_r>
 80007ee:	2800      	cmp	r0, #0
 80007f0:	d0cc      	beq.n	800078c <__swbuf_r+0x28>
 80007f2:	f04f 37ff 	mov.w	r7, #4294967295
 80007f6:	4638      	mov	r0, r7
 80007f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007fa:	bf00      	nop
 80007fc:	0800157c 	.word	0x0800157c
 8000800:	0800159c 	.word	0x0800159c
 8000804:	0800155c 	.word	0x0800155c

08000808 <__swsetup_r>:
 8000808:	4b32      	ldr	r3, [pc, #200]	; (80008d4 <__swsetup_r+0xcc>)
 800080a:	b570      	push	{r4, r5, r6, lr}
 800080c:	681d      	ldr	r5, [r3, #0]
 800080e:	4606      	mov	r6, r0
 8000810:	460c      	mov	r4, r1
 8000812:	b125      	cbz	r5, 800081e <__swsetup_r+0x16>
 8000814:	69ab      	ldr	r3, [r5, #24]
 8000816:	b913      	cbnz	r3, 800081e <__swsetup_r+0x16>
 8000818:	4628      	mov	r0, r5
 800081a:	f000 f953 	bl	8000ac4 <__sinit>
 800081e:	4b2e      	ldr	r3, [pc, #184]	; (80008d8 <__swsetup_r+0xd0>)
 8000820:	429c      	cmp	r4, r3
 8000822:	d10f      	bne.n	8000844 <__swsetup_r+0x3c>
 8000824:	686c      	ldr	r4, [r5, #4]
 8000826:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800082a:	b29a      	uxth	r2, r3
 800082c:	0715      	lsls	r5, r2, #28
 800082e:	d42c      	bmi.n	800088a <__swsetup_r+0x82>
 8000830:	06d0      	lsls	r0, r2, #27
 8000832:	d411      	bmi.n	8000858 <__swsetup_r+0x50>
 8000834:	2209      	movs	r2, #9
 8000836:	6032      	str	r2, [r6, #0]
 8000838:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800083c:	81a3      	strh	r3, [r4, #12]
 800083e:	f04f 30ff 	mov.w	r0, #4294967295
 8000842:	e03e      	b.n	80008c2 <__swsetup_r+0xba>
 8000844:	4b25      	ldr	r3, [pc, #148]	; (80008dc <__swsetup_r+0xd4>)
 8000846:	429c      	cmp	r4, r3
 8000848:	d101      	bne.n	800084e <__swsetup_r+0x46>
 800084a:	68ac      	ldr	r4, [r5, #8]
 800084c:	e7eb      	b.n	8000826 <__swsetup_r+0x1e>
 800084e:	4b24      	ldr	r3, [pc, #144]	; (80008e0 <__swsetup_r+0xd8>)
 8000850:	429c      	cmp	r4, r3
 8000852:	bf08      	it	eq
 8000854:	68ec      	ldreq	r4, [r5, #12]
 8000856:	e7e6      	b.n	8000826 <__swsetup_r+0x1e>
 8000858:	0751      	lsls	r1, r2, #29
 800085a:	d512      	bpl.n	8000882 <__swsetup_r+0x7a>
 800085c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800085e:	b141      	cbz	r1, 8000872 <__swsetup_r+0x6a>
 8000860:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000864:	4299      	cmp	r1, r3
 8000866:	d002      	beq.n	800086e <__swsetup_r+0x66>
 8000868:	4630      	mov	r0, r6
 800086a:	f000 fa19 	bl	8000ca0 <_free_r>
 800086e:	2300      	movs	r3, #0
 8000870:	6363      	str	r3, [r4, #52]	; 0x34
 8000872:	89a3      	ldrh	r3, [r4, #12]
 8000874:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000878:	81a3      	strh	r3, [r4, #12]
 800087a:	2300      	movs	r3, #0
 800087c:	6063      	str	r3, [r4, #4]
 800087e:	6923      	ldr	r3, [r4, #16]
 8000880:	6023      	str	r3, [r4, #0]
 8000882:	89a3      	ldrh	r3, [r4, #12]
 8000884:	f043 0308 	orr.w	r3, r3, #8
 8000888:	81a3      	strh	r3, [r4, #12]
 800088a:	6923      	ldr	r3, [r4, #16]
 800088c:	b94b      	cbnz	r3, 80008a2 <__swsetup_r+0x9a>
 800088e:	89a3      	ldrh	r3, [r4, #12]
 8000890:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000894:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000898:	d003      	beq.n	80008a2 <__swsetup_r+0x9a>
 800089a:	4621      	mov	r1, r4
 800089c:	4630      	mov	r0, r6
 800089e:	f000 f9bf 	bl	8000c20 <__smakebuf_r>
 80008a2:	89a2      	ldrh	r2, [r4, #12]
 80008a4:	f012 0301 	ands.w	r3, r2, #1
 80008a8:	d00c      	beq.n	80008c4 <__swsetup_r+0xbc>
 80008aa:	2300      	movs	r3, #0
 80008ac:	60a3      	str	r3, [r4, #8]
 80008ae:	6963      	ldr	r3, [r4, #20]
 80008b0:	425b      	negs	r3, r3
 80008b2:	61a3      	str	r3, [r4, #24]
 80008b4:	6923      	ldr	r3, [r4, #16]
 80008b6:	b953      	cbnz	r3, 80008ce <__swsetup_r+0xc6>
 80008b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008bc:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80008c0:	d1ba      	bne.n	8000838 <__swsetup_r+0x30>
 80008c2:	bd70      	pop	{r4, r5, r6, pc}
 80008c4:	0792      	lsls	r2, r2, #30
 80008c6:	bf58      	it	pl
 80008c8:	6963      	ldrpl	r3, [r4, #20]
 80008ca:	60a3      	str	r3, [r4, #8]
 80008cc:	e7f2      	b.n	80008b4 <__swsetup_r+0xac>
 80008ce:	2000      	movs	r0, #0
 80008d0:	e7f7      	b.n	80008c2 <__swsetup_r+0xba>
 80008d2:	bf00      	nop
 80008d4:	20000000 	.word	0x20000000
 80008d8:	0800157c 	.word	0x0800157c
 80008dc:	0800159c 	.word	0x0800159c
 80008e0:	0800155c 	.word	0x0800155c

080008e4 <__sflush_r>:
 80008e4:	898a      	ldrh	r2, [r1, #12]
 80008e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008ea:	4605      	mov	r5, r0
 80008ec:	0710      	lsls	r0, r2, #28
 80008ee:	460c      	mov	r4, r1
 80008f0:	d458      	bmi.n	80009a4 <__sflush_r+0xc0>
 80008f2:	684b      	ldr	r3, [r1, #4]
 80008f4:	2b00      	cmp	r3, #0
 80008f6:	dc05      	bgt.n	8000904 <__sflush_r+0x20>
 80008f8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008fa:	2b00      	cmp	r3, #0
 80008fc:	dc02      	bgt.n	8000904 <__sflush_r+0x20>
 80008fe:	2000      	movs	r0, #0
 8000900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000904:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000906:	2e00      	cmp	r6, #0
 8000908:	d0f9      	beq.n	80008fe <__sflush_r+0x1a>
 800090a:	2300      	movs	r3, #0
 800090c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000910:	682f      	ldr	r7, [r5, #0]
 8000912:	6a21      	ldr	r1, [r4, #32]
 8000914:	602b      	str	r3, [r5, #0]
 8000916:	d032      	beq.n	800097e <__sflush_r+0x9a>
 8000918:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800091a:	89a3      	ldrh	r3, [r4, #12]
 800091c:	075a      	lsls	r2, r3, #29
 800091e:	d505      	bpl.n	800092c <__sflush_r+0x48>
 8000920:	6863      	ldr	r3, [r4, #4]
 8000922:	1ac0      	subs	r0, r0, r3
 8000924:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000926:	b10b      	cbz	r3, 800092c <__sflush_r+0x48>
 8000928:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800092a:	1ac0      	subs	r0, r0, r3
 800092c:	2300      	movs	r3, #0
 800092e:	4602      	mov	r2, r0
 8000930:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000932:	6a21      	ldr	r1, [r4, #32]
 8000934:	4628      	mov	r0, r5
 8000936:	47b0      	blx	r6
 8000938:	1c43      	adds	r3, r0, #1
 800093a:	89a3      	ldrh	r3, [r4, #12]
 800093c:	d106      	bne.n	800094c <__sflush_r+0x68>
 800093e:	6829      	ldr	r1, [r5, #0]
 8000940:	291d      	cmp	r1, #29
 8000942:	d848      	bhi.n	80009d6 <__sflush_r+0xf2>
 8000944:	4a29      	ldr	r2, [pc, #164]	; (80009ec <__sflush_r+0x108>)
 8000946:	40ca      	lsrs	r2, r1
 8000948:	07d6      	lsls	r6, r2, #31
 800094a:	d544      	bpl.n	80009d6 <__sflush_r+0xf2>
 800094c:	2200      	movs	r2, #0
 800094e:	6062      	str	r2, [r4, #4]
 8000950:	04d9      	lsls	r1, r3, #19
 8000952:	6922      	ldr	r2, [r4, #16]
 8000954:	6022      	str	r2, [r4, #0]
 8000956:	d504      	bpl.n	8000962 <__sflush_r+0x7e>
 8000958:	1c42      	adds	r2, r0, #1
 800095a:	d101      	bne.n	8000960 <__sflush_r+0x7c>
 800095c:	682b      	ldr	r3, [r5, #0]
 800095e:	b903      	cbnz	r3, 8000962 <__sflush_r+0x7e>
 8000960:	6560      	str	r0, [r4, #84]	; 0x54
 8000962:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000964:	602f      	str	r7, [r5, #0]
 8000966:	2900      	cmp	r1, #0
 8000968:	d0c9      	beq.n	80008fe <__sflush_r+0x1a>
 800096a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800096e:	4299      	cmp	r1, r3
 8000970:	d002      	beq.n	8000978 <__sflush_r+0x94>
 8000972:	4628      	mov	r0, r5
 8000974:	f000 f994 	bl	8000ca0 <_free_r>
 8000978:	2000      	movs	r0, #0
 800097a:	6360      	str	r0, [r4, #52]	; 0x34
 800097c:	e7c0      	b.n	8000900 <__sflush_r+0x1c>
 800097e:	2301      	movs	r3, #1
 8000980:	4628      	mov	r0, r5
 8000982:	47b0      	blx	r6
 8000984:	1c41      	adds	r1, r0, #1
 8000986:	d1c8      	bne.n	800091a <__sflush_r+0x36>
 8000988:	682b      	ldr	r3, [r5, #0]
 800098a:	2b00      	cmp	r3, #0
 800098c:	d0c5      	beq.n	800091a <__sflush_r+0x36>
 800098e:	2b1d      	cmp	r3, #29
 8000990:	d001      	beq.n	8000996 <__sflush_r+0xb2>
 8000992:	2b16      	cmp	r3, #22
 8000994:	d101      	bne.n	800099a <__sflush_r+0xb6>
 8000996:	602f      	str	r7, [r5, #0]
 8000998:	e7b1      	b.n	80008fe <__sflush_r+0x1a>
 800099a:	89a3      	ldrh	r3, [r4, #12]
 800099c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009a0:	81a3      	strh	r3, [r4, #12]
 80009a2:	e7ad      	b.n	8000900 <__sflush_r+0x1c>
 80009a4:	690f      	ldr	r7, [r1, #16]
 80009a6:	2f00      	cmp	r7, #0
 80009a8:	d0a9      	beq.n	80008fe <__sflush_r+0x1a>
 80009aa:	0793      	lsls	r3, r2, #30
 80009ac:	680e      	ldr	r6, [r1, #0]
 80009ae:	bf08      	it	eq
 80009b0:	694b      	ldreq	r3, [r1, #20]
 80009b2:	600f      	str	r7, [r1, #0]
 80009b4:	bf18      	it	ne
 80009b6:	2300      	movne	r3, #0
 80009b8:	eba6 0807 	sub.w	r8, r6, r7
 80009bc:	608b      	str	r3, [r1, #8]
 80009be:	f1b8 0f00 	cmp.w	r8, #0
 80009c2:	dd9c      	ble.n	80008fe <__sflush_r+0x1a>
 80009c4:	4643      	mov	r3, r8
 80009c6:	463a      	mov	r2, r7
 80009c8:	6a21      	ldr	r1, [r4, #32]
 80009ca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80009cc:	4628      	mov	r0, r5
 80009ce:	47b0      	blx	r6
 80009d0:	2800      	cmp	r0, #0
 80009d2:	dc06      	bgt.n	80009e2 <__sflush_r+0xfe>
 80009d4:	89a3      	ldrh	r3, [r4, #12]
 80009d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009da:	81a3      	strh	r3, [r4, #12]
 80009dc:	f04f 30ff 	mov.w	r0, #4294967295
 80009e0:	e78e      	b.n	8000900 <__sflush_r+0x1c>
 80009e2:	4407      	add	r7, r0
 80009e4:	eba8 0800 	sub.w	r8, r8, r0
 80009e8:	e7e9      	b.n	80009be <__sflush_r+0xda>
 80009ea:	bf00      	nop
 80009ec:	20400001 	.word	0x20400001

080009f0 <_fflush_r>:
 80009f0:	b538      	push	{r3, r4, r5, lr}
 80009f2:	690b      	ldr	r3, [r1, #16]
 80009f4:	4605      	mov	r5, r0
 80009f6:	460c      	mov	r4, r1
 80009f8:	b1db      	cbz	r3, 8000a32 <_fflush_r+0x42>
 80009fa:	b118      	cbz	r0, 8000a04 <_fflush_r+0x14>
 80009fc:	6983      	ldr	r3, [r0, #24]
 80009fe:	b90b      	cbnz	r3, 8000a04 <_fflush_r+0x14>
 8000a00:	f000 f860 	bl	8000ac4 <__sinit>
 8000a04:	4b0c      	ldr	r3, [pc, #48]	; (8000a38 <_fflush_r+0x48>)
 8000a06:	429c      	cmp	r4, r3
 8000a08:	d109      	bne.n	8000a1e <_fflush_r+0x2e>
 8000a0a:	686c      	ldr	r4, [r5, #4]
 8000a0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a10:	b17b      	cbz	r3, 8000a32 <_fflush_r+0x42>
 8000a12:	4621      	mov	r1, r4
 8000a14:	4628      	mov	r0, r5
 8000a16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a1a:	f7ff bf63 	b.w	80008e4 <__sflush_r>
 8000a1e:	4b07      	ldr	r3, [pc, #28]	; (8000a3c <_fflush_r+0x4c>)
 8000a20:	429c      	cmp	r4, r3
 8000a22:	d101      	bne.n	8000a28 <_fflush_r+0x38>
 8000a24:	68ac      	ldr	r4, [r5, #8]
 8000a26:	e7f1      	b.n	8000a0c <_fflush_r+0x1c>
 8000a28:	4b05      	ldr	r3, [pc, #20]	; (8000a40 <_fflush_r+0x50>)
 8000a2a:	429c      	cmp	r4, r3
 8000a2c:	bf08      	it	eq
 8000a2e:	68ec      	ldreq	r4, [r5, #12]
 8000a30:	e7ec      	b.n	8000a0c <_fflush_r+0x1c>
 8000a32:	2000      	movs	r0, #0
 8000a34:	bd38      	pop	{r3, r4, r5, pc}
 8000a36:	bf00      	nop
 8000a38:	0800157c 	.word	0x0800157c
 8000a3c:	0800159c 	.word	0x0800159c
 8000a40:	0800155c 	.word	0x0800155c

08000a44 <std>:
 8000a44:	2300      	movs	r3, #0
 8000a46:	b510      	push	{r4, lr}
 8000a48:	4604      	mov	r4, r0
 8000a4a:	e9c0 3300 	strd	r3, r3, [r0]
 8000a4e:	6083      	str	r3, [r0, #8]
 8000a50:	8181      	strh	r1, [r0, #12]
 8000a52:	6643      	str	r3, [r0, #100]	; 0x64
 8000a54:	81c2      	strh	r2, [r0, #14]
 8000a56:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a5a:	6183      	str	r3, [r0, #24]
 8000a5c:	4619      	mov	r1, r3
 8000a5e:	2208      	movs	r2, #8
 8000a60:	305c      	adds	r0, #92	; 0x5c
 8000a62:	f7ff fdfb 	bl	800065c <memset>
 8000a66:	4b05      	ldr	r3, [pc, #20]	; (8000a7c <std+0x38>)
 8000a68:	6263      	str	r3, [r4, #36]	; 0x24
 8000a6a:	4b05      	ldr	r3, [pc, #20]	; (8000a80 <std+0x3c>)
 8000a6c:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a6e:	4b05      	ldr	r3, [pc, #20]	; (8000a84 <std+0x40>)
 8000a70:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a72:	4b05      	ldr	r3, [pc, #20]	; (8000a88 <std+0x44>)
 8000a74:	6224      	str	r4, [r4, #32]
 8000a76:	6323      	str	r3, [r4, #48]	; 0x30
 8000a78:	bd10      	pop	{r4, pc}
 8000a7a:	bf00      	nop
 8000a7c:	0800139d 	.word	0x0800139d
 8000a80:	080013bf 	.word	0x080013bf
 8000a84:	080013f7 	.word	0x080013f7
 8000a88:	0800141b 	.word	0x0800141b

08000a8c <_cleanup_r>:
 8000a8c:	4901      	ldr	r1, [pc, #4]	; (8000a94 <_cleanup_r+0x8>)
 8000a8e:	f000 b885 	b.w	8000b9c <_fwalk_reent>
 8000a92:	bf00      	nop
 8000a94:	080009f1 	.word	0x080009f1

08000a98 <__sfmoreglue>:
 8000a98:	b570      	push	{r4, r5, r6, lr}
 8000a9a:	1e4a      	subs	r2, r1, #1
 8000a9c:	2568      	movs	r5, #104	; 0x68
 8000a9e:	4355      	muls	r5, r2
 8000aa0:	460e      	mov	r6, r1
 8000aa2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000aa6:	f000 f949 	bl	8000d3c <_malloc_r>
 8000aaa:	4604      	mov	r4, r0
 8000aac:	b140      	cbz	r0, 8000ac0 <__sfmoreglue+0x28>
 8000aae:	2100      	movs	r1, #0
 8000ab0:	e9c0 1600 	strd	r1, r6, [r0]
 8000ab4:	300c      	adds	r0, #12
 8000ab6:	60a0      	str	r0, [r4, #8]
 8000ab8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000abc:	f7ff fdce 	bl	800065c <memset>
 8000ac0:	4620      	mov	r0, r4
 8000ac2:	bd70      	pop	{r4, r5, r6, pc}

08000ac4 <__sinit>:
 8000ac4:	6983      	ldr	r3, [r0, #24]
 8000ac6:	b510      	push	{r4, lr}
 8000ac8:	4604      	mov	r4, r0
 8000aca:	bb33      	cbnz	r3, 8000b1a <__sinit+0x56>
 8000acc:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000ad0:	6503      	str	r3, [r0, #80]	; 0x50
 8000ad2:	4b12      	ldr	r3, [pc, #72]	; (8000b1c <__sinit+0x58>)
 8000ad4:	4a12      	ldr	r2, [pc, #72]	; (8000b20 <__sinit+0x5c>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	6282      	str	r2, [r0, #40]	; 0x28
 8000ada:	4298      	cmp	r0, r3
 8000adc:	bf04      	itt	eq
 8000ade:	2301      	moveq	r3, #1
 8000ae0:	6183      	streq	r3, [r0, #24]
 8000ae2:	f000 f81f 	bl	8000b24 <__sfp>
 8000ae6:	6060      	str	r0, [r4, #4]
 8000ae8:	4620      	mov	r0, r4
 8000aea:	f000 f81b 	bl	8000b24 <__sfp>
 8000aee:	60a0      	str	r0, [r4, #8]
 8000af0:	4620      	mov	r0, r4
 8000af2:	f000 f817 	bl	8000b24 <__sfp>
 8000af6:	2200      	movs	r2, #0
 8000af8:	60e0      	str	r0, [r4, #12]
 8000afa:	2104      	movs	r1, #4
 8000afc:	6860      	ldr	r0, [r4, #4]
 8000afe:	f7ff ffa1 	bl	8000a44 <std>
 8000b02:	2201      	movs	r2, #1
 8000b04:	2109      	movs	r1, #9
 8000b06:	68a0      	ldr	r0, [r4, #8]
 8000b08:	f7ff ff9c 	bl	8000a44 <std>
 8000b0c:	2202      	movs	r2, #2
 8000b0e:	2112      	movs	r1, #18
 8000b10:	68e0      	ldr	r0, [r4, #12]
 8000b12:	f7ff ff97 	bl	8000a44 <std>
 8000b16:	2301      	movs	r3, #1
 8000b18:	61a3      	str	r3, [r4, #24]
 8000b1a:	bd10      	pop	{r4, pc}
 8000b1c:	08001558 	.word	0x08001558
 8000b20:	08000a8d 	.word	0x08000a8d

08000b24 <__sfp>:
 8000b24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b26:	4b1b      	ldr	r3, [pc, #108]	; (8000b94 <__sfp+0x70>)
 8000b28:	681e      	ldr	r6, [r3, #0]
 8000b2a:	69b3      	ldr	r3, [r6, #24]
 8000b2c:	4607      	mov	r7, r0
 8000b2e:	b913      	cbnz	r3, 8000b36 <__sfp+0x12>
 8000b30:	4630      	mov	r0, r6
 8000b32:	f7ff ffc7 	bl	8000ac4 <__sinit>
 8000b36:	3648      	adds	r6, #72	; 0x48
 8000b38:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b3c:	3b01      	subs	r3, #1
 8000b3e:	d503      	bpl.n	8000b48 <__sfp+0x24>
 8000b40:	6833      	ldr	r3, [r6, #0]
 8000b42:	b133      	cbz	r3, 8000b52 <__sfp+0x2e>
 8000b44:	6836      	ldr	r6, [r6, #0]
 8000b46:	e7f7      	b.n	8000b38 <__sfp+0x14>
 8000b48:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b4c:	b16d      	cbz	r5, 8000b6a <__sfp+0x46>
 8000b4e:	3468      	adds	r4, #104	; 0x68
 8000b50:	e7f4      	b.n	8000b3c <__sfp+0x18>
 8000b52:	2104      	movs	r1, #4
 8000b54:	4638      	mov	r0, r7
 8000b56:	f7ff ff9f 	bl	8000a98 <__sfmoreglue>
 8000b5a:	6030      	str	r0, [r6, #0]
 8000b5c:	2800      	cmp	r0, #0
 8000b5e:	d1f1      	bne.n	8000b44 <__sfp+0x20>
 8000b60:	230c      	movs	r3, #12
 8000b62:	603b      	str	r3, [r7, #0]
 8000b64:	4604      	mov	r4, r0
 8000b66:	4620      	mov	r0, r4
 8000b68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b6a:	4b0b      	ldr	r3, [pc, #44]	; (8000b98 <__sfp+0x74>)
 8000b6c:	6665      	str	r5, [r4, #100]	; 0x64
 8000b6e:	e9c4 5500 	strd	r5, r5, [r4]
 8000b72:	60a5      	str	r5, [r4, #8]
 8000b74:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b78:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b7c:	2208      	movs	r2, #8
 8000b7e:	4629      	mov	r1, r5
 8000b80:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b84:	f7ff fd6a 	bl	800065c <memset>
 8000b88:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b8c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b90:	e7e9      	b.n	8000b66 <__sfp+0x42>
 8000b92:	bf00      	nop
 8000b94:	08001558 	.word	0x08001558
 8000b98:	ffff0001 	.word	0xffff0001

08000b9c <_fwalk_reent>:
 8000b9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ba0:	4680      	mov	r8, r0
 8000ba2:	4689      	mov	r9, r1
 8000ba4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000ba8:	2600      	movs	r6, #0
 8000baa:	b914      	cbnz	r4, 8000bb2 <_fwalk_reent+0x16>
 8000bac:	4630      	mov	r0, r6
 8000bae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bb2:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000bb6:	3f01      	subs	r7, #1
 8000bb8:	d501      	bpl.n	8000bbe <_fwalk_reent+0x22>
 8000bba:	6824      	ldr	r4, [r4, #0]
 8000bbc:	e7f5      	b.n	8000baa <_fwalk_reent+0xe>
 8000bbe:	89ab      	ldrh	r3, [r5, #12]
 8000bc0:	2b01      	cmp	r3, #1
 8000bc2:	d907      	bls.n	8000bd4 <_fwalk_reent+0x38>
 8000bc4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bc8:	3301      	adds	r3, #1
 8000bca:	d003      	beq.n	8000bd4 <_fwalk_reent+0x38>
 8000bcc:	4629      	mov	r1, r5
 8000bce:	4640      	mov	r0, r8
 8000bd0:	47c8      	blx	r9
 8000bd2:	4306      	orrs	r6, r0
 8000bd4:	3568      	adds	r5, #104	; 0x68
 8000bd6:	e7ee      	b.n	8000bb6 <_fwalk_reent+0x1a>

08000bd8 <__swhatbuf_r>:
 8000bd8:	b570      	push	{r4, r5, r6, lr}
 8000bda:	460e      	mov	r6, r1
 8000bdc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000be0:	2900      	cmp	r1, #0
 8000be2:	b096      	sub	sp, #88	; 0x58
 8000be4:	4614      	mov	r4, r2
 8000be6:	461d      	mov	r5, r3
 8000be8:	da07      	bge.n	8000bfa <__swhatbuf_r+0x22>
 8000bea:	2300      	movs	r3, #0
 8000bec:	602b      	str	r3, [r5, #0]
 8000bee:	89b3      	ldrh	r3, [r6, #12]
 8000bf0:	061a      	lsls	r2, r3, #24
 8000bf2:	d410      	bmi.n	8000c16 <__swhatbuf_r+0x3e>
 8000bf4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bf8:	e00e      	b.n	8000c18 <__swhatbuf_r+0x40>
 8000bfa:	466a      	mov	r2, sp
 8000bfc:	f000 fc34 	bl	8001468 <_fstat_r>
 8000c00:	2800      	cmp	r0, #0
 8000c02:	dbf2      	blt.n	8000bea <__swhatbuf_r+0x12>
 8000c04:	9a01      	ldr	r2, [sp, #4]
 8000c06:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c0a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c0e:	425a      	negs	r2, r3
 8000c10:	415a      	adcs	r2, r3
 8000c12:	602a      	str	r2, [r5, #0]
 8000c14:	e7ee      	b.n	8000bf4 <__swhatbuf_r+0x1c>
 8000c16:	2340      	movs	r3, #64	; 0x40
 8000c18:	2000      	movs	r0, #0
 8000c1a:	6023      	str	r3, [r4, #0]
 8000c1c:	b016      	add	sp, #88	; 0x58
 8000c1e:	bd70      	pop	{r4, r5, r6, pc}

08000c20 <__smakebuf_r>:
 8000c20:	898b      	ldrh	r3, [r1, #12]
 8000c22:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c24:	079d      	lsls	r5, r3, #30
 8000c26:	4606      	mov	r6, r0
 8000c28:	460c      	mov	r4, r1
 8000c2a:	d507      	bpl.n	8000c3c <__smakebuf_r+0x1c>
 8000c2c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c30:	6023      	str	r3, [r4, #0]
 8000c32:	6123      	str	r3, [r4, #16]
 8000c34:	2301      	movs	r3, #1
 8000c36:	6163      	str	r3, [r4, #20]
 8000c38:	b002      	add	sp, #8
 8000c3a:	bd70      	pop	{r4, r5, r6, pc}
 8000c3c:	ab01      	add	r3, sp, #4
 8000c3e:	466a      	mov	r2, sp
 8000c40:	f7ff ffca 	bl	8000bd8 <__swhatbuf_r>
 8000c44:	9900      	ldr	r1, [sp, #0]
 8000c46:	4605      	mov	r5, r0
 8000c48:	4630      	mov	r0, r6
 8000c4a:	f000 f877 	bl	8000d3c <_malloc_r>
 8000c4e:	b948      	cbnz	r0, 8000c64 <__smakebuf_r+0x44>
 8000c50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c54:	059a      	lsls	r2, r3, #22
 8000c56:	d4ef      	bmi.n	8000c38 <__smakebuf_r+0x18>
 8000c58:	f023 0303 	bic.w	r3, r3, #3
 8000c5c:	f043 0302 	orr.w	r3, r3, #2
 8000c60:	81a3      	strh	r3, [r4, #12]
 8000c62:	e7e3      	b.n	8000c2c <__smakebuf_r+0xc>
 8000c64:	4b0d      	ldr	r3, [pc, #52]	; (8000c9c <__smakebuf_r+0x7c>)
 8000c66:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c68:	89a3      	ldrh	r3, [r4, #12]
 8000c6a:	6020      	str	r0, [r4, #0]
 8000c6c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c70:	81a3      	strh	r3, [r4, #12]
 8000c72:	9b00      	ldr	r3, [sp, #0]
 8000c74:	6163      	str	r3, [r4, #20]
 8000c76:	9b01      	ldr	r3, [sp, #4]
 8000c78:	6120      	str	r0, [r4, #16]
 8000c7a:	b15b      	cbz	r3, 8000c94 <__smakebuf_r+0x74>
 8000c7c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c80:	4630      	mov	r0, r6
 8000c82:	f000 fc03 	bl	800148c <_isatty_r>
 8000c86:	b128      	cbz	r0, 8000c94 <__smakebuf_r+0x74>
 8000c88:	89a3      	ldrh	r3, [r4, #12]
 8000c8a:	f023 0303 	bic.w	r3, r3, #3
 8000c8e:	f043 0301 	orr.w	r3, r3, #1
 8000c92:	81a3      	strh	r3, [r4, #12]
 8000c94:	89a3      	ldrh	r3, [r4, #12]
 8000c96:	431d      	orrs	r5, r3
 8000c98:	81a5      	strh	r5, [r4, #12]
 8000c9a:	e7cd      	b.n	8000c38 <__smakebuf_r+0x18>
 8000c9c:	08000a8d 	.word	0x08000a8d

08000ca0 <_free_r>:
 8000ca0:	b538      	push	{r3, r4, r5, lr}
 8000ca2:	4605      	mov	r5, r0
 8000ca4:	2900      	cmp	r1, #0
 8000ca6:	d045      	beq.n	8000d34 <_free_r+0x94>
 8000ca8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000cac:	1f0c      	subs	r4, r1, #4
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	bfb8      	it	lt
 8000cb2:	18e4      	addlt	r4, r4, r3
 8000cb4:	f000 fc0c 	bl	80014d0 <__malloc_lock>
 8000cb8:	4a1f      	ldr	r2, [pc, #124]	; (8000d38 <_free_r+0x98>)
 8000cba:	6813      	ldr	r3, [r2, #0]
 8000cbc:	4610      	mov	r0, r2
 8000cbe:	b933      	cbnz	r3, 8000cce <_free_r+0x2e>
 8000cc0:	6063      	str	r3, [r4, #4]
 8000cc2:	6014      	str	r4, [r2, #0]
 8000cc4:	4628      	mov	r0, r5
 8000cc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cca:	f000 bc02 	b.w	80014d2 <__malloc_unlock>
 8000cce:	42a3      	cmp	r3, r4
 8000cd0:	d90c      	bls.n	8000cec <_free_r+0x4c>
 8000cd2:	6821      	ldr	r1, [r4, #0]
 8000cd4:	1862      	adds	r2, r4, r1
 8000cd6:	4293      	cmp	r3, r2
 8000cd8:	bf04      	itt	eq
 8000cda:	681a      	ldreq	r2, [r3, #0]
 8000cdc:	685b      	ldreq	r3, [r3, #4]
 8000cde:	6063      	str	r3, [r4, #4]
 8000ce0:	bf04      	itt	eq
 8000ce2:	1852      	addeq	r2, r2, r1
 8000ce4:	6022      	streq	r2, [r4, #0]
 8000ce6:	6004      	str	r4, [r0, #0]
 8000ce8:	e7ec      	b.n	8000cc4 <_free_r+0x24>
 8000cea:	4613      	mov	r3, r2
 8000cec:	685a      	ldr	r2, [r3, #4]
 8000cee:	b10a      	cbz	r2, 8000cf4 <_free_r+0x54>
 8000cf0:	42a2      	cmp	r2, r4
 8000cf2:	d9fa      	bls.n	8000cea <_free_r+0x4a>
 8000cf4:	6819      	ldr	r1, [r3, #0]
 8000cf6:	1858      	adds	r0, r3, r1
 8000cf8:	42a0      	cmp	r0, r4
 8000cfa:	d10b      	bne.n	8000d14 <_free_r+0x74>
 8000cfc:	6820      	ldr	r0, [r4, #0]
 8000cfe:	4401      	add	r1, r0
 8000d00:	1858      	adds	r0, r3, r1
 8000d02:	4282      	cmp	r2, r0
 8000d04:	6019      	str	r1, [r3, #0]
 8000d06:	d1dd      	bne.n	8000cc4 <_free_r+0x24>
 8000d08:	6810      	ldr	r0, [r2, #0]
 8000d0a:	6852      	ldr	r2, [r2, #4]
 8000d0c:	605a      	str	r2, [r3, #4]
 8000d0e:	4401      	add	r1, r0
 8000d10:	6019      	str	r1, [r3, #0]
 8000d12:	e7d7      	b.n	8000cc4 <_free_r+0x24>
 8000d14:	d902      	bls.n	8000d1c <_free_r+0x7c>
 8000d16:	230c      	movs	r3, #12
 8000d18:	602b      	str	r3, [r5, #0]
 8000d1a:	e7d3      	b.n	8000cc4 <_free_r+0x24>
 8000d1c:	6820      	ldr	r0, [r4, #0]
 8000d1e:	1821      	adds	r1, r4, r0
 8000d20:	428a      	cmp	r2, r1
 8000d22:	bf04      	itt	eq
 8000d24:	6811      	ldreq	r1, [r2, #0]
 8000d26:	6852      	ldreq	r2, [r2, #4]
 8000d28:	6062      	str	r2, [r4, #4]
 8000d2a:	bf04      	itt	eq
 8000d2c:	1809      	addeq	r1, r1, r0
 8000d2e:	6021      	streq	r1, [r4, #0]
 8000d30:	605c      	str	r4, [r3, #4]
 8000d32:	e7c7      	b.n	8000cc4 <_free_r+0x24>
 8000d34:	bd38      	pop	{r3, r4, r5, pc}
 8000d36:	bf00      	nop
 8000d38:	20000084 	.word	0x20000084

08000d3c <_malloc_r>:
 8000d3c:	b570      	push	{r4, r5, r6, lr}
 8000d3e:	1ccd      	adds	r5, r1, #3
 8000d40:	f025 0503 	bic.w	r5, r5, #3
 8000d44:	3508      	adds	r5, #8
 8000d46:	2d0c      	cmp	r5, #12
 8000d48:	bf38      	it	cc
 8000d4a:	250c      	movcc	r5, #12
 8000d4c:	2d00      	cmp	r5, #0
 8000d4e:	4606      	mov	r6, r0
 8000d50:	db01      	blt.n	8000d56 <_malloc_r+0x1a>
 8000d52:	42a9      	cmp	r1, r5
 8000d54:	d903      	bls.n	8000d5e <_malloc_r+0x22>
 8000d56:	230c      	movs	r3, #12
 8000d58:	6033      	str	r3, [r6, #0]
 8000d5a:	2000      	movs	r0, #0
 8000d5c:	bd70      	pop	{r4, r5, r6, pc}
 8000d5e:	f000 fbb7 	bl	80014d0 <__malloc_lock>
 8000d62:	4a21      	ldr	r2, [pc, #132]	; (8000de8 <_malloc_r+0xac>)
 8000d64:	6814      	ldr	r4, [r2, #0]
 8000d66:	4621      	mov	r1, r4
 8000d68:	b991      	cbnz	r1, 8000d90 <_malloc_r+0x54>
 8000d6a:	4c20      	ldr	r4, [pc, #128]	; (8000dec <_malloc_r+0xb0>)
 8000d6c:	6823      	ldr	r3, [r4, #0]
 8000d6e:	b91b      	cbnz	r3, 8000d78 <_malloc_r+0x3c>
 8000d70:	4630      	mov	r0, r6
 8000d72:	f000 fb03 	bl	800137c <_sbrk_r>
 8000d76:	6020      	str	r0, [r4, #0]
 8000d78:	4629      	mov	r1, r5
 8000d7a:	4630      	mov	r0, r6
 8000d7c:	f000 fafe 	bl	800137c <_sbrk_r>
 8000d80:	1c43      	adds	r3, r0, #1
 8000d82:	d124      	bne.n	8000dce <_malloc_r+0x92>
 8000d84:	230c      	movs	r3, #12
 8000d86:	6033      	str	r3, [r6, #0]
 8000d88:	4630      	mov	r0, r6
 8000d8a:	f000 fba2 	bl	80014d2 <__malloc_unlock>
 8000d8e:	e7e4      	b.n	8000d5a <_malloc_r+0x1e>
 8000d90:	680b      	ldr	r3, [r1, #0]
 8000d92:	1b5b      	subs	r3, r3, r5
 8000d94:	d418      	bmi.n	8000dc8 <_malloc_r+0x8c>
 8000d96:	2b0b      	cmp	r3, #11
 8000d98:	d90f      	bls.n	8000dba <_malloc_r+0x7e>
 8000d9a:	600b      	str	r3, [r1, #0]
 8000d9c:	50cd      	str	r5, [r1, r3]
 8000d9e:	18cc      	adds	r4, r1, r3
 8000da0:	4630      	mov	r0, r6
 8000da2:	f000 fb96 	bl	80014d2 <__malloc_unlock>
 8000da6:	f104 000b 	add.w	r0, r4, #11
 8000daa:	1d23      	adds	r3, r4, #4
 8000dac:	f020 0007 	bic.w	r0, r0, #7
 8000db0:	1ac3      	subs	r3, r0, r3
 8000db2:	d0d3      	beq.n	8000d5c <_malloc_r+0x20>
 8000db4:	425a      	negs	r2, r3
 8000db6:	50e2      	str	r2, [r4, r3]
 8000db8:	e7d0      	b.n	8000d5c <_malloc_r+0x20>
 8000dba:	428c      	cmp	r4, r1
 8000dbc:	684b      	ldr	r3, [r1, #4]
 8000dbe:	bf16      	itet	ne
 8000dc0:	6063      	strne	r3, [r4, #4]
 8000dc2:	6013      	streq	r3, [r2, #0]
 8000dc4:	460c      	movne	r4, r1
 8000dc6:	e7eb      	b.n	8000da0 <_malloc_r+0x64>
 8000dc8:	460c      	mov	r4, r1
 8000dca:	6849      	ldr	r1, [r1, #4]
 8000dcc:	e7cc      	b.n	8000d68 <_malloc_r+0x2c>
 8000dce:	1cc4      	adds	r4, r0, #3
 8000dd0:	f024 0403 	bic.w	r4, r4, #3
 8000dd4:	42a0      	cmp	r0, r4
 8000dd6:	d005      	beq.n	8000de4 <_malloc_r+0xa8>
 8000dd8:	1a21      	subs	r1, r4, r0
 8000dda:	4630      	mov	r0, r6
 8000ddc:	f000 face 	bl	800137c <_sbrk_r>
 8000de0:	3001      	adds	r0, #1
 8000de2:	d0cf      	beq.n	8000d84 <_malloc_r+0x48>
 8000de4:	6025      	str	r5, [r4, #0]
 8000de6:	e7db      	b.n	8000da0 <_malloc_r+0x64>
 8000de8:	20000084 	.word	0x20000084
 8000dec:	20000088 	.word	0x20000088

08000df0 <__sfputc_r>:
 8000df0:	6893      	ldr	r3, [r2, #8]
 8000df2:	3b01      	subs	r3, #1
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	b410      	push	{r4}
 8000df8:	6093      	str	r3, [r2, #8]
 8000dfa:	da07      	bge.n	8000e0c <__sfputc_r+0x1c>
 8000dfc:	6994      	ldr	r4, [r2, #24]
 8000dfe:	42a3      	cmp	r3, r4
 8000e00:	db01      	blt.n	8000e06 <__sfputc_r+0x16>
 8000e02:	290a      	cmp	r1, #10
 8000e04:	d102      	bne.n	8000e0c <__sfputc_r+0x1c>
 8000e06:	bc10      	pop	{r4}
 8000e08:	f7ff bcac 	b.w	8000764 <__swbuf_r>
 8000e0c:	6813      	ldr	r3, [r2, #0]
 8000e0e:	1c58      	adds	r0, r3, #1
 8000e10:	6010      	str	r0, [r2, #0]
 8000e12:	7019      	strb	r1, [r3, #0]
 8000e14:	4608      	mov	r0, r1
 8000e16:	bc10      	pop	{r4}
 8000e18:	4770      	bx	lr

08000e1a <__sfputs_r>:
 8000e1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e1c:	4606      	mov	r6, r0
 8000e1e:	460f      	mov	r7, r1
 8000e20:	4614      	mov	r4, r2
 8000e22:	18d5      	adds	r5, r2, r3
 8000e24:	42ac      	cmp	r4, r5
 8000e26:	d101      	bne.n	8000e2c <__sfputs_r+0x12>
 8000e28:	2000      	movs	r0, #0
 8000e2a:	e007      	b.n	8000e3c <__sfputs_r+0x22>
 8000e2c:	463a      	mov	r2, r7
 8000e2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e32:	4630      	mov	r0, r6
 8000e34:	f7ff ffdc 	bl	8000df0 <__sfputc_r>
 8000e38:	1c43      	adds	r3, r0, #1
 8000e3a:	d1f3      	bne.n	8000e24 <__sfputs_r+0xa>
 8000e3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e40 <_vfiprintf_r>:
 8000e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e44:	460c      	mov	r4, r1
 8000e46:	b09d      	sub	sp, #116	; 0x74
 8000e48:	4617      	mov	r7, r2
 8000e4a:	461d      	mov	r5, r3
 8000e4c:	4606      	mov	r6, r0
 8000e4e:	b118      	cbz	r0, 8000e58 <_vfiprintf_r+0x18>
 8000e50:	6983      	ldr	r3, [r0, #24]
 8000e52:	b90b      	cbnz	r3, 8000e58 <_vfiprintf_r+0x18>
 8000e54:	f7ff fe36 	bl	8000ac4 <__sinit>
 8000e58:	4b7c      	ldr	r3, [pc, #496]	; (800104c <_vfiprintf_r+0x20c>)
 8000e5a:	429c      	cmp	r4, r3
 8000e5c:	d158      	bne.n	8000f10 <_vfiprintf_r+0xd0>
 8000e5e:	6874      	ldr	r4, [r6, #4]
 8000e60:	89a3      	ldrh	r3, [r4, #12]
 8000e62:	0718      	lsls	r0, r3, #28
 8000e64:	d55e      	bpl.n	8000f24 <_vfiprintf_r+0xe4>
 8000e66:	6923      	ldr	r3, [r4, #16]
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d05b      	beq.n	8000f24 <_vfiprintf_r+0xe4>
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	9309      	str	r3, [sp, #36]	; 0x24
 8000e70:	2320      	movs	r3, #32
 8000e72:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e76:	2330      	movs	r3, #48	; 0x30
 8000e78:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e7c:	9503      	str	r5, [sp, #12]
 8000e7e:	f04f 0b01 	mov.w	fp, #1
 8000e82:	46b8      	mov	r8, r7
 8000e84:	4645      	mov	r5, r8
 8000e86:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e8a:	b10b      	cbz	r3, 8000e90 <_vfiprintf_r+0x50>
 8000e8c:	2b25      	cmp	r3, #37	; 0x25
 8000e8e:	d154      	bne.n	8000f3a <_vfiprintf_r+0xfa>
 8000e90:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e94:	d00b      	beq.n	8000eae <_vfiprintf_r+0x6e>
 8000e96:	4653      	mov	r3, sl
 8000e98:	463a      	mov	r2, r7
 8000e9a:	4621      	mov	r1, r4
 8000e9c:	4630      	mov	r0, r6
 8000e9e:	f7ff ffbc 	bl	8000e1a <__sfputs_r>
 8000ea2:	3001      	adds	r0, #1
 8000ea4:	f000 80c2 	beq.w	800102c <_vfiprintf_r+0x1ec>
 8000ea8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000eaa:	4453      	add	r3, sl
 8000eac:	9309      	str	r3, [sp, #36]	; 0x24
 8000eae:	f898 3000 	ldrb.w	r3, [r8]
 8000eb2:	2b00      	cmp	r3, #0
 8000eb4:	f000 80ba 	beq.w	800102c <_vfiprintf_r+0x1ec>
 8000eb8:	2300      	movs	r3, #0
 8000eba:	f04f 32ff 	mov.w	r2, #4294967295
 8000ebe:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ec2:	9304      	str	r3, [sp, #16]
 8000ec4:	9307      	str	r3, [sp, #28]
 8000ec6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000eca:	931a      	str	r3, [sp, #104]	; 0x68
 8000ecc:	46a8      	mov	r8, r5
 8000ece:	2205      	movs	r2, #5
 8000ed0:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000ed4:	485e      	ldr	r0, [pc, #376]	; (8001050 <_vfiprintf_r+0x210>)
 8000ed6:	f7ff f99b 	bl	8000210 <memchr>
 8000eda:	9b04      	ldr	r3, [sp, #16]
 8000edc:	bb78      	cbnz	r0, 8000f3e <_vfiprintf_r+0xfe>
 8000ede:	06d9      	lsls	r1, r3, #27
 8000ee0:	bf44      	itt	mi
 8000ee2:	2220      	movmi	r2, #32
 8000ee4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000ee8:	071a      	lsls	r2, r3, #28
 8000eea:	bf44      	itt	mi
 8000eec:	222b      	movmi	r2, #43	; 0x2b
 8000eee:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000ef2:	782a      	ldrb	r2, [r5, #0]
 8000ef4:	2a2a      	cmp	r2, #42	; 0x2a
 8000ef6:	d02a      	beq.n	8000f4e <_vfiprintf_r+0x10e>
 8000ef8:	9a07      	ldr	r2, [sp, #28]
 8000efa:	46a8      	mov	r8, r5
 8000efc:	2000      	movs	r0, #0
 8000efe:	250a      	movs	r5, #10
 8000f00:	4641      	mov	r1, r8
 8000f02:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f06:	3b30      	subs	r3, #48	; 0x30
 8000f08:	2b09      	cmp	r3, #9
 8000f0a:	d969      	bls.n	8000fe0 <_vfiprintf_r+0x1a0>
 8000f0c:	b360      	cbz	r0, 8000f68 <_vfiprintf_r+0x128>
 8000f0e:	e024      	b.n	8000f5a <_vfiprintf_r+0x11a>
 8000f10:	4b50      	ldr	r3, [pc, #320]	; (8001054 <_vfiprintf_r+0x214>)
 8000f12:	429c      	cmp	r4, r3
 8000f14:	d101      	bne.n	8000f1a <_vfiprintf_r+0xda>
 8000f16:	68b4      	ldr	r4, [r6, #8]
 8000f18:	e7a2      	b.n	8000e60 <_vfiprintf_r+0x20>
 8000f1a:	4b4f      	ldr	r3, [pc, #316]	; (8001058 <_vfiprintf_r+0x218>)
 8000f1c:	429c      	cmp	r4, r3
 8000f1e:	bf08      	it	eq
 8000f20:	68f4      	ldreq	r4, [r6, #12]
 8000f22:	e79d      	b.n	8000e60 <_vfiprintf_r+0x20>
 8000f24:	4621      	mov	r1, r4
 8000f26:	4630      	mov	r0, r6
 8000f28:	f7ff fc6e 	bl	8000808 <__swsetup_r>
 8000f2c:	2800      	cmp	r0, #0
 8000f2e:	d09d      	beq.n	8000e6c <_vfiprintf_r+0x2c>
 8000f30:	f04f 30ff 	mov.w	r0, #4294967295
 8000f34:	b01d      	add	sp, #116	; 0x74
 8000f36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f3a:	46a8      	mov	r8, r5
 8000f3c:	e7a2      	b.n	8000e84 <_vfiprintf_r+0x44>
 8000f3e:	4a44      	ldr	r2, [pc, #272]	; (8001050 <_vfiprintf_r+0x210>)
 8000f40:	1a80      	subs	r0, r0, r2
 8000f42:	fa0b f000 	lsl.w	r0, fp, r0
 8000f46:	4318      	orrs	r0, r3
 8000f48:	9004      	str	r0, [sp, #16]
 8000f4a:	4645      	mov	r5, r8
 8000f4c:	e7be      	b.n	8000ecc <_vfiprintf_r+0x8c>
 8000f4e:	9a03      	ldr	r2, [sp, #12]
 8000f50:	1d11      	adds	r1, r2, #4
 8000f52:	6812      	ldr	r2, [r2, #0]
 8000f54:	9103      	str	r1, [sp, #12]
 8000f56:	2a00      	cmp	r2, #0
 8000f58:	db01      	blt.n	8000f5e <_vfiprintf_r+0x11e>
 8000f5a:	9207      	str	r2, [sp, #28]
 8000f5c:	e004      	b.n	8000f68 <_vfiprintf_r+0x128>
 8000f5e:	4252      	negs	r2, r2
 8000f60:	f043 0302 	orr.w	r3, r3, #2
 8000f64:	9207      	str	r2, [sp, #28]
 8000f66:	9304      	str	r3, [sp, #16]
 8000f68:	f898 3000 	ldrb.w	r3, [r8]
 8000f6c:	2b2e      	cmp	r3, #46	; 0x2e
 8000f6e:	d10e      	bne.n	8000f8e <_vfiprintf_r+0x14e>
 8000f70:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000f74:	2b2a      	cmp	r3, #42	; 0x2a
 8000f76:	d138      	bne.n	8000fea <_vfiprintf_r+0x1aa>
 8000f78:	9b03      	ldr	r3, [sp, #12]
 8000f7a:	1d1a      	adds	r2, r3, #4
 8000f7c:	681b      	ldr	r3, [r3, #0]
 8000f7e:	9203      	str	r2, [sp, #12]
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	bfb8      	it	lt
 8000f84:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f88:	f108 0802 	add.w	r8, r8, #2
 8000f8c:	9305      	str	r3, [sp, #20]
 8000f8e:	4d33      	ldr	r5, [pc, #204]	; (800105c <_vfiprintf_r+0x21c>)
 8000f90:	f898 1000 	ldrb.w	r1, [r8]
 8000f94:	2203      	movs	r2, #3
 8000f96:	4628      	mov	r0, r5
 8000f98:	f7ff f93a 	bl	8000210 <memchr>
 8000f9c:	b140      	cbz	r0, 8000fb0 <_vfiprintf_r+0x170>
 8000f9e:	2340      	movs	r3, #64	; 0x40
 8000fa0:	1b40      	subs	r0, r0, r5
 8000fa2:	fa03 f000 	lsl.w	r0, r3, r0
 8000fa6:	9b04      	ldr	r3, [sp, #16]
 8000fa8:	4303      	orrs	r3, r0
 8000faa:	f108 0801 	add.w	r8, r8, #1
 8000fae:	9304      	str	r3, [sp, #16]
 8000fb0:	f898 1000 	ldrb.w	r1, [r8]
 8000fb4:	482a      	ldr	r0, [pc, #168]	; (8001060 <_vfiprintf_r+0x220>)
 8000fb6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000fba:	2206      	movs	r2, #6
 8000fbc:	f108 0701 	add.w	r7, r8, #1
 8000fc0:	f7ff f926 	bl	8000210 <memchr>
 8000fc4:	2800      	cmp	r0, #0
 8000fc6:	d037      	beq.n	8001038 <_vfiprintf_r+0x1f8>
 8000fc8:	4b26      	ldr	r3, [pc, #152]	; (8001064 <_vfiprintf_r+0x224>)
 8000fca:	bb1b      	cbnz	r3, 8001014 <_vfiprintf_r+0x1d4>
 8000fcc:	9b03      	ldr	r3, [sp, #12]
 8000fce:	3307      	adds	r3, #7
 8000fd0:	f023 0307 	bic.w	r3, r3, #7
 8000fd4:	3308      	adds	r3, #8
 8000fd6:	9303      	str	r3, [sp, #12]
 8000fd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000fda:	444b      	add	r3, r9
 8000fdc:	9309      	str	r3, [sp, #36]	; 0x24
 8000fde:	e750      	b.n	8000e82 <_vfiprintf_r+0x42>
 8000fe0:	fb05 3202 	mla	r2, r5, r2, r3
 8000fe4:	2001      	movs	r0, #1
 8000fe6:	4688      	mov	r8, r1
 8000fe8:	e78a      	b.n	8000f00 <_vfiprintf_r+0xc0>
 8000fea:	2300      	movs	r3, #0
 8000fec:	f108 0801 	add.w	r8, r8, #1
 8000ff0:	9305      	str	r3, [sp, #20]
 8000ff2:	4619      	mov	r1, r3
 8000ff4:	250a      	movs	r5, #10
 8000ff6:	4640      	mov	r0, r8
 8000ff8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ffc:	3a30      	subs	r2, #48	; 0x30
 8000ffe:	2a09      	cmp	r2, #9
 8001000:	d903      	bls.n	800100a <_vfiprintf_r+0x1ca>
 8001002:	2b00      	cmp	r3, #0
 8001004:	d0c3      	beq.n	8000f8e <_vfiprintf_r+0x14e>
 8001006:	9105      	str	r1, [sp, #20]
 8001008:	e7c1      	b.n	8000f8e <_vfiprintf_r+0x14e>
 800100a:	fb05 2101 	mla	r1, r5, r1, r2
 800100e:	2301      	movs	r3, #1
 8001010:	4680      	mov	r8, r0
 8001012:	e7f0      	b.n	8000ff6 <_vfiprintf_r+0x1b6>
 8001014:	ab03      	add	r3, sp, #12
 8001016:	9300      	str	r3, [sp, #0]
 8001018:	4622      	mov	r2, r4
 800101a:	4b13      	ldr	r3, [pc, #76]	; (8001068 <_vfiprintf_r+0x228>)
 800101c:	a904      	add	r1, sp, #16
 800101e:	4630      	mov	r0, r6
 8001020:	f3af 8000 	nop.w
 8001024:	f1b0 3fff 	cmp.w	r0, #4294967295
 8001028:	4681      	mov	r9, r0
 800102a:	d1d5      	bne.n	8000fd8 <_vfiprintf_r+0x198>
 800102c:	89a3      	ldrh	r3, [r4, #12]
 800102e:	065b      	lsls	r3, r3, #25
 8001030:	f53f af7e 	bmi.w	8000f30 <_vfiprintf_r+0xf0>
 8001034:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001036:	e77d      	b.n	8000f34 <_vfiprintf_r+0xf4>
 8001038:	ab03      	add	r3, sp, #12
 800103a:	9300      	str	r3, [sp, #0]
 800103c:	4622      	mov	r2, r4
 800103e:	4b0a      	ldr	r3, [pc, #40]	; (8001068 <_vfiprintf_r+0x228>)
 8001040:	a904      	add	r1, sp, #16
 8001042:	4630      	mov	r0, r6
 8001044:	f000 f888 	bl	8001158 <_printf_i>
 8001048:	e7ec      	b.n	8001024 <_vfiprintf_r+0x1e4>
 800104a:	bf00      	nop
 800104c:	0800157c 	.word	0x0800157c
 8001050:	080015bc 	.word	0x080015bc
 8001054:	0800159c 	.word	0x0800159c
 8001058:	0800155c 	.word	0x0800155c
 800105c:	080015c2 	.word	0x080015c2
 8001060:	080015c6 	.word	0x080015c6
 8001064:	00000000 	.word	0x00000000
 8001068:	08000e1b 	.word	0x08000e1b

0800106c <_printf_common>:
 800106c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001070:	4691      	mov	r9, r2
 8001072:	461f      	mov	r7, r3
 8001074:	688a      	ldr	r2, [r1, #8]
 8001076:	690b      	ldr	r3, [r1, #16]
 8001078:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800107c:	4293      	cmp	r3, r2
 800107e:	bfb8      	it	lt
 8001080:	4613      	movlt	r3, r2
 8001082:	f8c9 3000 	str.w	r3, [r9]
 8001086:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800108a:	4606      	mov	r6, r0
 800108c:	460c      	mov	r4, r1
 800108e:	b112      	cbz	r2, 8001096 <_printf_common+0x2a>
 8001090:	3301      	adds	r3, #1
 8001092:	f8c9 3000 	str.w	r3, [r9]
 8001096:	6823      	ldr	r3, [r4, #0]
 8001098:	0699      	lsls	r1, r3, #26
 800109a:	bf42      	ittt	mi
 800109c:	f8d9 3000 	ldrmi.w	r3, [r9]
 80010a0:	3302      	addmi	r3, #2
 80010a2:	f8c9 3000 	strmi.w	r3, [r9]
 80010a6:	6825      	ldr	r5, [r4, #0]
 80010a8:	f015 0506 	ands.w	r5, r5, #6
 80010ac:	d107      	bne.n	80010be <_printf_common+0x52>
 80010ae:	f104 0a19 	add.w	sl, r4, #25
 80010b2:	68e3      	ldr	r3, [r4, #12]
 80010b4:	f8d9 2000 	ldr.w	r2, [r9]
 80010b8:	1a9b      	subs	r3, r3, r2
 80010ba:	42ab      	cmp	r3, r5
 80010bc:	dc28      	bgt.n	8001110 <_printf_common+0xa4>
 80010be:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80010c2:	6822      	ldr	r2, [r4, #0]
 80010c4:	3300      	adds	r3, #0
 80010c6:	bf18      	it	ne
 80010c8:	2301      	movne	r3, #1
 80010ca:	0692      	lsls	r2, r2, #26
 80010cc:	d42d      	bmi.n	800112a <_printf_common+0xbe>
 80010ce:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80010d2:	4639      	mov	r1, r7
 80010d4:	4630      	mov	r0, r6
 80010d6:	47c0      	blx	r8
 80010d8:	3001      	adds	r0, #1
 80010da:	d020      	beq.n	800111e <_printf_common+0xb2>
 80010dc:	6823      	ldr	r3, [r4, #0]
 80010de:	68e5      	ldr	r5, [r4, #12]
 80010e0:	f8d9 2000 	ldr.w	r2, [r9]
 80010e4:	f003 0306 	and.w	r3, r3, #6
 80010e8:	2b04      	cmp	r3, #4
 80010ea:	bf08      	it	eq
 80010ec:	1aad      	subeq	r5, r5, r2
 80010ee:	68a3      	ldr	r3, [r4, #8]
 80010f0:	6922      	ldr	r2, [r4, #16]
 80010f2:	bf0c      	ite	eq
 80010f4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010f8:	2500      	movne	r5, #0
 80010fa:	4293      	cmp	r3, r2
 80010fc:	bfc4      	itt	gt
 80010fe:	1a9b      	subgt	r3, r3, r2
 8001100:	18ed      	addgt	r5, r5, r3
 8001102:	f04f 0900 	mov.w	r9, #0
 8001106:	341a      	adds	r4, #26
 8001108:	454d      	cmp	r5, r9
 800110a:	d11a      	bne.n	8001142 <_printf_common+0xd6>
 800110c:	2000      	movs	r0, #0
 800110e:	e008      	b.n	8001122 <_printf_common+0xb6>
 8001110:	2301      	movs	r3, #1
 8001112:	4652      	mov	r2, sl
 8001114:	4639      	mov	r1, r7
 8001116:	4630      	mov	r0, r6
 8001118:	47c0      	blx	r8
 800111a:	3001      	adds	r0, #1
 800111c:	d103      	bne.n	8001126 <_printf_common+0xba>
 800111e:	f04f 30ff 	mov.w	r0, #4294967295
 8001122:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001126:	3501      	adds	r5, #1
 8001128:	e7c3      	b.n	80010b2 <_printf_common+0x46>
 800112a:	18e1      	adds	r1, r4, r3
 800112c:	1c5a      	adds	r2, r3, #1
 800112e:	2030      	movs	r0, #48	; 0x30
 8001130:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001134:	4422      	add	r2, r4
 8001136:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800113a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800113e:	3302      	adds	r3, #2
 8001140:	e7c5      	b.n	80010ce <_printf_common+0x62>
 8001142:	2301      	movs	r3, #1
 8001144:	4622      	mov	r2, r4
 8001146:	4639      	mov	r1, r7
 8001148:	4630      	mov	r0, r6
 800114a:	47c0      	blx	r8
 800114c:	3001      	adds	r0, #1
 800114e:	d0e6      	beq.n	800111e <_printf_common+0xb2>
 8001150:	f109 0901 	add.w	r9, r9, #1
 8001154:	e7d8      	b.n	8001108 <_printf_common+0x9c>
	...

08001158 <_printf_i>:
 8001158:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800115c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001160:	460c      	mov	r4, r1
 8001162:	7e09      	ldrb	r1, [r1, #24]
 8001164:	b085      	sub	sp, #20
 8001166:	296e      	cmp	r1, #110	; 0x6e
 8001168:	4617      	mov	r7, r2
 800116a:	4606      	mov	r6, r0
 800116c:	4698      	mov	r8, r3
 800116e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001170:	f000 80b3 	beq.w	80012da <_printf_i+0x182>
 8001174:	d822      	bhi.n	80011bc <_printf_i+0x64>
 8001176:	2963      	cmp	r1, #99	; 0x63
 8001178:	d036      	beq.n	80011e8 <_printf_i+0x90>
 800117a:	d80a      	bhi.n	8001192 <_printf_i+0x3a>
 800117c:	2900      	cmp	r1, #0
 800117e:	f000 80b9 	beq.w	80012f4 <_printf_i+0x19c>
 8001182:	2958      	cmp	r1, #88	; 0x58
 8001184:	f000 8083 	beq.w	800128e <_printf_i+0x136>
 8001188:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800118c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001190:	e032      	b.n	80011f8 <_printf_i+0xa0>
 8001192:	2964      	cmp	r1, #100	; 0x64
 8001194:	d001      	beq.n	800119a <_printf_i+0x42>
 8001196:	2969      	cmp	r1, #105	; 0x69
 8001198:	d1f6      	bne.n	8001188 <_printf_i+0x30>
 800119a:	6820      	ldr	r0, [r4, #0]
 800119c:	6813      	ldr	r3, [r2, #0]
 800119e:	0605      	lsls	r5, r0, #24
 80011a0:	f103 0104 	add.w	r1, r3, #4
 80011a4:	d52a      	bpl.n	80011fc <_printf_i+0xa4>
 80011a6:	681b      	ldr	r3, [r3, #0]
 80011a8:	6011      	str	r1, [r2, #0]
 80011aa:	2b00      	cmp	r3, #0
 80011ac:	da03      	bge.n	80011b6 <_printf_i+0x5e>
 80011ae:	222d      	movs	r2, #45	; 0x2d
 80011b0:	425b      	negs	r3, r3
 80011b2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80011b6:	486f      	ldr	r0, [pc, #444]	; (8001374 <_printf_i+0x21c>)
 80011b8:	220a      	movs	r2, #10
 80011ba:	e039      	b.n	8001230 <_printf_i+0xd8>
 80011bc:	2973      	cmp	r1, #115	; 0x73
 80011be:	f000 809d 	beq.w	80012fc <_printf_i+0x1a4>
 80011c2:	d808      	bhi.n	80011d6 <_printf_i+0x7e>
 80011c4:	296f      	cmp	r1, #111	; 0x6f
 80011c6:	d020      	beq.n	800120a <_printf_i+0xb2>
 80011c8:	2970      	cmp	r1, #112	; 0x70
 80011ca:	d1dd      	bne.n	8001188 <_printf_i+0x30>
 80011cc:	6823      	ldr	r3, [r4, #0]
 80011ce:	f043 0320 	orr.w	r3, r3, #32
 80011d2:	6023      	str	r3, [r4, #0]
 80011d4:	e003      	b.n	80011de <_printf_i+0x86>
 80011d6:	2975      	cmp	r1, #117	; 0x75
 80011d8:	d017      	beq.n	800120a <_printf_i+0xb2>
 80011da:	2978      	cmp	r1, #120	; 0x78
 80011dc:	d1d4      	bne.n	8001188 <_printf_i+0x30>
 80011de:	2378      	movs	r3, #120	; 0x78
 80011e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80011e4:	4864      	ldr	r0, [pc, #400]	; (8001378 <_printf_i+0x220>)
 80011e6:	e055      	b.n	8001294 <_printf_i+0x13c>
 80011e8:	6813      	ldr	r3, [r2, #0]
 80011ea:	1d19      	adds	r1, r3, #4
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	6011      	str	r1, [r2, #0]
 80011f0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011f4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011f8:	2301      	movs	r3, #1
 80011fa:	e08c      	b.n	8001316 <_printf_i+0x1be>
 80011fc:	681b      	ldr	r3, [r3, #0]
 80011fe:	6011      	str	r1, [r2, #0]
 8001200:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001204:	bf18      	it	ne
 8001206:	b21b      	sxthne	r3, r3
 8001208:	e7cf      	b.n	80011aa <_printf_i+0x52>
 800120a:	6813      	ldr	r3, [r2, #0]
 800120c:	6825      	ldr	r5, [r4, #0]
 800120e:	1d18      	adds	r0, r3, #4
 8001210:	6010      	str	r0, [r2, #0]
 8001212:	0628      	lsls	r0, r5, #24
 8001214:	d501      	bpl.n	800121a <_printf_i+0xc2>
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	e002      	b.n	8001220 <_printf_i+0xc8>
 800121a:	0668      	lsls	r0, r5, #25
 800121c:	d5fb      	bpl.n	8001216 <_printf_i+0xbe>
 800121e:	881b      	ldrh	r3, [r3, #0]
 8001220:	4854      	ldr	r0, [pc, #336]	; (8001374 <_printf_i+0x21c>)
 8001222:	296f      	cmp	r1, #111	; 0x6f
 8001224:	bf14      	ite	ne
 8001226:	220a      	movne	r2, #10
 8001228:	2208      	moveq	r2, #8
 800122a:	2100      	movs	r1, #0
 800122c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001230:	6865      	ldr	r5, [r4, #4]
 8001232:	60a5      	str	r5, [r4, #8]
 8001234:	2d00      	cmp	r5, #0
 8001236:	f2c0 8095 	blt.w	8001364 <_printf_i+0x20c>
 800123a:	6821      	ldr	r1, [r4, #0]
 800123c:	f021 0104 	bic.w	r1, r1, #4
 8001240:	6021      	str	r1, [r4, #0]
 8001242:	2b00      	cmp	r3, #0
 8001244:	d13d      	bne.n	80012c2 <_printf_i+0x16a>
 8001246:	2d00      	cmp	r5, #0
 8001248:	f040 808e 	bne.w	8001368 <_printf_i+0x210>
 800124c:	4665      	mov	r5, ip
 800124e:	2a08      	cmp	r2, #8
 8001250:	d10b      	bne.n	800126a <_printf_i+0x112>
 8001252:	6823      	ldr	r3, [r4, #0]
 8001254:	07db      	lsls	r3, r3, #31
 8001256:	d508      	bpl.n	800126a <_printf_i+0x112>
 8001258:	6923      	ldr	r3, [r4, #16]
 800125a:	6862      	ldr	r2, [r4, #4]
 800125c:	429a      	cmp	r2, r3
 800125e:	bfde      	ittt	le
 8001260:	2330      	movle	r3, #48	; 0x30
 8001262:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001266:	f105 35ff 	addle.w	r5, r5, #4294967295
 800126a:	ebac 0305 	sub.w	r3, ip, r5
 800126e:	6123      	str	r3, [r4, #16]
 8001270:	f8cd 8000 	str.w	r8, [sp]
 8001274:	463b      	mov	r3, r7
 8001276:	aa03      	add	r2, sp, #12
 8001278:	4621      	mov	r1, r4
 800127a:	4630      	mov	r0, r6
 800127c:	f7ff fef6 	bl	800106c <_printf_common>
 8001280:	3001      	adds	r0, #1
 8001282:	d14d      	bne.n	8001320 <_printf_i+0x1c8>
 8001284:	f04f 30ff 	mov.w	r0, #4294967295
 8001288:	b005      	add	sp, #20
 800128a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800128e:	4839      	ldr	r0, [pc, #228]	; (8001374 <_printf_i+0x21c>)
 8001290:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001294:	6813      	ldr	r3, [r2, #0]
 8001296:	6821      	ldr	r1, [r4, #0]
 8001298:	1d1d      	adds	r5, r3, #4
 800129a:	681b      	ldr	r3, [r3, #0]
 800129c:	6015      	str	r5, [r2, #0]
 800129e:	060a      	lsls	r2, r1, #24
 80012a0:	d50b      	bpl.n	80012ba <_printf_i+0x162>
 80012a2:	07ca      	lsls	r2, r1, #31
 80012a4:	bf44      	itt	mi
 80012a6:	f041 0120 	orrmi.w	r1, r1, #32
 80012aa:	6021      	strmi	r1, [r4, #0]
 80012ac:	b91b      	cbnz	r3, 80012b6 <_printf_i+0x15e>
 80012ae:	6822      	ldr	r2, [r4, #0]
 80012b0:	f022 0220 	bic.w	r2, r2, #32
 80012b4:	6022      	str	r2, [r4, #0]
 80012b6:	2210      	movs	r2, #16
 80012b8:	e7b7      	b.n	800122a <_printf_i+0xd2>
 80012ba:	064d      	lsls	r5, r1, #25
 80012bc:	bf48      	it	mi
 80012be:	b29b      	uxthmi	r3, r3
 80012c0:	e7ef      	b.n	80012a2 <_printf_i+0x14a>
 80012c2:	4665      	mov	r5, ip
 80012c4:	fbb3 f1f2 	udiv	r1, r3, r2
 80012c8:	fb02 3311 	mls	r3, r2, r1, r3
 80012cc:	5cc3      	ldrb	r3, [r0, r3]
 80012ce:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80012d2:	460b      	mov	r3, r1
 80012d4:	2900      	cmp	r1, #0
 80012d6:	d1f5      	bne.n	80012c4 <_printf_i+0x16c>
 80012d8:	e7b9      	b.n	800124e <_printf_i+0xf6>
 80012da:	6813      	ldr	r3, [r2, #0]
 80012dc:	6825      	ldr	r5, [r4, #0]
 80012de:	6961      	ldr	r1, [r4, #20]
 80012e0:	1d18      	adds	r0, r3, #4
 80012e2:	6010      	str	r0, [r2, #0]
 80012e4:	0628      	lsls	r0, r5, #24
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	d501      	bpl.n	80012ee <_printf_i+0x196>
 80012ea:	6019      	str	r1, [r3, #0]
 80012ec:	e002      	b.n	80012f4 <_printf_i+0x19c>
 80012ee:	066a      	lsls	r2, r5, #25
 80012f0:	d5fb      	bpl.n	80012ea <_printf_i+0x192>
 80012f2:	8019      	strh	r1, [r3, #0]
 80012f4:	2300      	movs	r3, #0
 80012f6:	6123      	str	r3, [r4, #16]
 80012f8:	4665      	mov	r5, ip
 80012fa:	e7b9      	b.n	8001270 <_printf_i+0x118>
 80012fc:	6813      	ldr	r3, [r2, #0]
 80012fe:	1d19      	adds	r1, r3, #4
 8001300:	6011      	str	r1, [r2, #0]
 8001302:	681d      	ldr	r5, [r3, #0]
 8001304:	6862      	ldr	r2, [r4, #4]
 8001306:	2100      	movs	r1, #0
 8001308:	4628      	mov	r0, r5
 800130a:	f7fe ff81 	bl	8000210 <memchr>
 800130e:	b108      	cbz	r0, 8001314 <_printf_i+0x1bc>
 8001310:	1b40      	subs	r0, r0, r5
 8001312:	6060      	str	r0, [r4, #4]
 8001314:	6863      	ldr	r3, [r4, #4]
 8001316:	6123      	str	r3, [r4, #16]
 8001318:	2300      	movs	r3, #0
 800131a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800131e:	e7a7      	b.n	8001270 <_printf_i+0x118>
 8001320:	6923      	ldr	r3, [r4, #16]
 8001322:	462a      	mov	r2, r5
 8001324:	4639      	mov	r1, r7
 8001326:	4630      	mov	r0, r6
 8001328:	47c0      	blx	r8
 800132a:	3001      	adds	r0, #1
 800132c:	d0aa      	beq.n	8001284 <_printf_i+0x12c>
 800132e:	6823      	ldr	r3, [r4, #0]
 8001330:	079b      	lsls	r3, r3, #30
 8001332:	d413      	bmi.n	800135c <_printf_i+0x204>
 8001334:	68e0      	ldr	r0, [r4, #12]
 8001336:	9b03      	ldr	r3, [sp, #12]
 8001338:	4298      	cmp	r0, r3
 800133a:	bfb8      	it	lt
 800133c:	4618      	movlt	r0, r3
 800133e:	e7a3      	b.n	8001288 <_printf_i+0x130>
 8001340:	2301      	movs	r3, #1
 8001342:	464a      	mov	r2, r9
 8001344:	4639      	mov	r1, r7
 8001346:	4630      	mov	r0, r6
 8001348:	47c0      	blx	r8
 800134a:	3001      	adds	r0, #1
 800134c:	d09a      	beq.n	8001284 <_printf_i+0x12c>
 800134e:	3501      	adds	r5, #1
 8001350:	68e3      	ldr	r3, [r4, #12]
 8001352:	9a03      	ldr	r2, [sp, #12]
 8001354:	1a9b      	subs	r3, r3, r2
 8001356:	42ab      	cmp	r3, r5
 8001358:	dcf2      	bgt.n	8001340 <_printf_i+0x1e8>
 800135a:	e7eb      	b.n	8001334 <_printf_i+0x1dc>
 800135c:	2500      	movs	r5, #0
 800135e:	f104 0919 	add.w	r9, r4, #25
 8001362:	e7f5      	b.n	8001350 <_printf_i+0x1f8>
 8001364:	2b00      	cmp	r3, #0
 8001366:	d1ac      	bne.n	80012c2 <_printf_i+0x16a>
 8001368:	7803      	ldrb	r3, [r0, #0]
 800136a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800136e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001372:	e76c      	b.n	800124e <_printf_i+0xf6>
 8001374:	080015cd 	.word	0x080015cd
 8001378:	080015de 	.word	0x080015de

0800137c <_sbrk_r>:
 800137c:	b538      	push	{r3, r4, r5, lr}
 800137e:	4c06      	ldr	r4, [pc, #24]	; (8001398 <_sbrk_r+0x1c>)
 8001380:	2300      	movs	r3, #0
 8001382:	4605      	mov	r5, r0
 8001384:	4608      	mov	r0, r1
 8001386:	6023      	str	r3, [r4, #0]
 8001388:	f7ff f8de 	bl	8000548 <_sbrk>
 800138c:	1c43      	adds	r3, r0, #1
 800138e:	d102      	bne.n	8001396 <_sbrk_r+0x1a>
 8001390:	6823      	ldr	r3, [r4, #0]
 8001392:	b103      	cbz	r3, 8001396 <_sbrk_r+0x1a>
 8001394:	602b      	str	r3, [r5, #0]
 8001396:	bd38      	pop	{r3, r4, r5, pc}
 8001398:	2000008c 	.word	0x2000008c

0800139c <__sread>:
 800139c:	b510      	push	{r4, lr}
 800139e:	460c      	mov	r4, r1
 80013a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013a4:	f000 f896 	bl	80014d4 <_read_r>
 80013a8:	2800      	cmp	r0, #0
 80013aa:	bfab      	itete	ge
 80013ac:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80013ae:	89a3      	ldrhlt	r3, [r4, #12]
 80013b0:	181b      	addge	r3, r3, r0
 80013b2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80013b6:	bfac      	ite	ge
 80013b8:	6563      	strge	r3, [r4, #84]	; 0x54
 80013ba:	81a3      	strhlt	r3, [r4, #12]
 80013bc:	bd10      	pop	{r4, pc}

080013be <__swrite>:
 80013be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013c2:	461f      	mov	r7, r3
 80013c4:	898b      	ldrh	r3, [r1, #12]
 80013c6:	05db      	lsls	r3, r3, #23
 80013c8:	4605      	mov	r5, r0
 80013ca:	460c      	mov	r4, r1
 80013cc:	4616      	mov	r6, r2
 80013ce:	d505      	bpl.n	80013dc <__swrite+0x1e>
 80013d0:	2302      	movs	r3, #2
 80013d2:	2200      	movs	r2, #0
 80013d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013d8:	f000 f868 	bl	80014ac <_lseek_r>
 80013dc:	89a3      	ldrh	r3, [r4, #12]
 80013de:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013e2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013e6:	81a3      	strh	r3, [r4, #12]
 80013e8:	4632      	mov	r2, r6
 80013ea:	463b      	mov	r3, r7
 80013ec:	4628      	mov	r0, r5
 80013ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013f2:	f000 b817 	b.w	8001424 <_write_r>

080013f6 <__sseek>:
 80013f6:	b510      	push	{r4, lr}
 80013f8:	460c      	mov	r4, r1
 80013fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013fe:	f000 f855 	bl	80014ac <_lseek_r>
 8001402:	1c43      	adds	r3, r0, #1
 8001404:	89a3      	ldrh	r3, [r4, #12]
 8001406:	bf15      	itete	ne
 8001408:	6560      	strne	r0, [r4, #84]	; 0x54
 800140a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800140e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001412:	81a3      	strheq	r3, [r4, #12]
 8001414:	bf18      	it	ne
 8001416:	81a3      	strhne	r3, [r4, #12]
 8001418:	bd10      	pop	{r4, pc}

0800141a <__sclose>:
 800141a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800141e:	f000 b813 	b.w	8001448 <_close_r>
	...

08001424 <_write_r>:
 8001424:	b538      	push	{r3, r4, r5, lr}
 8001426:	4c07      	ldr	r4, [pc, #28]	; (8001444 <_write_r+0x20>)
 8001428:	4605      	mov	r5, r0
 800142a:	4608      	mov	r0, r1
 800142c:	4611      	mov	r1, r2
 800142e:	2200      	movs	r2, #0
 8001430:	6022      	str	r2, [r4, #0]
 8001432:	461a      	mov	r2, r3
 8001434:	f7ff f83b 	bl	80004ae <_write>
 8001438:	1c43      	adds	r3, r0, #1
 800143a:	d102      	bne.n	8001442 <_write_r+0x1e>
 800143c:	6823      	ldr	r3, [r4, #0]
 800143e:	b103      	cbz	r3, 8001442 <_write_r+0x1e>
 8001440:	602b      	str	r3, [r5, #0]
 8001442:	bd38      	pop	{r3, r4, r5, pc}
 8001444:	2000008c 	.word	0x2000008c

08001448 <_close_r>:
 8001448:	b538      	push	{r3, r4, r5, lr}
 800144a:	4c06      	ldr	r4, [pc, #24]	; (8001464 <_close_r+0x1c>)
 800144c:	2300      	movs	r3, #0
 800144e:	4605      	mov	r5, r0
 8001450:	4608      	mov	r0, r1
 8001452:	6023      	str	r3, [r4, #0]
 8001454:	f7ff f847 	bl	80004e6 <_close>
 8001458:	1c43      	adds	r3, r0, #1
 800145a:	d102      	bne.n	8001462 <_close_r+0x1a>
 800145c:	6823      	ldr	r3, [r4, #0]
 800145e:	b103      	cbz	r3, 8001462 <_close_r+0x1a>
 8001460:	602b      	str	r3, [r5, #0]
 8001462:	bd38      	pop	{r3, r4, r5, pc}
 8001464:	2000008c 	.word	0x2000008c

08001468 <_fstat_r>:
 8001468:	b538      	push	{r3, r4, r5, lr}
 800146a:	4c07      	ldr	r4, [pc, #28]	; (8001488 <_fstat_r+0x20>)
 800146c:	2300      	movs	r3, #0
 800146e:	4605      	mov	r5, r0
 8001470:	4608      	mov	r0, r1
 8001472:	4611      	mov	r1, r2
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	f7ff f841 	bl	80004fc <_fstat>
 800147a:	1c43      	adds	r3, r0, #1
 800147c:	d102      	bne.n	8001484 <_fstat_r+0x1c>
 800147e:	6823      	ldr	r3, [r4, #0]
 8001480:	b103      	cbz	r3, 8001484 <_fstat_r+0x1c>
 8001482:	602b      	str	r3, [r5, #0]
 8001484:	bd38      	pop	{r3, r4, r5, pc}
 8001486:	bf00      	nop
 8001488:	2000008c 	.word	0x2000008c

0800148c <_isatty_r>:
 800148c:	b538      	push	{r3, r4, r5, lr}
 800148e:	4c06      	ldr	r4, [pc, #24]	; (80014a8 <_isatty_r+0x1c>)
 8001490:	2300      	movs	r3, #0
 8001492:	4605      	mov	r5, r0
 8001494:	4608      	mov	r0, r1
 8001496:	6023      	str	r3, [r4, #0]
 8001498:	f7ff f83f 	bl	800051a <_isatty>
 800149c:	1c43      	adds	r3, r0, #1
 800149e:	d102      	bne.n	80014a6 <_isatty_r+0x1a>
 80014a0:	6823      	ldr	r3, [r4, #0]
 80014a2:	b103      	cbz	r3, 80014a6 <_isatty_r+0x1a>
 80014a4:	602b      	str	r3, [r5, #0]
 80014a6:	bd38      	pop	{r3, r4, r5, pc}
 80014a8:	2000008c 	.word	0x2000008c

080014ac <_lseek_r>:
 80014ac:	b538      	push	{r3, r4, r5, lr}
 80014ae:	4c07      	ldr	r4, [pc, #28]	; (80014cc <_lseek_r+0x20>)
 80014b0:	4605      	mov	r5, r0
 80014b2:	4608      	mov	r0, r1
 80014b4:	4611      	mov	r1, r2
 80014b6:	2200      	movs	r2, #0
 80014b8:	6022      	str	r2, [r4, #0]
 80014ba:	461a      	mov	r2, r3
 80014bc:	f7ff f837 	bl	800052e <_lseek>
 80014c0:	1c43      	adds	r3, r0, #1
 80014c2:	d102      	bne.n	80014ca <_lseek_r+0x1e>
 80014c4:	6823      	ldr	r3, [r4, #0]
 80014c6:	b103      	cbz	r3, 80014ca <_lseek_r+0x1e>
 80014c8:	602b      	str	r3, [r5, #0]
 80014ca:	bd38      	pop	{r3, r4, r5, pc}
 80014cc:	2000008c 	.word	0x2000008c

080014d0 <__malloc_lock>:
 80014d0:	4770      	bx	lr

080014d2 <__malloc_unlock>:
 80014d2:	4770      	bx	lr

080014d4 <_read_r>:
 80014d4:	b538      	push	{r3, r4, r5, lr}
 80014d6:	4c07      	ldr	r4, [pc, #28]	; (80014f4 <_read_r+0x20>)
 80014d8:	4605      	mov	r5, r0
 80014da:	4608      	mov	r0, r1
 80014dc:	4611      	mov	r1, r2
 80014de:	2200      	movs	r2, #0
 80014e0:	6022      	str	r2, [r4, #0]
 80014e2:	461a      	mov	r2, r3
 80014e4:	f7fe ffc6 	bl	8000474 <_read>
 80014e8:	1c43      	adds	r3, r0, #1
 80014ea:	d102      	bne.n	80014f2 <_read_r+0x1e>
 80014ec:	6823      	ldr	r3, [r4, #0]
 80014ee:	b103      	cbz	r3, 80014f2 <_read_r+0x1e>
 80014f0:	602b      	str	r3, [r5, #0]
 80014f2:	bd38      	pop	{r3, r4, r5, pc}
 80014f4:	2000008c 	.word	0x2000008c

080014f8 <_init>:
 80014f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014fa:	bf00      	nop
 80014fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014fe:	bc08      	pop	{r3}
 8001500:	469e      	mov	lr, r3
 8001502:	4770      	bx	lr

08001504 <_fini>:
 8001504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001506:	bf00      	nop
 8001508:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800150a:	bc08      	pop	{r3}
 800150c:	469e      	mov	lr, r3
 800150e:	4770      	bx	lr
