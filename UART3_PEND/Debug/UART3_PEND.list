
UART3_PEND.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b64  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000007c  08000d28  08000d28  00010d28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000da4  08000da4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000da4  08000da4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000da4  08000da4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000da4  08000da4  00010da4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000da8  08000da8  00010da8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000dac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08000e10  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08000e10  00020090  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002150  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000059c  00000000  00000000  000221de  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000118  00000000  00000000  00022780  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000e0  00000000  00000000  00022898  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002aeb  00000000  00000000  00022978  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000011f6  00000000  00000000  00025463  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000906d  00000000  00000000  00026659  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f6c6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000918  00000000  00000000  0002f744  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000064 	.word	0x20000064
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000d10 	.word	0x08000d10

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000068 	.word	0x20000068
 8000200:	08000d10 	.word	0x08000d10

08000204 <main>:


#define USART3_IRQNO 39

int main(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
    /* Loop forever */

	//1. Manually pend the pending bit for USART3 IRQ number in NVIC

	uint32_t *pISPR1= (uint32_t*)0xE000E204;
 800020a:	4b08      	ldr	r3, [pc, #32]	; (800022c <main+0x28>)
 800020c:	607b      	str	r3, [r7, #4]
	*pISPR1 |= (1 << (USART3_IRQNO % 32));
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	601a      	str	r2, [r3, #0]

	//2. Enable the USART3 IRQ number in NVIC

	uint32_t *pISER1 = (uint32_t*)0xE000E104;
 800021a:	4b05      	ldr	r3, [pc, #20]	; (8000230 <main+0x2c>)
 800021c:	603b      	str	r3, [r7, #0]
	*pISER1 |= (1 << (USART3_IRQNO % 32));
 800021e:	683b      	ldr	r3, [r7, #0]
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8000226:	683b      	ldr	r3, [r7, #0]
 8000228:	601a      	str	r2, [r3, #0]

	for(;;);
 800022a:	e7fe      	b.n	800022a <main+0x26>
 800022c:	e000e204 	.word	0xe000e204
 8000230:	e000e104 	.word	0xe000e104

08000234 <USART3_IRQHandler>:
}

//USART3 ISR

void USART3_IRQHandler(void){
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0


	printf("In USART3 ISR handler\n");
 8000238:	4802      	ldr	r0, [pc, #8]	; (8000244 <USART3_IRQHandler+0x10>)
 800023a:	f000 f95d 	bl	80004f8 <puts>

}
 800023e:	bf00      	nop
 8000240:	bd80      	pop	{r7, pc}
 8000242:	bf00      	nop
 8000244:	08000d28 	.word	0x08000d28

08000248 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000248:	b580      	push	{r7, lr}
 800024a:	b086      	sub	sp, #24
 800024c:	af00      	add	r7, sp, #0
 800024e:	60f8      	str	r0, [r7, #12]
 8000250:	60b9      	str	r1, [r7, #8]
 8000252:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000254:	2300      	movs	r3, #0
 8000256:	617b      	str	r3, [r7, #20]
 8000258:	e00a      	b.n	8000270 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800025a:	f3af 8000 	nop.w
 800025e:	4601      	mov	r1, r0
 8000260:	68bb      	ldr	r3, [r7, #8]
 8000262:	1c5a      	adds	r2, r3, #1
 8000264:	60ba      	str	r2, [r7, #8]
 8000266:	b2ca      	uxtb	r2, r1
 8000268:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800026a:	697b      	ldr	r3, [r7, #20]
 800026c:	3301      	adds	r3, #1
 800026e:	617b      	str	r3, [r7, #20]
 8000270:	697a      	ldr	r2, [r7, #20]
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	429a      	cmp	r2, r3
 8000276:	dbf0      	blt.n	800025a <_read+0x12>
	}

return len;
 8000278:	687b      	ldr	r3, [r7, #4]
}
 800027a:	4618      	mov	r0, r3
 800027c:	3718      	adds	r7, #24
 800027e:	46bd      	mov	sp, r7
 8000280:	bd80      	pop	{r7, pc}

08000282 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000282:	b580      	push	{r7, lr}
 8000284:	b086      	sub	sp, #24
 8000286:	af00      	add	r7, sp, #0
 8000288:	60f8      	str	r0, [r7, #12]
 800028a:	60b9      	str	r1, [r7, #8]
 800028c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800028e:	2300      	movs	r3, #0
 8000290:	617b      	str	r3, [r7, #20]
 8000292:	e009      	b.n	80002a8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000294:	68bb      	ldr	r3, [r7, #8]
 8000296:	1c5a      	adds	r2, r3, #1
 8000298:	60ba      	str	r2, [r7, #8]
 800029a:	781b      	ldrb	r3, [r3, #0]
 800029c:	4618      	mov	r0, r3
 800029e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002a2:	697b      	ldr	r3, [r7, #20]
 80002a4:	3301      	adds	r3, #1
 80002a6:	617b      	str	r3, [r7, #20]
 80002a8:	697a      	ldr	r2, [r7, #20]
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	429a      	cmp	r2, r3
 80002ae:	dbf1      	blt.n	8000294 <_write+0x12>
	}
	return len;
 80002b0:	687b      	ldr	r3, [r7, #4]
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	3718      	adds	r7, #24
 80002b6:	46bd      	mov	sp, r7
 80002b8:	bd80      	pop	{r7, pc}

080002ba <_close>:

int _close(int file)
{
 80002ba:	b480      	push	{r7}
 80002bc:	b083      	sub	sp, #12
 80002be:	af00      	add	r7, sp, #0
 80002c0:	6078      	str	r0, [r7, #4]
	return -1;
 80002c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002c6:	4618      	mov	r0, r3
 80002c8:	370c      	adds	r7, #12
 80002ca:	46bd      	mov	sp, r7
 80002cc:	bc80      	pop	{r7}
 80002ce:	4770      	bx	lr

080002d0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002da:	683b      	ldr	r3, [r7, #0]
 80002dc:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002e0:	605a      	str	r2, [r3, #4]
	return 0;
 80002e2:	2300      	movs	r3, #0
}
 80002e4:	4618      	mov	r0, r3
 80002e6:	370c      	adds	r7, #12
 80002e8:	46bd      	mov	sp, r7
 80002ea:	bc80      	pop	{r7}
 80002ec:	4770      	bx	lr

080002ee <_isatty>:

int _isatty(int file)
{
 80002ee:	b480      	push	{r7}
 80002f0:	b083      	sub	sp, #12
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	6078      	str	r0, [r7, #4]
	return 1;
 80002f6:	2301      	movs	r3, #1
}
 80002f8:	4618      	mov	r0, r3
 80002fa:	370c      	adds	r7, #12
 80002fc:	46bd      	mov	sp, r7
 80002fe:	bc80      	pop	{r7}
 8000300:	4770      	bx	lr

08000302 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000302:	b480      	push	{r7}
 8000304:	b085      	sub	sp, #20
 8000306:	af00      	add	r7, sp, #0
 8000308:	60f8      	str	r0, [r7, #12]
 800030a:	60b9      	str	r1, [r7, #8]
 800030c:	607a      	str	r2, [r7, #4]
	return 0;
 800030e:	2300      	movs	r3, #0
}
 8000310:	4618      	mov	r0, r3
 8000312:	3714      	adds	r7, #20
 8000314:	46bd      	mov	sp, r7
 8000316:	bc80      	pop	{r7}
 8000318:	4770      	bx	lr
	...

0800031c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	b086      	sub	sp, #24
 8000320:	af00      	add	r7, sp, #0
 8000322:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000324:	4a14      	ldr	r2, [pc, #80]	; (8000378 <_sbrk+0x5c>)
 8000326:	4b15      	ldr	r3, [pc, #84]	; (800037c <_sbrk+0x60>)
 8000328:	1ad3      	subs	r3, r2, r3
 800032a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800032c:	697b      	ldr	r3, [r7, #20]
 800032e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000330:	4b13      	ldr	r3, [pc, #76]	; (8000380 <_sbrk+0x64>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	2b00      	cmp	r3, #0
 8000336:	d102      	bne.n	800033e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000338:	4b11      	ldr	r3, [pc, #68]	; (8000380 <_sbrk+0x64>)
 800033a:	4a12      	ldr	r2, [pc, #72]	; (8000384 <_sbrk+0x68>)
 800033c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800033e:	4b10      	ldr	r3, [pc, #64]	; (8000380 <_sbrk+0x64>)
 8000340:	681a      	ldr	r2, [r3, #0]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4413      	add	r3, r2
 8000346:	693a      	ldr	r2, [r7, #16]
 8000348:	429a      	cmp	r2, r3
 800034a:	d207      	bcs.n	800035c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800034c:	f000 f846 	bl	80003dc <__errno>
 8000350:	4602      	mov	r2, r0
 8000352:	230c      	movs	r3, #12
 8000354:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000356:	f04f 33ff 	mov.w	r3, #4294967295
 800035a:	e009      	b.n	8000370 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800035c:	4b08      	ldr	r3, [pc, #32]	; (8000380 <_sbrk+0x64>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000362:	4b07      	ldr	r3, [pc, #28]	; (8000380 <_sbrk+0x64>)
 8000364:	681a      	ldr	r2, [r3, #0]
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4413      	add	r3, r2
 800036a:	4a05      	ldr	r2, [pc, #20]	; (8000380 <_sbrk+0x64>)
 800036c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800036e:	68fb      	ldr	r3, [r7, #12]
}
 8000370:	4618      	mov	r0, r3
 8000372:	3718      	adds	r7, #24
 8000374:	46bd      	mov	sp, r7
 8000376:	bd80      	pop	{r7, pc}
 8000378:	20020000 	.word	0x20020000
 800037c:	00000400 	.word	0x00000400
 8000380:	20000080 	.word	0x20000080
 8000384:	20000090 	.word	0x20000090

08000388 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000388:	480d      	ldr	r0, [pc, #52]	; (80003c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800038a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800038c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000390:	480c      	ldr	r0, [pc, #48]	; (80003c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000392:	490d      	ldr	r1, [pc, #52]	; (80003c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000394:	4a0d      	ldr	r2, [pc, #52]	; (80003cc <LoopForever+0xe>)
  movs r3, #0
 8000396:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000398:	e002      	b.n	80003a0 <LoopCopyDataInit>

0800039a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800039a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800039c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800039e:	3304      	adds	r3, #4

080003a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003a4:	d3f9      	bcc.n	800039a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003a6:	4a0a      	ldr	r2, [pc, #40]	; (80003d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003a8:	4c0a      	ldr	r4, [pc, #40]	; (80003d4 <LoopForever+0x16>)
  movs r3, #0
 80003aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003ac:	e001      	b.n	80003b2 <LoopFillZerobss>

080003ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003b0:	3204      	adds	r2, #4

080003b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003b4:	d3fb      	bcc.n	80003ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003b6:	f000 f817 	bl	80003e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003ba:	f7ff ff23 	bl	8000204 <main>

080003be <LoopForever>:

LoopForever:
    b LoopForever
 80003be:	e7fe      	b.n	80003be <LoopForever>
  ldr   r0, =_estack
 80003c0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003c8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003cc:	08000dac 	.word	0x08000dac
  ldr r2, =_sbss
 80003d0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003d4:	20000090 	.word	0x20000090

080003d8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003d8:	e7fe      	b.n	80003d8 <ADC_IRQHandler>
	...

080003dc <__errno>:
 80003dc:	4b01      	ldr	r3, [pc, #4]	; (80003e4 <__errno+0x8>)
 80003de:	6818      	ldr	r0, [r3, #0]
 80003e0:	4770      	bx	lr
 80003e2:	bf00      	nop
 80003e4:	20000000 	.word	0x20000000

080003e8 <__libc_init_array>:
 80003e8:	b570      	push	{r4, r5, r6, lr}
 80003ea:	4e0d      	ldr	r6, [pc, #52]	; (8000420 <__libc_init_array+0x38>)
 80003ec:	4c0d      	ldr	r4, [pc, #52]	; (8000424 <__libc_init_array+0x3c>)
 80003ee:	1ba4      	subs	r4, r4, r6
 80003f0:	10a4      	asrs	r4, r4, #2
 80003f2:	2500      	movs	r5, #0
 80003f4:	42a5      	cmp	r5, r4
 80003f6:	d109      	bne.n	800040c <__libc_init_array+0x24>
 80003f8:	4e0b      	ldr	r6, [pc, #44]	; (8000428 <__libc_init_array+0x40>)
 80003fa:	4c0c      	ldr	r4, [pc, #48]	; (800042c <__libc_init_array+0x44>)
 80003fc:	f000 fc88 	bl	8000d10 <_init>
 8000400:	1ba4      	subs	r4, r4, r6
 8000402:	10a4      	asrs	r4, r4, #2
 8000404:	2500      	movs	r5, #0
 8000406:	42a5      	cmp	r5, r4
 8000408:	d105      	bne.n	8000416 <__libc_init_array+0x2e>
 800040a:	bd70      	pop	{r4, r5, r6, pc}
 800040c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000410:	4798      	blx	r3
 8000412:	3501      	adds	r5, #1
 8000414:	e7ee      	b.n	80003f4 <__libc_init_array+0xc>
 8000416:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800041a:	4798      	blx	r3
 800041c:	3501      	adds	r5, #1
 800041e:	e7f2      	b.n	8000406 <__libc_init_array+0x1e>
 8000420:	08000da4 	.word	0x08000da4
 8000424:	08000da4 	.word	0x08000da4
 8000428:	08000da4 	.word	0x08000da4
 800042c:	08000da8 	.word	0x08000da8

08000430 <memset>:
 8000430:	4402      	add	r2, r0
 8000432:	4603      	mov	r3, r0
 8000434:	4293      	cmp	r3, r2
 8000436:	d100      	bne.n	800043a <memset+0xa>
 8000438:	4770      	bx	lr
 800043a:	f803 1b01 	strb.w	r1, [r3], #1
 800043e:	e7f9      	b.n	8000434 <memset+0x4>

08000440 <_puts_r>:
 8000440:	b570      	push	{r4, r5, r6, lr}
 8000442:	460e      	mov	r6, r1
 8000444:	4605      	mov	r5, r0
 8000446:	b118      	cbz	r0, 8000450 <_puts_r+0x10>
 8000448:	6983      	ldr	r3, [r0, #24]
 800044a:	b90b      	cbnz	r3, 8000450 <_puts_r+0x10>
 800044c:	f000 fa0c 	bl	8000868 <__sinit>
 8000450:	69ab      	ldr	r3, [r5, #24]
 8000452:	68ac      	ldr	r4, [r5, #8]
 8000454:	b913      	cbnz	r3, 800045c <_puts_r+0x1c>
 8000456:	4628      	mov	r0, r5
 8000458:	f000 fa06 	bl	8000868 <__sinit>
 800045c:	4b23      	ldr	r3, [pc, #140]	; (80004ec <_puts_r+0xac>)
 800045e:	429c      	cmp	r4, r3
 8000460:	d117      	bne.n	8000492 <_puts_r+0x52>
 8000462:	686c      	ldr	r4, [r5, #4]
 8000464:	89a3      	ldrh	r3, [r4, #12]
 8000466:	071b      	lsls	r3, r3, #28
 8000468:	d51d      	bpl.n	80004a6 <_puts_r+0x66>
 800046a:	6923      	ldr	r3, [r4, #16]
 800046c:	b1db      	cbz	r3, 80004a6 <_puts_r+0x66>
 800046e:	3e01      	subs	r6, #1
 8000470:	68a3      	ldr	r3, [r4, #8]
 8000472:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000476:	3b01      	subs	r3, #1
 8000478:	60a3      	str	r3, [r4, #8]
 800047a:	b9e9      	cbnz	r1, 80004b8 <_puts_r+0x78>
 800047c:	2b00      	cmp	r3, #0
 800047e:	da2e      	bge.n	80004de <_puts_r+0x9e>
 8000480:	4622      	mov	r2, r4
 8000482:	210a      	movs	r1, #10
 8000484:	4628      	mov	r0, r5
 8000486:	f000 f83f 	bl	8000508 <__swbuf_r>
 800048a:	3001      	adds	r0, #1
 800048c:	d011      	beq.n	80004b2 <_puts_r+0x72>
 800048e:	200a      	movs	r0, #10
 8000490:	e011      	b.n	80004b6 <_puts_r+0x76>
 8000492:	4b17      	ldr	r3, [pc, #92]	; (80004f0 <_puts_r+0xb0>)
 8000494:	429c      	cmp	r4, r3
 8000496:	d101      	bne.n	800049c <_puts_r+0x5c>
 8000498:	68ac      	ldr	r4, [r5, #8]
 800049a:	e7e3      	b.n	8000464 <_puts_r+0x24>
 800049c:	4b15      	ldr	r3, [pc, #84]	; (80004f4 <_puts_r+0xb4>)
 800049e:	429c      	cmp	r4, r3
 80004a0:	bf08      	it	eq
 80004a2:	68ec      	ldreq	r4, [r5, #12]
 80004a4:	e7de      	b.n	8000464 <_puts_r+0x24>
 80004a6:	4621      	mov	r1, r4
 80004a8:	4628      	mov	r0, r5
 80004aa:	f000 f87f 	bl	80005ac <__swsetup_r>
 80004ae:	2800      	cmp	r0, #0
 80004b0:	d0dd      	beq.n	800046e <_puts_r+0x2e>
 80004b2:	f04f 30ff 	mov.w	r0, #4294967295
 80004b6:	bd70      	pop	{r4, r5, r6, pc}
 80004b8:	2b00      	cmp	r3, #0
 80004ba:	da04      	bge.n	80004c6 <_puts_r+0x86>
 80004bc:	69a2      	ldr	r2, [r4, #24]
 80004be:	429a      	cmp	r2, r3
 80004c0:	dc06      	bgt.n	80004d0 <_puts_r+0x90>
 80004c2:	290a      	cmp	r1, #10
 80004c4:	d004      	beq.n	80004d0 <_puts_r+0x90>
 80004c6:	6823      	ldr	r3, [r4, #0]
 80004c8:	1c5a      	adds	r2, r3, #1
 80004ca:	6022      	str	r2, [r4, #0]
 80004cc:	7019      	strb	r1, [r3, #0]
 80004ce:	e7cf      	b.n	8000470 <_puts_r+0x30>
 80004d0:	4622      	mov	r2, r4
 80004d2:	4628      	mov	r0, r5
 80004d4:	f000 f818 	bl	8000508 <__swbuf_r>
 80004d8:	3001      	adds	r0, #1
 80004da:	d1c9      	bne.n	8000470 <_puts_r+0x30>
 80004dc:	e7e9      	b.n	80004b2 <_puts_r+0x72>
 80004de:	6823      	ldr	r3, [r4, #0]
 80004e0:	200a      	movs	r0, #10
 80004e2:	1c5a      	adds	r2, r3, #1
 80004e4:	6022      	str	r2, [r4, #0]
 80004e6:	7018      	strb	r0, [r3, #0]
 80004e8:	e7e5      	b.n	80004b6 <_puts_r+0x76>
 80004ea:	bf00      	nop
 80004ec:	08000d64 	.word	0x08000d64
 80004f0:	08000d84 	.word	0x08000d84
 80004f4:	08000d44 	.word	0x08000d44

080004f8 <puts>:
 80004f8:	4b02      	ldr	r3, [pc, #8]	; (8000504 <puts+0xc>)
 80004fa:	4601      	mov	r1, r0
 80004fc:	6818      	ldr	r0, [r3, #0]
 80004fe:	f7ff bf9f 	b.w	8000440 <_puts_r>
 8000502:	bf00      	nop
 8000504:	20000000 	.word	0x20000000

08000508 <__swbuf_r>:
 8000508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800050a:	460e      	mov	r6, r1
 800050c:	4614      	mov	r4, r2
 800050e:	4605      	mov	r5, r0
 8000510:	b118      	cbz	r0, 800051a <__swbuf_r+0x12>
 8000512:	6983      	ldr	r3, [r0, #24]
 8000514:	b90b      	cbnz	r3, 800051a <__swbuf_r+0x12>
 8000516:	f000 f9a7 	bl	8000868 <__sinit>
 800051a:	4b21      	ldr	r3, [pc, #132]	; (80005a0 <__swbuf_r+0x98>)
 800051c:	429c      	cmp	r4, r3
 800051e:	d12a      	bne.n	8000576 <__swbuf_r+0x6e>
 8000520:	686c      	ldr	r4, [r5, #4]
 8000522:	69a3      	ldr	r3, [r4, #24]
 8000524:	60a3      	str	r3, [r4, #8]
 8000526:	89a3      	ldrh	r3, [r4, #12]
 8000528:	071a      	lsls	r2, r3, #28
 800052a:	d52e      	bpl.n	800058a <__swbuf_r+0x82>
 800052c:	6923      	ldr	r3, [r4, #16]
 800052e:	b363      	cbz	r3, 800058a <__swbuf_r+0x82>
 8000530:	6923      	ldr	r3, [r4, #16]
 8000532:	6820      	ldr	r0, [r4, #0]
 8000534:	1ac0      	subs	r0, r0, r3
 8000536:	6963      	ldr	r3, [r4, #20]
 8000538:	b2f6      	uxtb	r6, r6
 800053a:	4283      	cmp	r3, r0
 800053c:	4637      	mov	r7, r6
 800053e:	dc04      	bgt.n	800054a <__swbuf_r+0x42>
 8000540:	4621      	mov	r1, r4
 8000542:	4628      	mov	r0, r5
 8000544:	f000 f926 	bl	8000794 <_fflush_r>
 8000548:	bb28      	cbnz	r0, 8000596 <__swbuf_r+0x8e>
 800054a:	68a3      	ldr	r3, [r4, #8]
 800054c:	3b01      	subs	r3, #1
 800054e:	60a3      	str	r3, [r4, #8]
 8000550:	6823      	ldr	r3, [r4, #0]
 8000552:	1c5a      	adds	r2, r3, #1
 8000554:	6022      	str	r2, [r4, #0]
 8000556:	701e      	strb	r6, [r3, #0]
 8000558:	6963      	ldr	r3, [r4, #20]
 800055a:	3001      	adds	r0, #1
 800055c:	4283      	cmp	r3, r0
 800055e:	d004      	beq.n	800056a <__swbuf_r+0x62>
 8000560:	89a3      	ldrh	r3, [r4, #12]
 8000562:	07db      	lsls	r3, r3, #31
 8000564:	d519      	bpl.n	800059a <__swbuf_r+0x92>
 8000566:	2e0a      	cmp	r6, #10
 8000568:	d117      	bne.n	800059a <__swbuf_r+0x92>
 800056a:	4621      	mov	r1, r4
 800056c:	4628      	mov	r0, r5
 800056e:	f000 f911 	bl	8000794 <_fflush_r>
 8000572:	b190      	cbz	r0, 800059a <__swbuf_r+0x92>
 8000574:	e00f      	b.n	8000596 <__swbuf_r+0x8e>
 8000576:	4b0b      	ldr	r3, [pc, #44]	; (80005a4 <__swbuf_r+0x9c>)
 8000578:	429c      	cmp	r4, r3
 800057a:	d101      	bne.n	8000580 <__swbuf_r+0x78>
 800057c:	68ac      	ldr	r4, [r5, #8]
 800057e:	e7d0      	b.n	8000522 <__swbuf_r+0x1a>
 8000580:	4b09      	ldr	r3, [pc, #36]	; (80005a8 <__swbuf_r+0xa0>)
 8000582:	429c      	cmp	r4, r3
 8000584:	bf08      	it	eq
 8000586:	68ec      	ldreq	r4, [r5, #12]
 8000588:	e7cb      	b.n	8000522 <__swbuf_r+0x1a>
 800058a:	4621      	mov	r1, r4
 800058c:	4628      	mov	r0, r5
 800058e:	f000 f80d 	bl	80005ac <__swsetup_r>
 8000592:	2800      	cmp	r0, #0
 8000594:	d0cc      	beq.n	8000530 <__swbuf_r+0x28>
 8000596:	f04f 37ff 	mov.w	r7, #4294967295
 800059a:	4638      	mov	r0, r7
 800059c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800059e:	bf00      	nop
 80005a0:	08000d64 	.word	0x08000d64
 80005a4:	08000d84 	.word	0x08000d84
 80005a8:	08000d44 	.word	0x08000d44

080005ac <__swsetup_r>:
 80005ac:	4b32      	ldr	r3, [pc, #200]	; (8000678 <__swsetup_r+0xcc>)
 80005ae:	b570      	push	{r4, r5, r6, lr}
 80005b0:	681d      	ldr	r5, [r3, #0]
 80005b2:	4606      	mov	r6, r0
 80005b4:	460c      	mov	r4, r1
 80005b6:	b125      	cbz	r5, 80005c2 <__swsetup_r+0x16>
 80005b8:	69ab      	ldr	r3, [r5, #24]
 80005ba:	b913      	cbnz	r3, 80005c2 <__swsetup_r+0x16>
 80005bc:	4628      	mov	r0, r5
 80005be:	f000 f953 	bl	8000868 <__sinit>
 80005c2:	4b2e      	ldr	r3, [pc, #184]	; (800067c <__swsetup_r+0xd0>)
 80005c4:	429c      	cmp	r4, r3
 80005c6:	d10f      	bne.n	80005e8 <__swsetup_r+0x3c>
 80005c8:	686c      	ldr	r4, [r5, #4]
 80005ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80005ce:	b29a      	uxth	r2, r3
 80005d0:	0715      	lsls	r5, r2, #28
 80005d2:	d42c      	bmi.n	800062e <__swsetup_r+0x82>
 80005d4:	06d0      	lsls	r0, r2, #27
 80005d6:	d411      	bmi.n	80005fc <__swsetup_r+0x50>
 80005d8:	2209      	movs	r2, #9
 80005da:	6032      	str	r2, [r6, #0]
 80005dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005e0:	81a3      	strh	r3, [r4, #12]
 80005e2:	f04f 30ff 	mov.w	r0, #4294967295
 80005e6:	e03e      	b.n	8000666 <__swsetup_r+0xba>
 80005e8:	4b25      	ldr	r3, [pc, #148]	; (8000680 <__swsetup_r+0xd4>)
 80005ea:	429c      	cmp	r4, r3
 80005ec:	d101      	bne.n	80005f2 <__swsetup_r+0x46>
 80005ee:	68ac      	ldr	r4, [r5, #8]
 80005f0:	e7eb      	b.n	80005ca <__swsetup_r+0x1e>
 80005f2:	4b24      	ldr	r3, [pc, #144]	; (8000684 <__swsetup_r+0xd8>)
 80005f4:	429c      	cmp	r4, r3
 80005f6:	bf08      	it	eq
 80005f8:	68ec      	ldreq	r4, [r5, #12]
 80005fa:	e7e6      	b.n	80005ca <__swsetup_r+0x1e>
 80005fc:	0751      	lsls	r1, r2, #29
 80005fe:	d512      	bpl.n	8000626 <__swsetup_r+0x7a>
 8000600:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000602:	b141      	cbz	r1, 8000616 <__swsetup_r+0x6a>
 8000604:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000608:	4299      	cmp	r1, r3
 800060a:	d002      	beq.n	8000612 <__swsetup_r+0x66>
 800060c:	4630      	mov	r0, r6
 800060e:	f000 fa19 	bl	8000a44 <_free_r>
 8000612:	2300      	movs	r3, #0
 8000614:	6363      	str	r3, [r4, #52]	; 0x34
 8000616:	89a3      	ldrh	r3, [r4, #12]
 8000618:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800061c:	81a3      	strh	r3, [r4, #12]
 800061e:	2300      	movs	r3, #0
 8000620:	6063      	str	r3, [r4, #4]
 8000622:	6923      	ldr	r3, [r4, #16]
 8000624:	6023      	str	r3, [r4, #0]
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	f043 0308 	orr.w	r3, r3, #8
 800062c:	81a3      	strh	r3, [r4, #12]
 800062e:	6923      	ldr	r3, [r4, #16]
 8000630:	b94b      	cbnz	r3, 8000646 <__swsetup_r+0x9a>
 8000632:	89a3      	ldrh	r3, [r4, #12]
 8000634:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000638:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800063c:	d003      	beq.n	8000646 <__swsetup_r+0x9a>
 800063e:	4621      	mov	r1, r4
 8000640:	4630      	mov	r0, r6
 8000642:	f000 f9bf 	bl	80009c4 <__smakebuf_r>
 8000646:	89a2      	ldrh	r2, [r4, #12]
 8000648:	f012 0301 	ands.w	r3, r2, #1
 800064c:	d00c      	beq.n	8000668 <__swsetup_r+0xbc>
 800064e:	2300      	movs	r3, #0
 8000650:	60a3      	str	r3, [r4, #8]
 8000652:	6963      	ldr	r3, [r4, #20]
 8000654:	425b      	negs	r3, r3
 8000656:	61a3      	str	r3, [r4, #24]
 8000658:	6923      	ldr	r3, [r4, #16]
 800065a:	b953      	cbnz	r3, 8000672 <__swsetup_r+0xc6>
 800065c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000660:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000664:	d1ba      	bne.n	80005dc <__swsetup_r+0x30>
 8000666:	bd70      	pop	{r4, r5, r6, pc}
 8000668:	0792      	lsls	r2, r2, #30
 800066a:	bf58      	it	pl
 800066c:	6963      	ldrpl	r3, [r4, #20]
 800066e:	60a3      	str	r3, [r4, #8]
 8000670:	e7f2      	b.n	8000658 <__swsetup_r+0xac>
 8000672:	2000      	movs	r0, #0
 8000674:	e7f7      	b.n	8000666 <__swsetup_r+0xba>
 8000676:	bf00      	nop
 8000678:	20000000 	.word	0x20000000
 800067c:	08000d64 	.word	0x08000d64
 8000680:	08000d84 	.word	0x08000d84
 8000684:	08000d44 	.word	0x08000d44

08000688 <__sflush_r>:
 8000688:	898a      	ldrh	r2, [r1, #12]
 800068a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800068e:	4605      	mov	r5, r0
 8000690:	0710      	lsls	r0, r2, #28
 8000692:	460c      	mov	r4, r1
 8000694:	d458      	bmi.n	8000748 <__sflush_r+0xc0>
 8000696:	684b      	ldr	r3, [r1, #4]
 8000698:	2b00      	cmp	r3, #0
 800069a:	dc05      	bgt.n	80006a8 <__sflush_r+0x20>
 800069c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800069e:	2b00      	cmp	r3, #0
 80006a0:	dc02      	bgt.n	80006a8 <__sflush_r+0x20>
 80006a2:	2000      	movs	r0, #0
 80006a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006aa:	2e00      	cmp	r6, #0
 80006ac:	d0f9      	beq.n	80006a2 <__sflush_r+0x1a>
 80006ae:	2300      	movs	r3, #0
 80006b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006b4:	682f      	ldr	r7, [r5, #0]
 80006b6:	6a21      	ldr	r1, [r4, #32]
 80006b8:	602b      	str	r3, [r5, #0]
 80006ba:	d032      	beq.n	8000722 <__sflush_r+0x9a>
 80006bc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006be:	89a3      	ldrh	r3, [r4, #12]
 80006c0:	075a      	lsls	r2, r3, #29
 80006c2:	d505      	bpl.n	80006d0 <__sflush_r+0x48>
 80006c4:	6863      	ldr	r3, [r4, #4]
 80006c6:	1ac0      	subs	r0, r0, r3
 80006c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006ca:	b10b      	cbz	r3, 80006d0 <__sflush_r+0x48>
 80006cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006ce:	1ac0      	subs	r0, r0, r3
 80006d0:	2300      	movs	r3, #0
 80006d2:	4602      	mov	r2, r0
 80006d4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006d6:	6a21      	ldr	r1, [r4, #32]
 80006d8:	4628      	mov	r0, r5
 80006da:	47b0      	blx	r6
 80006dc:	1c43      	adds	r3, r0, #1
 80006de:	89a3      	ldrh	r3, [r4, #12]
 80006e0:	d106      	bne.n	80006f0 <__sflush_r+0x68>
 80006e2:	6829      	ldr	r1, [r5, #0]
 80006e4:	291d      	cmp	r1, #29
 80006e6:	d848      	bhi.n	800077a <__sflush_r+0xf2>
 80006e8:	4a29      	ldr	r2, [pc, #164]	; (8000790 <__sflush_r+0x108>)
 80006ea:	40ca      	lsrs	r2, r1
 80006ec:	07d6      	lsls	r6, r2, #31
 80006ee:	d544      	bpl.n	800077a <__sflush_r+0xf2>
 80006f0:	2200      	movs	r2, #0
 80006f2:	6062      	str	r2, [r4, #4]
 80006f4:	04d9      	lsls	r1, r3, #19
 80006f6:	6922      	ldr	r2, [r4, #16]
 80006f8:	6022      	str	r2, [r4, #0]
 80006fa:	d504      	bpl.n	8000706 <__sflush_r+0x7e>
 80006fc:	1c42      	adds	r2, r0, #1
 80006fe:	d101      	bne.n	8000704 <__sflush_r+0x7c>
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	b903      	cbnz	r3, 8000706 <__sflush_r+0x7e>
 8000704:	6560      	str	r0, [r4, #84]	; 0x54
 8000706:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000708:	602f      	str	r7, [r5, #0]
 800070a:	2900      	cmp	r1, #0
 800070c:	d0c9      	beq.n	80006a2 <__sflush_r+0x1a>
 800070e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000712:	4299      	cmp	r1, r3
 8000714:	d002      	beq.n	800071c <__sflush_r+0x94>
 8000716:	4628      	mov	r0, r5
 8000718:	f000 f994 	bl	8000a44 <_free_r>
 800071c:	2000      	movs	r0, #0
 800071e:	6360      	str	r0, [r4, #52]	; 0x34
 8000720:	e7c0      	b.n	80006a4 <__sflush_r+0x1c>
 8000722:	2301      	movs	r3, #1
 8000724:	4628      	mov	r0, r5
 8000726:	47b0      	blx	r6
 8000728:	1c41      	adds	r1, r0, #1
 800072a:	d1c8      	bne.n	80006be <__sflush_r+0x36>
 800072c:	682b      	ldr	r3, [r5, #0]
 800072e:	2b00      	cmp	r3, #0
 8000730:	d0c5      	beq.n	80006be <__sflush_r+0x36>
 8000732:	2b1d      	cmp	r3, #29
 8000734:	d001      	beq.n	800073a <__sflush_r+0xb2>
 8000736:	2b16      	cmp	r3, #22
 8000738:	d101      	bne.n	800073e <__sflush_r+0xb6>
 800073a:	602f      	str	r7, [r5, #0]
 800073c:	e7b1      	b.n	80006a2 <__sflush_r+0x1a>
 800073e:	89a3      	ldrh	r3, [r4, #12]
 8000740:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000744:	81a3      	strh	r3, [r4, #12]
 8000746:	e7ad      	b.n	80006a4 <__sflush_r+0x1c>
 8000748:	690f      	ldr	r7, [r1, #16]
 800074a:	2f00      	cmp	r7, #0
 800074c:	d0a9      	beq.n	80006a2 <__sflush_r+0x1a>
 800074e:	0793      	lsls	r3, r2, #30
 8000750:	680e      	ldr	r6, [r1, #0]
 8000752:	bf08      	it	eq
 8000754:	694b      	ldreq	r3, [r1, #20]
 8000756:	600f      	str	r7, [r1, #0]
 8000758:	bf18      	it	ne
 800075a:	2300      	movne	r3, #0
 800075c:	eba6 0807 	sub.w	r8, r6, r7
 8000760:	608b      	str	r3, [r1, #8]
 8000762:	f1b8 0f00 	cmp.w	r8, #0
 8000766:	dd9c      	ble.n	80006a2 <__sflush_r+0x1a>
 8000768:	4643      	mov	r3, r8
 800076a:	463a      	mov	r2, r7
 800076c:	6a21      	ldr	r1, [r4, #32]
 800076e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000770:	4628      	mov	r0, r5
 8000772:	47b0      	blx	r6
 8000774:	2800      	cmp	r0, #0
 8000776:	dc06      	bgt.n	8000786 <__sflush_r+0xfe>
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800077e:	81a3      	strh	r3, [r4, #12]
 8000780:	f04f 30ff 	mov.w	r0, #4294967295
 8000784:	e78e      	b.n	80006a4 <__sflush_r+0x1c>
 8000786:	4407      	add	r7, r0
 8000788:	eba8 0800 	sub.w	r8, r8, r0
 800078c:	e7e9      	b.n	8000762 <__sflush_r+0xda>
 800078e:	bf00      	nop
 8000790:	20400001 	.word	0x20400001

08000794 <_fflush_r>:
 8000794:	b538      	push	{r3, r4, r5, lr}
 8000796:	690b      	ldr	r3, [r1, #16]
 8000798:	4605      	mov	r5, r0
 800079a:	460c      	mov	r4, r1
 800079c:	b1db      	cbz	r3, 80007d6 <_fflush_r+0x42>
 800079e:	b118      	cbz	r0, 80007a8 <_fflush_r+0x14>
 80007a0:	6983      	ldr	r3, [r0, #24]
 80007a2:	b90b      	cbnz	r3, 80007a8 <_fflush_r+0x14>
 80007a4:	f000 f860 	bl	8000868 <__sinit>
 80007a8:	4b0c      	ldr	r3, [pc, #48]	; (80007dc <_fflush_r+0x48>)
 80007aa:	429c      	cmp	r4, r3
 80007ac:	d109      	bne.n	80007c2 <_fflush_r+0x2e>
 80007ae:	686c      	ldr	r4, [r5, #4]
 80007b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007b4:	b17b      	cbz	r3, 80007d6 <_fflush_r+0x42>
 80007b6:	4621      	mov	r1, r4
 80007b8:	4628      	mov	r0, r5
 80007ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007be:	f7ff bf63 	b.w	8000688 <__sflush_r>
 80007c2:	4b07      	ldr	r3, [pc, #28]	; (80007e0 <_fflush_r+0x4c>)
 80007c4:	429c      	cmp	r4, r3
 80007c6:	d101      	bne.n	80007cc <_fflush_r+0x38>
 80007c8:	68ac      	ldr	r4, [r5, #8]
 80007ca:	e7f1      	b.n	80007b0 <_fflush_r+0x1c>
 80007cc:	4b05      	ldr	r3, [pc, #20]	; (80007e4 <_fflush_r+0x50>)
 80007ce:	429c      	cmp	r4, r3
 80007d0:	bf08      	it	eq
 80007d2:	68ec      	ldreq	r4, [r5, #12]
 80007d4:	e7ec      	b.n	80007b0 <_fflush_r+0x1c>
 80007d6:	2000      	movs	r0, #0
 80007d8:	bd38      	pop	{r3, r4, r5, pc}
 80007da:	bf00      	nop
 80007dc:	08000d64 	.word	0x08000d64
 80007e0:	08000d84 	.word	0x08000d84
 80007e4:	08000d44 	.word	0x08000d44

080007e8 <std>:
 80007e8:	2300      	movs	r3, #0
 80007ea:	b510      	push	{r4, lr}
 80007ec:	4604      	mov	r4, r0
 80007ee:	e9c0 3300 	strd	r3, r3, [r0]
 80007f2:	6083      	str	r3, [r0, #8]
 80007f4:	8181      	strh	r1, [r0, #12]
 80007f6:	6643      	str	r3, [r0, #100]	; 0x64
 80007f8:	81c2      	strh	r2, [r0, #14]
 80007fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007fe:	6183      	str	r3, [r0, #24]
 8000800:	4619      	mov	r1, r3
 8000802:	2208      	movs	r2, #8
 8000804:	305c      	adds	r0, #92	; 0x5c
 8000806:	f7ff fe13 	bl	8000430 <memset>
 800080a:	4b05      	ldr	r3, [pc, #20]	; (8000820 <std+0x38>)
 800080c:	6263      	str	r3, [r4, #36]	; 0x24
 800080e:	4b05      	ldr	r3, [pc, #20]	; (8000824 <std+0x3c>)
 8000810:	62a3      	str	r3, [r4, #40]	; 0x28
 8000812:	4b05      	ldr	r3, [pc, #20]	; (8000828 <std+0x40>)
 8000814:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000816:	4b05      	ldr	r3, [pc, #20]	; (800082c <std+0x44>)
 8000818:	6224      	str	r4, [r4, #32]
 800081a:	6323      	str	r3, [r4, #48]	; 0x30
 800081c:	bd10      	pop	{r4, pc}
 800081e:	bf00      	nop
 8000820:	08000bb5 	.word	0x08000bb5
 8000824:	08000bd7 	.word	0x08000bd7
 8000828:	08000c0f 	.word	0x08000c0f
 800082c:	08000c33 	.word	0x08000c33

08000830 <_cleanup_r>:
 8000830:	4901      	ldr	r1, [pc, #4]	; (8000838 <_cleanup_r+0x8>)
 8000832:	f000 b885 	b.w	8000940 <_fwalk_reent>
 8000836:	bf00      	nop
 8000838:	08000795 	.word	0x08000795

0800083c <__sfmoreglue>:
 800083c:	b570      	push	{r4, r5, r6, lr}
 800083e:	1e4a      	subs	r2, r1, #1
 8000840:	2568      	movs	r5, #104	; 0x68
 8000842:	4355      	muls	r5, r2
 8000844:	460e      	mov	r6, r1
 8000846:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800084a:	f000 f949 	bl	8000ae0 <_malloc_r>
 800084e:	4604      	mov	r4, r0
 8000850:	b140      	cbz	r0, 8000864 <__sfmoreglue+0x28>
 8000852:	2100      	movs	r1, #0
 8000854:	e9c0 1600 	strd	r1, r6, [r0]
 8000858:	300c      	adds	r0, #12
 800085a:	60a0      	str	r0, [r4, #8]
 800085c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000860:	f7ff fde6 	bl	8000430 <memset>
 8000864:	4620      	mov	r0, r4
 8000866:	bd70      	pop	{r4, r5, r6, pc}

08000868 <__sinit>:
 8000868:	6983      	ldr	r3, [r0, #24]
 800086a:	b510      	push	{r4, lr}
 800086c:	4604      	mov	r4, r0
 800086e:	bb33      	cbnz	r3, 80008be <__sinit+0x56>
 8000870:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000874:	6503      	str	r3, [r0, #80]	; 0x50
 8000876:	4b12      	ldr	r3, [pc, #72]	; (80008c0 <__sinit+0x58>)
 8000878:	4a12      	ldr	r2, [pc, #72]	; (80008c4 <__sinit+0x5c>)
 800087a:	681b      	ldr	r3, [r3, #0]
 800087c:	6282      	str	r2, [r0, #40]	; 0x28
 800087e:	4298      	cmp	r0, r3
 8000880:	bf04      	itt	eq
 8000882:	2301      	moveq	r3, #1
 8000884:	6183      	streq	r3, [r0, #24]
 8000886:	f000 f81f 	bl	80008c8 <__sfp>
 800088a:	6060      	str	r0, [r4, #4]
 800088c:	4620      	mov	r0, r4
 800088e:	f000 f81b 	bl	80008c8 <__sfp>
 8000892:	60a0      	str	r0, [r4, #8]
 8000894:	4620      	mov	r0, r4
 8000896:	f000 f817 	bl	80008c8 <__sfp>
 800089a:	2200      	movs	r2, #0
 800089c:	60e0      	str	r0, [r4, #12]
 800089e:	2104      	movs	r1, #4
 80008a0:	6860      	ldr	r0, [r4, #4]
 80008a2:	f7ff ffa1 	bl	80007e8 <std>
 80008a6:	2201      	movs	r2, #1
 80008a8:	2109      	movs	r1, #9
 80008aa:	68a0      	ldr	r0, [r4, #8]
 80008ac:	f7ff ff9c 	bl	80007e8 <std>
 80008b0:	2202      	movs	r2, #2
 80008b2:	2112      	movs	r1, #18
 80008b4:	68e0      	ldr	r0, [r4, #12]
 80008b6:	f7ff ff97 	bl	80007e8 <std>
 80008ba:	2301      	movs	r3, #1
 80008bc:	61a3      	str	r3, [r4, #24]
 80008be:	bd10      	pop	{r4, pc}
 80008c0:	08000d40 	.word	0x08000d40
 80008c4:	08000831 	.word	0x08000831

080008c8 <__sfp>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	4b1b      	ldr	r3, [pc, #108]	; (8000938 <__sfp+0x70>)
 80008cc:	681e      	ldr	r6, [r3, #0]
 80008ce:	69b3      	ldr	r3, [r6, #24]
 80008d0:	4607      	mov	r7, r0
 80008d2:	b913      	cbnz	r3, 80008da <__sfp+0x12>
 80008d4:	4630      	mov	r0, r6
 80008d6:	f7ff ffc7 	bl	8000868 <__sinit>
 80008da:	3648      	adds	r6, #72	; 0x48
 80008dc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008e0:	3b01      	subs	r3, #1
 80008e2:	d503      	bpl.n	80008ec <__sfp+0x24>
 80008e4:	6833      	ldr	r3, [r6, #0]
 80008e6:	b133      	cbz	r3, 80008f6 <__sfp+0x2e>
 80008e8:	6836      	ldr	r6, [r6, #0]
 80008ea:	e7f7      	b.n	80008dc <__sfp+0x14>
 80008ec:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008f0:	b16d      	cbz	r5, 800090e <__sfp+0x46>
 80008f2:	3468      	adds	r4, #104	; 0x68
 80008f4:	e7f4      	b.n	80008e0 <__sfp+0x18>
 80008f6:	2104      	movs	r1, #4
 80008f8:	4638      	mov	r0, r7
 80008fa:	f7ff ff9f 	bl	800083c <__sfmoreglue>
 80008fe:	6030      	str	r0, [r6, #0]
 8000900:	2800      	cmp	r0, #0
 8000902:	d1f1      	bne.n	80008e8 <__sfp+0x20>
 8000904:	230c      	movs	r3, #12
 8000906:	603b      	str	r3, [r7, #0]
 8000908:	4604      	mov	r4, r0
 800090a:	4620      	mov	r0, r4
 800090c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800090e:	4b0b      	ldr	r3, [pc, #44]	; (800093c <__sfp+0x74>)
 8000910:	6665      	str	r5, [r4, #100]	; 0x64
 8000912:	e9c4 5500 	strd	r5, r5, [r4]
 8000916:	60a5      	str	r5, [r4, #8]
 8000918:	e9c4 3503 	strd	r3, r5, [r4, #12]
 800091c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000920:	2208      	movs	r2, #8
 8000922:	4629      	mov	r1, r5
 8000924:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000928:	f7ff fd82 	bl	8000430 <memset>
 800092c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000930:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000934:	e7e9      	b.n	800090a <__sfp+0x42>
 8000936:	bf00      	nop
 8000938:	08000d40 	.word	0x08000d40
 800093c:	ffff0001 	.word	0xffff0001

08000940 <_fwalk_reent>:
 8000940:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000944:	4680      	mov	r8, r0
 8000946:	4689      	mov	r9, r1
 8000948:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800094c:	2600      	movs	r6, #0
 800094e:	b914      	cbnz	r4, 8000956 <_fwalk_reent+0x16>
 8000950:	4630      	mov	r0, r6
 8000952:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000956:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 800095a:	3f01      	subs	r7, #1
 800095c:	d501      	bpl.n	8000962 <_fwalk_reent+0x22>
 800095e:	6824      	ldr	r4, [r4, #0]
 8000960:	e7f5      	b.n	800094e <_fwalk_reent+0xe>
 8000962:	89ab      	ldrh	r3, [r5, #12]
 8000964:	2b01      	cmp	r3, #1
 8000966:	d907      	bls.n	8000978 <_fwalk_reent+0x38>
 8000968:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800096c:	3301      	adds	r3, #1
 800096e:	d003      	beq.n	8000978 <_fwalk_reent+0x38>
 8000970:	4629      	mov	r1, r5
 8000972:	4640      	mov	r0, r8
 8000974:	47c8      	blx	r9
 8000976:	4306      	orrs	r6, r0
 8000978:	3568      	adds	r5, #104	; 0x68
 800097a:	e7ee      	b.n	800095a <_fwalk_reent+0x1a>

0800097c <__swhatbuf_r>:
 800097c:	b570      	push	{r4, r5, r6, lr}
 800097e:	460e      	mov	r6, r1
 8000980:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000984:	2900      	cmp	r1, #0
 8000986:	b096      	sub	sp, #88	; 0x58
 8000988:	4614      	mov	r4, r2
 800098a:	461d      	mov	r5, r3
 800098c:	da07      	bge.n	800099e <__swhatbuf_r+0x22>
 800098e:	2300      	movs	r3, #0
 8000990:	602b      	str	r3, [r5, #0]
 8000992:	89b3      	ldrh	r3, [r6, #12]
 8000994:	061a      	lsls	r2, r3, #24
 8000996:	d410      	bmi.n	80009ba <__swhatbuf_r+0x3e>
 8000998:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800099c:	e00e      	b.n	80009bc <__swhatbuf_r+0x40>
 800099e:	466a      	mov	r2, sp
 80009a0:	f000 f96e 	bl	8000c80 <_fstat_r>
 80009a4:	2800      	cmp	r0, #0
 80009a6:	dbf2      	blt.n	800098e <__swhatbuf_r+0x12>
 80009a8:	9a01      	ldr	r2, [sp, #4]
 80009aa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009ae:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009b2:	425a      	negs	r2, r3
 80009b4:	415a      	adcs	r2, r3
 80009b6:	602a      	str	r2, [r5, #0]
 80009b8:	e7ee      	b.n	8000998 <__swhatbuf_r+0x1c>
 80009ba:	2340      	movs	r3, #64	; 0x40
 80009bc:	2000      	movs	r0, #0
 80009be:	6023      	str	r3, [r4, #0]
 80009c0:	b016      	add	sp, #88	; 0x58
 80009c2:	bd70      	pop	{r4, r5, r6, pc}

080009c4 <__smakebuf_r>:
 80009c4:	898b      	ldrh	r3, [r1, #12]
 80009c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009c8:	079d      	lsls	r5, r3, #30
 80009ca:	4606      	mov	r6, r0
 80009cc:	460c      	mov	r4, r1
 80009ce:	d507      	bpl.n	80009e0 <__smakebuf_r+0x1c>
 80009d0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009d4:	6023      	str	r3, [r4, #0]
 80009d6:	6123      	str	r3, [r4, #16]
 80009d8:	2301      	movs	r3, #1
 80009da:	6163      	str	r3, [r4, #20]
 80009dc:	b002      	add	sp, #8
 80009de:	bd70      	pop	{r4, r5, r6, pc}
 80009e0:	ab01      	add	r3, sp, #4
 80009e2:	466a      	mov	r2, sp
 80009e4:	f7ff ffca 	bl	800097c <__swhatbuf_r>
 80009e8:	9900      	ldr	r1, [sp, #0]
 80009ea:	4605      	mov	r5, r0
 80009ec:	4630      	mov	r0, r6
 80009ee:	f000 f877 	bl	8000ae0 <_malloc_r>
 80009f2:	b948      	cbnz	r0, 8000a08 <__smakebuf_r+0x44>
 80009f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009f8:	059a      	lsls	r2, r3, #22
 80009fa:	d4ef      	bmi.n	80009dc <__smakebuf_r+0x18>
 80009fc:	f023 0303 	bic.w	r3, r3, #3
 8000a00:	f043 0302 	orr.w	r3, r3, #2
 8000a04:	81a3      	strh	r3, [r4, #12]
 8000a06:	e7e3      	b.n	80009d0 <__smakebuf_r+0xc>
 8000a08:	4b0d      	ldr	r3, [pc, #52]	; (8000a40 <__smakebuf_r+0x7c>)
 8000a0a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a0c:	89a3      	ldrh	r3, [r4, #12]
 8000a0e:	6020      	str	r0, [r4, #0]
 8000a10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a14:	81a3      	strh	r3, [r4, #12]
 8000a16:	9b00      	ldr	r3, [sp, #0]
 8000a18:	6163      	str	r3, [r4, #20]
 8000a1a:	9b01      	ldr	r3, [sp, #4]
 8000a1c:	6120      	str	r0, [r4, #16]
 8000a1e:	b15b      	cbz	r3, 8000a38 <__smakebuf_r+0x74>
 8000a20:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a24:	4630      	mov	r0, r6
 8000a26:	f000 f93d 	bl	8000ca4 <_isatty_r>
 8000a2a:	b128      	cbz	r0, 8000a38 <__smakebuf_r+0x74>
 8000a2c:	89a3      	ldrh	r3, [r4, #12]
 8000a2e:	f023 0303 	bic.w	r3, r3, #3
 8000a32:	f043 0301 	orr.w	r3, r3, #1
 8000a36:	81a3      	strh	r3, [r4, #12]
 8000a38:	89a3      	ldrh	r3, [r4, #12]
 8000a3a:	431d      	orrs	r5, r3
 8000a3c:	81a5      	strh	r5, [r4, #12]
 8000a3e:	e7cd      	b.n	80009dc <__smakebuf_r+0x18>
 8000a40:	08000831 	.word	0x08000831

08000a44 <_free_r>:
 8000a44:	b538      	push	{r3, r4, r5, lr}
 8000a46:	4605      	mov	r5, r0
 8000a48:	2900      	cmp	r1, #0
 8000a4a:	d045      	beq.n	8000ad8 <_free_r+0x94>
 8000a4c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a50:	1f0c      	subs	r4, r1, #4
 8000a52:	2b00      	cmp	r3, #0
 8000a54:	bfb8      	it	lt
 8000a56:	18e4      	addlt	r4, r4, r3
 8000a58:	f000 f946 	bl	8000ce8 <__malloc_lock>
 8000a5c:	4a1f      	ldr	r2, [pc, #124]	; (8000adc <_free_r+0x98>)
 8000a5e:	6813      	ldr	r3, [r2, #0]
 8000a60:	4610      	mov	r0, r2
 8000a62:	b933      	cbnz	r3, 8000a72 <_free_r+0x2e>
 8000a64:	6063      	str	r3, [r4, #4]
 8000a66:	6014      	str	r4, [r2, #0]
 8000a68:	4628      	mov	r0, r5
 8000a6a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a6e:	f000 b93c 	b.w	8000cea <__malloc_unlock>
 8000a72:	42a3      	cmp	r3, r4
 8000a74:	d90c      	bls.n	8000a90 <_free_r+0x4c>
 8000a76:	6821      	ldr	r1, [r4, #0]
 8000a78:	1862      	adds	r2, r4, r1
 8000a7a:	4293      	cmp	r3, r2
 8000a7c:	bf04      	itt	eq
 8000a7e:	681a      	ldreq	r2, [r3, #0]
 8000a80:	685b      	ldreq	r3, [r3, #4]
 8000a82:	6063      	str	r3, [r4, #4]
 8000a84:	bf04      	itt	eq
 8000a86:	1852      	addeq	r2, r2, r1
 8000a88:	6022      	streq	r2, [r4, #0]
 8000a8a:	6004      	str	r4, [r0, #0]
 8000a8c:	e7ec      	b.n	8000a68 <_free_r+0x24>
 8000a8e:	4613      	mov	r3, r2
 8000a90:	685a      	ldr	r2, [r3, #4]
 8000a92:	b10a      	cbz	r2, 8000a98 <_free_r+0x54>
 8000a94:	42a2      	cmp	r2, r4
 8000a96:	d9fa      	bls.n	8000a8e <_free_r+0x4a>
 8000a98:	6819      	ldr	r1, [r3, #0]
 8000a9a:	1858      	adds	r0, r3, r1
 8000a9c:	42a0      	cmp	r0, r4
 8000a9e:	d10b      	bne.n	8000ab8 <_free_r+0x74>
 8000aa0:	6820      	ldr	r0, [r4, #0]
 8000aa2:	4401      	add	r1, r0
 8000aa4:	1858      	adds	r0, r3, r1
 8000aa6:	4282      	cmp	r2, r0
 8000aa8:	6019      	str	r1, [r3, #0]
 8000aaa:	d1dd      	bne.n	8000a68 <_free_r+0x24>
 8000aac:	6810      	ldr	r0, [r2, #0]
 8000aae:	6852      	ldr	r2, [r2, #4]
 8000ab0:	605a      	str	r2, [r3, #4]
 8000ab2:	4401      	add	r1, r0
 8000ab4:	6019      	str	r1, [r3, #0]
 8000ab6:	e7d7      	b.n	8000a68 <_free_r+0x24>
 8000ab8:	d902      	bls.n	8000ac0 <_free_r+0x7c>
 8000aba:	230c      	movs	r3, #12
 8000abc:	602b      	str	r3, [r5, #0]
 8000abe:	e7d3      	b.n	8000a68 <_free_r+0x24>
 8000ac0:	6820      	ldr	r0, [r4, #0]
 8000ac2:	1821      	adds	r1, r4, r0
 8000ac4:	428a      	cmp	r2, r1
 8000ac6:	bf04      	itt	eq
 8000ac8:	6811      	ldreq	r1, [r2, #0]
 8000aca:	6852      	ldreq	r2, [r2, #4]
 8000acc:	6062      	str	r2, [r4, #4]
 8000ace:	bf04      	itt	eq
 8000ad0:	1809      	addeq	r1, r1, r0
 8000ad2:	6021      	streq	r1, [r4, #0]
 8000ad4:	605c      	str	r4, [r3, #4]
 8000ad6:	e7c7      	b.n	8000a68 <_free_r+0x24>
 8000ad8:	bd38      	pop	{r3, r4, r5, pc}
 8000ada:	bf00      	nop
 8000adc:	20000084 	.word	0x20000084

08000ae0 <_malloc_r>:
 8000ae0:	b570      	push	{r4, r5, r6, lr}
 8000ae2:	1ccd      	adds	r5, r1, #3
 8000ae4:	f025 0503 	bic.w	r5, r5, #3
 8000ae8:	3508      	adds	r5, #8
 8000aea:	2d0c      	cmp	r5, #12
 8000aec:	bf38      	it	cc
 8000aee:	250c      	movcc	r5, #12
 8000af0:	2d00      	cmp	r5, #0
 8000af2:	4606      	mov	r6, r0
 8000af4:	db01      	blt.n	8000afa <_malloc_r+0x1a>
 8000af6:	42a9      	cmp	r1, r5
 8000af8:	d903      	bls.n	8000b02 <_malloc_r+0x22>
 8000afa:	230c      	movs	r3, #12
 8000afc:	6033      	str	r3, [r6, #0]
 8000afe:	2000      	movs	r0, #0
 8000b00:	bd70      	pop	{r4, r5, r6, pc}
 8000b02:	f000 f8f1 	bl	8000ce8 <__malloc_lock>
 8000b06:	4a21      	ldr	r2, [pc, #132]	; (8000b8c <_malloc_r+0xac>)
 8000b08:	6814      	ldr	r4, [r2, #0]
 8000b0a:	4621      	mov	r1, r4
 8000b0c:	b991      	cbnz	r1, 8000b34 <_malloc_r+0x54>
 8000b0e:	4c20      	ldr	r4, [pc, #128]	; (8000b90 <_malloc_r+0xb0>)
 8000b10:	6823      	ldr	r3, [r4, #0]
 8000b12:	b91b      	cbnz	r3, 8000b1c <_malloc_r+0x3c>
 8000b14:	4630      	mov	r0, r6
 8000b16:	f000 f83d 	bl	8000b94 <_sbrk_r>
 8000b1a:	6020      	str	r0, [r4, #0]
 8000b1c:	4629      	mov	r1, r5
 8000b1e:	4630      	mov	r0, r6
 8000b20:	f000 f838 	bl	8000b94 <_sbrk_r>
 8000b24:	1c43      	adds	r3, r0, #1
 8000b26:	d124      	bne.n	8000b72 <_malloc_r+0x92>
 8000b28:	230c      	movs	r3, #12
 8000b2a:	6033      	str	r3, [r6, #0]
 8000b2c:	4630      	mov	r0, r6
 8000b2e:	f000 f8dc 	bl	8000cea <__malloc_unlock>
 8000b32:	e7e4      	b.n	8000afe <_malloc_r+0x1e>
 8000b34:	680b      	ldr	r3, [r1, #0]
 8000b36:	1b5b      	subs	r3, r3, r5
 8000b38:	d418      	bmi.n	8000b6c <_malloc_r+0x8c>
 8000b3a:	2b0b      	cmp	r3, #11
 8000b3c:	d90f      	bls.n	8000b5e <_malloc_r+0x7e>
 8000b3e:	600b      	str	r3, [r1, #0]
 8000b40:	50cd      	str	r5, [r1, r3]
 8000b42:	18cc      	adds	r4, r1, r3
 8000b44:	4630      	mov	r0, r6
 8000b46:	f000 f8d0 	bl	8000cea <__malloc_unlock>
 8000b4a:	f104 000b 	add.w	r0, r4, #11
 8000b4e:	1d23      	adds	r3, r4, #4
 8000b50:	f020 0007 	bic.w	r0, r0, #7
 8000b54:	1ac3      	subs	r3, r0, r3
 8000b56:	d0d3      	beq.n	8000b00 <_malloc_r+0x20>
 8000b58:	425a      	negs	r2, r3
 8000b5a:	50e2      	str	r2, [r4, r3]
 8000b5c:	e7d0      	b.n	8000b00 <_malloc_r+0x20>
 8000b5e:	428c      	cmp	r4, r1
 8000b60:	684b      	ldr	r3, [r1, #4]
 8000b62:	bf16      	itet	ne
 8000b64:	6063      	strne	r3, [r4, #4]
 8000b66:	6013      	streq	r3, [r2, #0]
 8000b68:	460c      	movne	r4, r1
 8000b6a:	e7eb      	b.n	8000b44 <_malloc_r+0x64>
 8000b6c:	460c      	mov	r4, r1
 8000b6e:	6849      	ldr	r1, [r1, #4]
 8000b70:	e7cc      	b.n	8000b0c <_malloc_r+0x2c>
 8000b72:	1cc4      	adds	r4, r0, #3
 8000b74:	f024 0403 	bic.w	r4, r4, #3
 8000b78:	42a0      	cmp	r0, r4
 8000b7a:	d005      	beq.n	8000b88 <_malloc_r+0xa8>
 8000b7c:	1a21      	subs	r1, r4, r0
 8000b7e:	4630      	mov	r0, r6
 8000b80:	f000 f808 	bl	8000b94 <_sbrk_r>
 8000b84:	3001      	adds	r0, #1
 8000b86:	d0cf      	beq.n	8000b28 <_malloc_r+0x48>
 8000b88:	6025      	str	r5, [r4, #0]
 8000b8a:	e7db      	b.n	8000b44 <_malloc_r+0x64>
 8000b8c:	20000084 	.word	0x20000084
 8000b90:	20000088 	.word	0x20000088

08000b94 <_sbrk_r>:
 8000b94:	b538      	push	{r3, r4, r5, lr}
 8000b96:	4c06      	ldr	r4, [pc, #24]	; (8000bb0 <_sbrk_r+0x1c>)
 8000b98:	2300      	movs	r3, #0
 8000b9a:	4605      	mov	r5, r0
 8000b9c:	4608      	mov	r0, r1
 8000b9e:	6023      	str	r3, [r4, #0]
 8000ba0:	f7ff fbbc 	bl	800031c <_sbrk>
 8000ba4:	1c43      	adds	r3, r0, #1
 8000ba6:	d102      	bne.n	8000bae <_sbrk_r+0x1a>
 8000ba8:	6823      	ldr	r3, [r4, #0]
 8000baa:	b103      	cbz	r3, 8000bae <_sbrk_r+0x1a>
 8000bac:	602b      	str	r3, [r5, #0]
 8000bae:	bd38      	pop	{r3, r4, r5, pc}
 8000bb0:	2000008c 	.word	0x2000008c

08000bb4 <__sread>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	460c      	mov	r4, r1
 8000bb8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bbc:	f000 f896 	bl	8000cec <_read_r>
 8000bc0:	2800      	cmp	r0, #0
 8000bc2:	bfab      	itete	ge
 8000bc4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000bc6:	89a3      	ldrhlt	r3, [r4, #12]
 8000bc8:	181b      	addge	r3, r3, r0
 8000bca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000bce:	bfac      	ite	ge
 8000bd0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000bd2:	81a3      	strhlt	r3, [r4, #12]
 8000bd4:	bd10      	pop	{r4, pc}

08000bd6 <__swrite>:
 8000bd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bda:	461f      	mov	r7, r3
 8000bdc:	898b      	ldrh	r3, [r1, #12]
 8000bde:	05db      	lsls	r3, r3, #23
 8000be0:	4605      	mov	r5, r0
 8000be2:	460c      	mov	r4, r1
 8000be4:	4616      	mov	r6, r2
 8000be6:	d505      	bpl.n	8000bf4 <__swrite+0x1e>
 8000be8:	2302      	movs	r3, #2
 8000bea:	2200      	movs	r2, #0
 8000bec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bf0:	f000 f868 	bl	8000cc4 <_lseek_r>
 8000bf4:	89a3      	ldrh	r3, [r4, #12]
 8000bf6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bfa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000bfe:	81a3      	strh	r3, [r4, #12]
 8000c00:	4632      	mov	r2, r6
 8000c02:	463b      	mov	r3, r7
 8000c04:	4628      	mov	r0, r5
 8000c06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c0a:	f000 b817 	b.w	8000c3c <_write_r>

08000c0e <__sseek>:
 8000c0e:	b510      	push	{r4, lr}
 8000c10:	460c      	mov	r4, r1
 8000c12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c16:	f000 f855 	bl	8000cc4 <_lseek_r>
 8000c1a:	1c43      	adds	r3, r0, #1
 8000c1c:	89a3      	ldrh	r3, [r4, #12]
 8000c1e:	bf15      	itete	ne
 8000c20:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c22:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c26:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c2a:	81a3      	strheq	r3, [r4, #12]
 8000c2c:	bf18      	it	ne
 8000c2e:	81a3      	strhne	r3, [r4, #12]
 8000c30:	bd10      	pop	{r4, pc}

08000c32 <__sclose>:
 8000c32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c36:	f000 b813 	b.w	8000c60 <_close_r>
	...

08000c3c <_write_r>:
 8000c3c:	b538      	push	{r3, r4, r5, lr}
 8000c3e:	4c07      	ldr	r4, [pc, #28]	; (8000c5c <_write_r+0x20>)
 8000c40:	4605      	mov	r5, r0
 8000c42:	4608      	mov	r0, r1
 8000c44:	4611      	mov	r1, r2
 8000c46:	2200      	movs	r2, #0
 8000c48:	6022      	str	r2, [r4, #0]
 8000c4a:	461a      	mov	r2, r3
 8000c4c:	f7ff fb19 	bl	8000282 <_write>
 8000c50:	1c43      	adds	r3, r0, #1
 8000c52:	d102      	bne.n	8000c5a <_write_r+0x1e>
 8000c54:	6823      	ldr	r3, [r4, #0]
 8000c56:	b103      	cbz	r3, 8000c5a <_write_r+0x1e>
 8000c58:	602b      	str	r3, [r5, #0]
 8000c5a:	bd38      	pop	{r3, r4, r5, pc}
 8000c5c:	2000008c 	.word	0x2000008c

08000c60 <_close_r>:
 8000c60:	b538      	push	{r3, r4, r5, lr}
 8000c62:	4c06      	ldr	r4, [pc, #24]	; (8000c7c <_close_r+0x1c>)
 8000c64:	2300      	movs	r3, #0
 8000c66:	4605      	mov	r5, r0
 8000c68:	4608      	mov	r0, r1
 8000c6a:	6023      	str	r3, [r4, #0]
 8000c6c:	f7ff fb25 	bl	80002ba <_close>
 8000c70:	1c43      	adds	r3, r0, #1
 8000c72:	d102      	bne.n	8000c7a <_close_r+0x1a>
 8000c74:	6823      	ldr	r3, [r4, #0]
 8000c76:	b103      	cbz	r3, 8000c7a <_close_r+0x1a>
 8000c78:	602b      	str	r3, [r5, #0]
 8000c7a:	bd38      	pop	{r3, r4, r5, pc}
 8000c7c:	2000008c 	.word	0x2000008c

08000c80 <_fstat_r>:
 8000c80:	b538      	push	{r3, r4, r5, lr}
 8000c82:	4c07      	ldr	r4, [pc, #28]	; (8000ca0 <_fstat_r+0x20>)
 8000c84:	2300      	movs	r3, #0
 8000c86:	4605      	mov	r5, r0
 8000c88:	4608      	mov	r0, r1
 8000c8a:	4611      	mov	r1, r2
 8000c8c:	6023      	str	r3, [r4, #0]
 8000c8e:	f7ff fb1f 	bl	80002d0 <_fstat>
 8000c92:	1c43      	adds	r3, r0, #1
 8000c94:	d102      	bne.n	8000c9c <_fstat_r+0x1c>
 8000c96:	6823      	ldr	r3, [r4, #0]
 8000c98:	b103      	cbz	r3, 8000c9c <_fstat_r+0x1c>
 8000c9a:	602b      	str	r3, [r5, #0]
 8000c9c:	bd38      	pop	{r3, r4, r5, pc}
 8000c9e:	bf00      	nop
 8000ca0:	2000008c 	.word	0x2000008c

08000ca4 <_isatty_r>:
 8000ca4:	b538      	push	{r3, r4, r5, lr}
 8000ca6:	4c06      	ldr	r4, [pc, #24]	; (8000cc0 <_isatty_r+0x1c>)
 8000ca8:	2300      	movs	r3, #0
 8000caa:	4605      	mov	r5, r0
 8000cac:	4608      	mov	r0, r1
 8000cae:	6023      	str	r3, [r4, #0]
 8000cb0:	f7ff fb1d 	bl	80002ee <_isatty>
 8000cb4:	1c43      	adds	r3, r0, #1
 8000cb6:	d102      	bne.n	8000cbe <_isatty_r+0x1a>
 8000cb8:	6823      	ldr	r3, [r4, #0]
 8000cba:	b103      	cbz	r3, 8000cbe <_isatty_r+0x1a>
 8000cbc:	602b      	str	r3, [r5, #0]
 8000cbe:	bd38      	pop	{r3, r4, r5, pc}
 8000cc0:	2000008c 	.word	0x2000008c

08000cc4 <_lseek_r>:
 8000cc4:	b538      	push	{r3, r4, r5, lr}
 8000cc6:	4c07      	ldr	r4, [pc, #28]	; (8000ce4 <_lseek_r+0x20>)
 8000cc8:	4605      	mov	r5, r0
 8000cca:	4608      	mov	r0, r1
 8000ccc:	4611      	mov	r1, r2
 8000cce:	2200      	movs	r2, #0
 8000cd0:	6022      	str	r2, [r4, #0]
 8000cd2:	461a      	mov	r2, r3
 8000cd4:	f7ff fb15 	bl	8000302 <_lseek>
 8000cd8:	1c43      	adds	r3, r0, #1
 8000cda:	d102      	bne.n	8000ce2 <_lseek_r+0x1e>
 8000cdc:	6823      	ldr	r3, [r4, #0]
 8000cde:	b103      	cbz	r3, 8000ce2 <_lseek_r+0x1e>
 8000ce0:	602b      	str	r3, [r5, #0]
 8000ce2:	bd38      	pop	{r3, r4, r5, pc}
 8000ce4:	2000008c 	.word	0x2000008c

08000ce8 <__malloc_lock>:
 8000ce8:	4770      	bx	lr

08000cea <__malloc_unlock>:
 8000cea:	4770      	bx	lr

08000cec <_read_r>:
 8000cec:	b538      	push	{r3, r4, r5, lr}
 8000cee:	4c07      	ldr	r4, [pc, #28]	; (8000d0c <_read_r+0x20>)
 8000cf0:	4605      	mov	r5, r0
 8000cf2:	4608      	mov	r0, r1
 8000cf4:	4611      	mov	r1, r2
 8000cf6:	2200      	movs	r2, #0
 8000cf8:	6022      	str	r2, [r4, #0]
 8000cfa:	461a      	mov	r2, r3
 8000cfc:	f7ff faa4 	bl	8000248 <_read>
 8000d00:	1c43      	adds	r3, r0, #1
 8000d02:	d102      	bne.n	8000d0a <_read_r+0x1e>
 8000d04:	6823      	ldr	r3, [r4, #0]
 8000d06:	b103      	cbz	r3, 8000d0a <_read_r+0x1e>
 8000d08:	602b      	str	r3, [r5, #0]
 8000d0a:	bd38      	pop	{r3, r4, r5, pc}
 8000d0c:	2000008c 	.word	0x2000008c

08000d10 <_init>:
 8000d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d12:	bf00      	nop
 8000d14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d16:	bc08      	pop	{r3}
 8000d18:	469e      	mov	lr, r3
 8000d1a:	4770      	bx	lr

08000d1c <_fini>:
 8000d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d1e:	bf00      	nop
 8000d20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d22:	bc08      	pop	{r3}
 8000d24:	469e      	mov	lr, r3
 8000d26:	4770      	bx	lr
