
Fault_Gen.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001270  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001f0  08001440  08001440  00011440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001630  08001630  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001630  08001630  00011630  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001634  08001634  00011634  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001638  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  0800169c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  0800169c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002223  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000061e  00000000  00000000  000222b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000148  00000000  00000000  000228d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000110  00000000  00000000  00022a18  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000029cc  00000000  00000000  00022b28  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000128e  00000000  00000000  000254f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009167  00000000  00000000  00026782  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f8e9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b18  00000000  00000000  0002f964  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001428 	.word	0x08001428

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001428 	.word	0x08001428

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <fun_divide>:
#endif

#include <stdio.h>
#include <stdint.h>

int fun_divide(int x,int y){
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]

	return x/y;
 80002ba:	687a      	ldr	r2, [r7, #4]
 80002bc:	683b      	ldr	r3, [r7, #0]
 80002be:	fb92 f3f3 	sdiv	r3, r2, r3

}
 80002c2:	4618      	mov	r0, r3
 80002c4:	370c      	adds	r7, #12
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr

080002cc <main>:

int main(void)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b082      	sub	sp, #8
 80002d0:	af00      	add	r7, sp, #0
    /* Loop forever */

	//1. Enable all configurable exceptions Usage_Fault, mem manage fault and bus fault

	uint32_t *pSHCSR = (uint32_t*) 0xE000ED24;
 80002d2:	4b10      	ldr	r3, [pc, #64]	; (8000314 <main+0x48>)
 80002d4:	607b      	str	r3, [r7, #4]

	*pSHCSR |= (1 << 16); //mem_manage fault
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1 << 17); //bus fault
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1 << 18); //usage fault
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	601a      	str	r2, [r3, #0]

	//3.Let's enable divide by 0 trap

	uint32_t *pCCR = (uint32_t*)0xE000ED14;
 80002fa:	4b07      	ldr	r3, [pc, #28]	; (8000318 <main+0x4c>)
 80002fc:	603b      	str	r3, [r7, #0]
	*pCCR |= (1<<4);
 80002fe:	683b      	ldr	r3, [r7, #0]
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	f043 0210 	orr.w	r2, r3, #16
 8000306:	683b      	ldr	r3, [r7, #0]
 8000308:	601a      	str	r2, [r3, #0]

	//Attempt to divide by 0

	fun_divide(10,0);
 800030a:	2100      	movs	r1, #0
 800030c:	200a      	movs	r0, #10
 800030e:	f7ff ffcf 	bl	80002b0 <fun_divide>

	for(;;);
 8000312:	e7fe      	b.n	8000312 <main+0x46>
 8000314:	e000ed24 	.word	0xe000ed24
 8000318:	e000ed14 	.word	0xe000ed14

0800031c <HardFault_Handler>:
}

//2. Implement Fault Handlers

void HardFault_Handler(void){
 800031c:	b580      	push	{r7, lr}
 800031e:	af00      	add	r7, sp, #0

	printf("In HardFault Exception Handler ");
 8000320:	4801      	ldr	r0, [pc, #4]	; (8000328 <HardFault_Handler+0xc>)
 8000322:	f000 f99f 	bl	8000664 <iprintf>
	while(1);
 8000326:	e7fe      	b.n	8000326 <HardFault_Handler+0xa>
 8000328:	08001440 	.word	0x08001440

0800032c <MemManage_Handler>:

}

void MemManage_Handler(void){
 800032c:	b580      	push	{r7, lr}
 800032e:	af00      	add	r7, sp, #0

	printf("In MemManage Exception Handler\n ");
 8000330:	4801      	ldr	r0, [pc, #4]	; (8000338 <MemManage_Handler+0xc>)
 8000332:	f000 f997 	bl	8000664 <iprintf>
	while(1);
 8000336:	e7fe      	b.n	8000336 <MemManage_Handler+0xa>
 8000338:	08001460 	.word	0x08001460

0800033c <BusFault_Handler>:

}

void BusFault_Handler(void){
 800033c:	b580      	push	{r7, lr}
 800033e:	af00      	add	r7, sp, #0

	printf("In BusFault Exception Handler\n ");
 8000340:	4801      	ldr	r0, [pc, #4]	; (8000348 <BusFault_Handler+0xc>)
 8000342:	f000 f98f 	bl	8000664 <iprintf>
	while(1);
 8000346:	e7fe      	b.n	8000346 <BusFault_Handler+0xa>
 8000348:	08001484 	.word	0x08001484

0800034c <UsageFault_Handler>:
__attribute__((naked)) void UsageFault_Handler (void){

	//here we extracted the value of MSP which happens to be the
	//base address of stack frame which got saved during exception entry
	//from thread mode to handler mode
	__asm ("MRS r0,MSP");
 800034c:	f3ef 8008 	mrs	r0, MSP
	__asm ("B UsageFault_Handler_c");
 8000350:	f000 b802 	b.w	8000358 <UsageFault_Handler_c>


}
 8000354:	bf00      	nop
	...

08000358 <UsageFault_Handler_c>:

void UsageFault_Handler_c(uint32_t *pBaseStackFrame){
 8000358:	b580      	push	{r7, lr}
 800035a:	b084      	sub	sp, #16
 800035c:	af00      	add	r7, sp, #0
 800035e:	6078      	str	r0, [r7, #4]




	uint32_t *pUFSR = (uint32_t*)0xE000ED2A;
 8000360:	4b23      	ldr	r3, [pc, #140]	; (80003f0 <UsageFault_Handler_c+0x98>)
 8000362:	60fb      	str	r3, [r7, #12]
	printf("In UsageFault Exception Handler\n ");
 8000364:	4823      	ldr	r0, [pc, #140]	; (80003f4 <UsageFault_Handler_c+0x9c>)
 8000366:	f000 f97d 	bl	8000664 <iprintf>
	printf("UFSR = %lx\n ", (*pUFSR) & 0xFFFF);
 800036a:	68fb      	ldr	r3, [r7, #12]
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	b29b      	uxth	r3, r3
 8000370:	4619      	mov	r1, r3
 8000372:	4821      	ldr	r0, [pc, #132]	; (80003f8 <UsageFault_Handler_c+0xa0>)
 8000374:	f000 f976 	bl	8000664 <iprintf>
	printf("pBaseStackFrame = %p\n ", pBaseStackFrame);
 8000378:	6879      	ldr	r1, [r7, #4]
 800037a:	4820      	ldr	r0, [pc, #128]	; (80003fc <UsageFault_Handler_c+0xa4>)
 800037c:	f000 f972 	bl	8000664 <iprintf>
	printf("value of R0 = %lx\n ", pBaseStackFrame[0]);
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	4619      	mov	r1, r3
 8000386:	481e      	ldr	r0, [pc, #120]	; (8000400 <UsageFault_Handler_c+0xa8>)
 8000388:	f000 f96c 	bl	8000664 <iprintf>
	printf("value of R1 = %lx\n ", pBaseStackFrame[1]);
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	3304      	adds	r3, #4
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	4619      	mov	r1, r3
 8000394:	481b      	ldr	r0, [pc, #108]	; (8000404 <UsageFault_Handler_c+0xac>)
 8000396:	f000 f965 	bl	8000664 <iprintf>
	printf("value of R2 = %lx\n ", pBaseStackFrame[2]);
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	3308      	adds	r3, #8
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	4619      	mov	r1, r3
 80003a2:	4819      	ldr	r0, [pc, #100]	; (8000408 <UsageFault_Handler_c+0xb0>)
 80003a4:	f000 f95e 	bl	8000664 <iprintf>
	printf("value of R3 = %lx\n ", pBaseStackFrame[3]);
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	330c      	adds	r3, #12
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	4619      	mov	r1, r3
 80003b0:	4816      	ldr	r0, [pc, #88]	; (800040c <UsageFault_Handler_c+0xb4>)
 80003b2:	f000 f957 	bl	8000664 <iprintf>
	printf("value of R12 = %lx\n ", pBaseStackFrame[4]);
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	3310      	adds	r3, #16
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	4619      	mov	r1, r3
 80003be:	4814      	ldr	r0, [pc, #80]	; (8000410 <UsageFault_Handler_c+0xb8>)
 80003c0:	f000 f950 	bl	8000664 <iprintf>
	printf("value of LR = %lx\n ", pBaseStackFrame[5]);
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	3314      	adds	r3, #20
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	4619      	mov	r1, r3
 80003cc:	4811      	ldr	r0, [pc, #68]	; (8000414 <UsageFault_Handler_c+0xbc>)
 80003ce:	f000 f949 	bl	8000664 <iprintf>
	printf("value of PC = %lx\n ", pBaseStackFrame[6]);
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	3318      	adds	r3, #24
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	4619      	mov	r1, r3
 80003da:	480f      	ldr	r0, [pc, #60]	; (8000418 <UsageFault_Handler_c+0xc0>)
 80003dc:	f000 f942 	bl	8000664 <iprintf>
	printf("value of xPSR = %lx\n ", pBaseStackFrame[7]);
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	331c      	adds	r3, #28
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	4619      	mov	r1, r3
 80003e8:	480c      	ldr	r0, [pc, #48]	; (800041c <UsageFault_Handler_c+0xc4>)
 80003ea:	f000 f93b 	bl	8000664 <iprintf>

	while(1);
 80003ee:	e7fe      	b.n	80003ee <UsageFault_Handler_c+0x96>
 80003f0:	e000ed2a 	.word	0xe000ed2a
 80003f4:	080014a4 	.word	0x080014a4
 80003f8:	080014c8 	.word	0x080014c8
 80003fc:	080014d8 	.word	0x080014d8
 8000400:	080014f0 	.word	0x080014f0
 8000404:	08001504 	.word	0x08001504
 8000408:	08001518 	.word	0x08001518
 800040c:	0800152c 	.word	0x0800152c
 8000410:	08001540 	.word	0x08001540
 8000414:	08001558 	.word	0x08001558
 8000418:	0800156c 	.word	0x0800156c
 800041c:	08001580 	.word	0x08001580

08000420 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000420:	b480      	push	{r7}
 8000422:	b083      	sub	sp, #12
 8000424:	af00      	add	r7, sp, #0
 8000426:	4603      	mov	r3, r0
 8000428:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800042a:	4b0e      	ldr	r3, [pc, #56]	; (8000464 <ITM_SendChar+0x44>)
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a0d      	ldr	r2, [pc, #52]	; (8000464 <ITM_SendChar+0x44>)
 8000430:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000434:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000436:	4b0c      	ldr	r3, [pc, #48]	; (8000468 <ITM_SendChar+0x48>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	4a0b      	ldr	r2, [pc, #44]	; (8000468 <ITM_SendChar+0x48>)
 800043c:	f043 0301 	orr.w	r3, r3, #1
 8000440:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000442:	bf00      	nop
 8000444:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	f003 0301 	and.w	r3, r3, #1
 800044e:	2b00      	cmp	r3, #0
 8000450:	d0f8      	beq.n	8000444 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000452:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000456:	79fb      	ldrb	r3, [r7, #7]
 8000458:	6013      	str	r3, [r2, #0]
}
 800045a:	bf00      	nop
 800045c:	370c      	adds	r7, #12
 800045e:	46bd      	mov	sp, r7
 8000460:	bc80      	pop	{r7}
 8000462:	4770      	bx	lr
 8000464:	e000edfc 	.word	0xe000edfc
 8000468:	e0000e00 	.word	0xe0000e00

0800046c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b086      	sub	sp, #24
 8000470:	af00      	add	r7, sp, #0
 8000472:	60f8      	str	r0, [r7, #12]
 8000474:	60b9      	str	r1, [r7, #8]
 8000476:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000478:	2300      	movs	r3, #0
 800047a:	617b      	str	r3, [r7, #20]
 800047c:	e00a      	b.n	8000494 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800047e:	f3af 8000 	nop.w
 8000482:	4601      	mov	r1, r0
 8000484:	68bb      	ldr	r3, [r7, #8]
 8000486:	1c5a      	adds	r2, r3, #1
 8000488:	60ba      	str	r2, [r7, #8]
 800048a:	b2ca      	uxtb	r2, r1
 800048c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800048e:	697b      	ldr	r3, [r7, #20]
 8000490:	3301      	adds	r3, #1
 8000492:	617b      	str	r3, [r7, #20]
 8000494:	697a      	ldr	r2, [r7, #20]
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	429a      	cmp	r2, r3
 800049a:	dbf0      	blt.n	800047e <_read+0x12>
	}

return len;
 800049c:	687b      	ldr	r3, [r7, #4]
}
 800049e:	4618      	mov	r0, r3
 80004a0:	3718      	adds	r7, #24
 80004a2:	46bd      	mov	sp, r7
 80004a4:	bd80      	pop	{r7, pc}

080004a6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004a6:	b580      	push	{r7, lr}
 80004a8:	b086      	sub	sp, #24
 80004aa:	af00      	add	r7, sp, #0
 80004ac:	60f8      	str	r0, [r7, #12]
 80004ae:	60b9      	str	r1, [r7, #8]
 80004b0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004b2:	2300      	movs	r3, #0
 80004b4:	617b      	str	r3, [r7, #20]
 80004b6:	e009      	b.n	80004cc <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80004b8:	68bb      	ldr	r3, [r7, #8]
 80004ba:	1c5a      	adds	r2, r3, #1
 80004bc:	60ba      	str	r2, [r7, #8]
 80004be:	781b      	ldrb	r3, [r3, #0]
 80004c0:	4618      	mov	r0, r3
 80004c2:	f7ff ffad 	bl	8000420 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004c6:	697b      	ldr	r3, [r7, #20]
 80004c8:	3301      	adds	r3, #1
 80004ca:	617b      	str	r3, [r7, #20]
 80004cc:	697a      	ldr	r2, [r7, #20]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	429a      	cmp	r2, r3
 80004d2:	dbf1      	blt.n	80004b8 <_write+0x12>
	}
	return len;
 80004d4:	687b      	ldr	r3, [r7, #4]
}
 80004d6:	4618      	mov	r0, r3
 80004d8:	3718      	adds	r7, #24
 80004da:	46bd      	mov	sp, r7
 80004dc:	bd80      	pop	{r7, pc}

080004de <_close>:

int _close(int file)
{
 80004de:	b480      	push	{r7}
 80004e0:	b083      	sub	sp, #12
 80004e2:	af00      	add	r7, sp, #0
 80004e4:	6078      	str	r0, [r7, #4]
	return -1;
 80004e6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004ea:	4618      	mov	r0, r3
 80004ec:	370c      	adds	r7, #12
 80004ee:	46bd      	mov	sp, r7
 80004f0:	bc80      	pop	{r7}
 80004f2:	4770      	bx	lr

080004f4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004f4:	b480      	push	{r7}
 80004f6:	b083      	sub	sp, #12
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004fe:	683b      	ldr	r3, [r7, #0]
 8000500:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000504:	605a      	str	r2, [r3, #4]
	return 0;
 8000506:	2300      	movs	r3, #0
}
 8000508:	4618      	mov	r0, r3
 800050a:	370c      	adds	r7, #12
 800050c:	46bd      	mov	sp, r7
 800050e:	bc80      	pop	{r7}
 8000510:	4770      	bx	lr

08000512 <_isatty>:

int _isatty(int file)
{
 8000512:	b480      	push	{r7}
 8000514:	b083      	sub	sp, #12
 8000516:	af00      	add	r7, sp, #0
 8000518:	6078      	str	r0, [r7, #4]
	return 1;
 800051a:	2301      	movs	r3, #1
}
 800051c:	4618      	mov	r0, r3
 800051e:	370c      	adds	r7, #12
 8000520:	46bd      	mov	sp, r7
 8000522:	bc80      	pop	{r7}
 8000524:	4770      	bx	lr

08000526 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000526:	b480      	push	{r7}
 8000528:	b085      	sub	sp, #20
 800052a:	af00      	add	r7, sp, #0
 800052c:	60f8      	str	r0, [r7, #12]
 800052e:	60b9      	str	r1, [r7, #8]
 8000530:	607a      	str	r2, [r7, #4]
	return 0;
 8000532:	2300      	movs	r3, #0
}
 8000534:	4618      	mov	r0, r3
 8000536:	3714      	adds	r7, #20
 8000538:	46bd      	mov	sp, r7
 800053a:	bc80      	pop	{r7}
 800053c:	4770      	bx	lr
	...

08000540 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000540:	b580      	push	{r7, lr}
 8000542:	b086      	sub	sp, #24
 8000544:	af00      	add	r7, sp, #0
 8000546:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000548:	4a14      	ldr	r2, [pc, #80]	; (800059c <_sbrk+0x5c>)
 800054a:	4b15      	ldr	r3, [pc, #84]	; (80005a0 <_sbrk+0x60>)
 800054c:	1ad3      	subs	r3, r2, r3
 800054e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000550:	697b      	ldr	r3, [r7, #20]
 8000552:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000554:	4b13      	ldr	r3, [pc, #76]	; (80005a4 <_sbrk+0x64>)
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	2b00      	cmp	r3, #0
 800055a:	d102      	bne.n	8000562 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800055c:	4b11      	ldr	r3, [pc, #68]	; (80005a4 <_sbrk+0x64>)
 800055e:	4a12      	ldr	r2, [pc, #72]	; (80005a8 <_sbrk+0x68>)
 8000560:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000562:	4b10      	ldr	r3, [pc, #64]	; (80005a4 <_sbrk+0x64>)
 8000564:	681a      	ldr	r2, [r3, #0]
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	4413      	add	r3, r2
 800056a:	693a      	ldr	r2, [r7, #16]
 800056c:	429a      	cmp	r2, r3
 800056e:	d207      	bcs.n	8000580 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000570:	f000 f846 	bl	8000600 <__errno>
 8000574:	4602      	mov	r2, r0
 8000576:	230c      	movs	r3, #12
 8000578:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 800057a:	f04f 33ff 	mov.w	r3, #4294967295
 800057e:	e009      	b.n	8000594 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000580:	4b08      	ldr	r3, [pc, #32]	; (80005a4 <_sbrk+0x64>)
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000586:	4b07      	ldr	r3, [pc, #28]	; (80005a4 <_sbrk+0x64>)
 8000588:	681a      	ldr	r2, [r3, #0]
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	4413      	add	r3, r2
 800058e:	4a05      	ldr	r2, [pc, #20]	; (80005a4 <_sbrk+0x64>)
 8000590:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000592:	68fb      	ldr	r3, [r7, #12]
}
 8000594:	4618      	mov	r0, r3
 8000596:	3718      	adds	r7, #24
 8000598:	46bd      	mov	sp, r7
 800059a:	bd80      	pop	{r7, pc}
 800059c:	20020000 	.word	0x20020000
 80005a0:	00000400 	.word	0x00000400
 80005a4:	20000080 	.word	0x20000080
 80005a8:	20000090 	.word	0x20000090

080005ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005ac:	480d      	ldr	r0, [pc, #52]	; (80005e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005ae:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005b4:	480c      	ldr	r0, [pc, #48]	; (80005e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80005b6:	490d      	ldr	r1, [pc, #52]	; (80005ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80005b8:	4a0d      	ldr	r2, [pc, #52]	; (80005f0 <LoopForever+0xe>)
  movs r3, #0
 80005ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005bc:	e002      	b.n	80005c4 <LoopCopyDataInit>

080005be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005c2:	3304      	adds	r3, #4

080005c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005c8:	d3f9      	bcc.n	80005be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ca:	4a0a      	ldr	r2, [pc, #40]	; (80005f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005cc:	4c0a      	ldr	r4, [pc, #40]	; (80005f8 <LoopForever+0x16>)
  movs r3, #0
 80005ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005d0:	e001      	b.n	80005d6 <LoopFillZerobss>

080005d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005d4:	3204      	adds	r2, #4

080005d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005d8:	d3fb      	bcc.n	80005d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005da:	f000 f817 	bl	800060c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005de:	f7ff fe75 	bl	80002cc <main>

080005e2 <LoopForever>:

LoopForever:
    b LoopForever
 80005e2:	e7fe      	b.n	80005e2 <LoopForever>
  ldr   r0, =_estack
 80005e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005ec:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005f0:	08001638 	.word	0x08001638
  ldr r2, =_sbss
 80005f4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005f8:	20000090 	.word	0x20000090

080005fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005fc:	e7fe      	b.n	80005fc <ADC_IRQHandler>
	...

08000600 <__errno>:
 8000600:	4b01      	ldr	r3, [pc, #4]	; (8000608 <__errno+0x8>)
 8000602:	6818      	ldr	r0, [r3, #0]
 8000604:	4770      	bx	lr
 8000606:	bf00      	nop
 8000608:	20000000 	.word	0x20000000

0800060c <__libc_init_array>:
 800060c:	b570      	push	{r4, r5, r6, lr}
 800060e:	4e0d      	ldr	r6, [pc, #52]	; (8000644 <__libc_init_array+0x38>)
 8000610:	4c0d      	ldr	r4, [pc, #52]	; (8000648 <__libc_init_array+0x3c>)
 8000612:	1ba4      	subs	r4, r4, r6
 8000614:	10a4      	asrs	r4, r4, #2
 8000616:	2500      	movs	r5, #0
 8000618:	42a5      	cmp	r5, r4
 800061a:	d109      	bne.n	8000630 <__libc_init_array+0x24>
 800061c:	4e0b      	ldr	r6, [pc, #44]	; (800064c <__libc_init_array+0x40>)
 800061e:	4c0c      	ldr	r4, [pc, #48]	; (8000650 <__libc_init_array+0x44>)
 8000620:	f000 ff02 	bl	8001428 <_init>
 8000624:	1ba4      	subs	r4, r4, r6
 8000626:	10a4      	asrs	r4, r4, #2
 8000628:	2500      	movs	r5, #0
 800062a:	42a5      	cmp	r5, r4
 800062c:	d105      	bne.n	800063a <__libc_init_array+0x2e>
 800062e:	bd70      	pop	{r4, r5, r6, pc}
 8000630:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000634:	4798      	blx	r3
 8000636:	3501      	adds	r5, #1
 8000638:	e7ee      	b.n	8000618 <__libc_init_array+0xc>
 800063a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800063e:	4798      	blx	r3
 8000640:	3501      	adds	r5, #1
 8000642:	e7f2      	b.n	800062a <__libc_init_array+0x1e>
 8000644:	08001630 	.word	0x08001630
 8000648:	08001630 	.word	0x08001630
 800064c:	08001630 	.word	0x08001630
 8000650:	08001634 	.word	0x08001634

08000654 <memset>:
 8000654:	4402      	add	r2, r0
 8000656:	4603      	mov	r3, r0
 8000658:	4293      	cmp	r3, r2
 800065a:	d100      	bne.n	800065e <memset+0xa>
 800065c:	4770      	bx	lr
 800065e:	f803 1b01 	strb.w	r1, [r3], #1
 8000662:	e7f9      	b.n	8000658 <memset+0x4>

08000664 <iprintf>:
 8000664:	b40f      	push	{r0, r1, r2, r3}
 8000666:	4b0a      	ldr	r3, [pc, #40]	; (8000690 <iprintf+0x2c>)
 8000668:	b513      	push	{r0, r1, r4, lr}
 800066a:	681c      	ldr	r4, [r3, #0]
 800066c:	b124      	cbz	r4, 8000678 <iprintf+0x14>
 800066e:	69a3      	ldr	r3, [r4, #24]
 8000670:	b913      	cbnz	r3, 8000678 <iprintf+0x14>
 8000672:	4620      	mov	r0, r4
 8000674:	f000 f84e 	bl	8000714 <__sinit>
 8000678:	ab05      	add	r3, sp, #20
 800067a:	9a04      	ldr	r2, [sp, #16]
 800067c:	68a1      	ldr	r1, [r4, #8]
 800067e:	9301      	str	r3, [sp, #4]
 8000680:	4620      	mov	r0, r4
 8000682:	f000 f953 	bl	800092c <_vfiprintf_r>
 8000686:	b002      	add	sp, #8
 8000688:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800068c:	b004      	add	sp, #16
 800068e:	4770      	bx	lr
 8000690:	20000000 	.word	0x20000000

08000694 <std>:
 8000694:	2300      	movs	r3, #0
 8000696:	b510      	push	{r4, lr}
 8000698:	4604      	mov	r4, r0
 800069a:	e9c0 3300 	strd	r3, r3, [r0]
 800069e:	6083      	str	r3, [r0, #8]
 80006a0:	8181      	strh	r1, [r0, #12]
 80006a2:	6643      	str	r3, [r0, #100]	; 0x64
 80006a4:	81c2      	strh	r2, [r0, #14]
 80006a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006aa:	6183      	str	r3, [r0, #24]
 80006ac:	4619      	mov	r1, r3
 80006ae:	2208      	movs	r2, #8
 80006b0:	305c      	adds	r0, #92	; 0x5c
 80006b2:	f7ff ffcf 	bl	8000654 <memset>
 80006b6:	4b05      	ldr	r3, [pc, #20]	; (80006cc <std+0x38>)
 80006b8:	6263      	str	r3, [r4, #36]	; 0x24
 80006ba:	4b05      	ldr	r3, [pc, #20]	; (80006d0 <std+0x3c>)
 80006bc:	62a3      	str	r3, [r4, #40]	; 0x28
 80006be:	4b05      	ldr	r3, [pc, #20]	; (80006d4 <std+0x40>)
 80006c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006c2:	4b05      	ldr	r3, [pc, #20]	; (80006d8 <std+0x44>)
 80006c4:	6224      	str	r4, [r4, #32]
 80006c6:	6323      	str	r3, [r4, #48]	; 0x30
 80006c8:	bd10      	pop	{r4, pc}
 80006ca:	bf00      	nop
 80006cc:	08000e89 	.word	0x08000e89
 80006d0:	08000eab 	.word	0x08000eab
 80006d4:	08000ee3 	.word	0x08000ee3
 80006d8:	08000f07 	.word	0x08000f07

080006dc <_cleanup_r>:
 80006dc:	4901      	ldr	r1, [pc, #4]	; (80006e4 <_cleanup_r+0x8>)
 80006de:	f000 b885 	b.w	80007ec <_fwalk_reent>
 80006e2:	bf00      	nop
 80006e4:	080011e1 	.word	0x080011e1

080006e8 <__sfmoreglue>:
 80006e8:	b570      	push	{r4, r5, r6, lr}
 80006ea:	1e4a      	subs	r2, r1, #1
 80006ec:	2568      	movs	r5, #104	; 0x68
 80006ee:	4355      	muls	r5, r2
 80006f0:	460e      	mov	r6, r1
 80006f2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006f6:	f000 f897 	bl	8000828 <_malloc_r>
 80006fa:	4604      	mov	r4, r0
 80006fc:	b140      	cbz	r0, 8000710 <__sfmoreglue+0x28>
 80006fe:	2100      	movs	r1, #0
 8000700:	e9c0 1600 	strd	r1, r6, [r0]
 8000704:	300c      	adds	r0, #12
 8000706:	60a0      	str	r0, [r4, #8]
 8000708:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800070c:	f7ff ffa2 	bl	8000654 <memset>
 8000710:	4620      	mov	r0, r4
 8000712:	bd70      	pop	{r4, r5, r6, pc}

08000714 <__sinit>:
 8000714:	6983      	ldr	r3, [r0, #24]
 8000716:	b510      	push	{r4, lr}
 8000718:	4604      	mov	r4, r0
 800071a:	bb33      	cbnz	r3, 800076a <__sinit+0x56>
 800071c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000720:	6503      	str	r3, [r0, #80]	; 0x50
 8000722:	4b12      	ldr	r3, [pc, #72]	; (800076c <__sinit+0x58>)
 8000724:	4a12      	ldr	r2, [pc, #72]	; (8000770 <__sinit+0x5c>)
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	6282      	str	r2, [r0, #40]	; 0x28
 800072a:	4298      	cmp	r0, r3
 800072c:	bf04      	itt	eq
 800072e:	2301      	moveq	r3, #1
 8000730:	6183      	streq	r3, [r0, #24]
 8000732:	f000 f81f 	bl	8000774 <__sfp>
 8000736:	6060      	str	r0, [r4, #4]
 8000738:	4620      	mov	r0, r4
 800073a:	f000 f81b 	bl	8000774 <__sfp>
 800073e:	60a0      	str	r0, [r4, #8]
 8000740:	4620      	mov	r0, r4
 8000742:	f000 f817 	bl	8000774 <__sfp>
 8000746:	2200      	movs	r2, #0
 8000748:	60e0      	str	r0, [r4, #12]
 800074a:	2104      	movs	r1, #4
 800074c:	6860      	ldr	r0, [r4, #4]
 800074e:	f7ff ffa1 	bl	8000694 <std>
 8000752:	2201      	movs	r2, #1
 8000754:	2109      	movs	r1, #9
 8000756:	68a0      	ldr	r0, [r4, #8]
 8000758:	f7ff ff9c 	bl	8000694 <std>
 800075c:	2202      	movs	r2, #2
 800075e:	2112      	movs	r1, #18
 8000760:	68e0      	ldr	r0, [r4, #12]
 8000762:	f7ff ff97 	bl	8000694 <std>
 8000766:	2301      	movs	r3, #1
 8000768:	61a3      	str	r3, [r4, #24]
 800076a:	bd10      	pop	{r4, pc}
 800076c:	08001598 	.word	0x08001598
 8000770:	080006dd 	.word	0x080006dd

08000774 <__sfp>:
 8000774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000776:	4b1b      	ldr	r3, [pc, #108]	; (80007e4 <__sfp+0x70>)
 8000778:	681e      	ldr	r6, [r3, #0]
 800077a:	69b3      	ldr	r3, [r6, #24]
 800077c:	4607      	mov	r7, r0
 800077e:	b913      	cbnz	r3, 8000786 <__sfp+0x12>
 8000780:	4630      	mov	r0, r6
 8000782:	f7ff ffc7 	bl	8000714 <__sinit>
 8000786:	3648      	adds	r6, #72	; 0x48
 8000788:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800078c:	3b01      	subs	r3, #1
 800078e:	d503      	bpl.n	8000798 <__sfp+0x24>
 8000790:	6833      	ldr	r3, [r6, #0]
 8000792:	b133      	cbz	r3, 80007a2 <__sfp+0x2e>
 8000794:	6836      	ldr	r6, [r6, #0]
 8000796:	e7f7      	b.n	8000788 <__sfp+0x14>
 8000798:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800079c:	b16d      	cbz	r5, 80007ba <__sfp+0x46>
 800079e:	3468      	adds	r4, #104	; 0x68
 80007a0:	e7f4      	b.n	800078c <__sfp+0x18>
 80007a2:	2104      	movs	r1, #4
 80007a4:	4638      	mov	r0, r7
 80007a6:	f7ff ff9f 	bl	80006e8 <__sfmoreglue>
 80007aa:	6030      	str	r0, [r6, #0]
 80007ac:	2800      	cmp	r0, #0
 80007ae:	d1f1      	bne.n	8000794 <__sfp+0x20>
 80007b0:	230c      	movs	r3, #12
 80007b2:	603b      	str	r3, [r7, #0]
 80007b4:	4604      	mov	r4, r0
 80007b6:	4620      	mov	r0, r4
 80007b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007ba:	4b0b      	ldr	r3, [pc, #44]	; (80007e8 <__sfp+0x74>)
 80007bc:	6665      	str	r5, [r4, #100]	; 0x64
 80007be:	e9c4 5500 	strd	r5, r5, [r4]
 80007c2:	60a5      	str	r5, [r4, #8]
 80007c4:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80007c8:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80007cc:	2208      	movs	r2, #8
 80007ce:	4629      	mov	r1, r5
 80007d0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007d4:	f7ff ff3e 	bl	8000654 <memset>
 80007d8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007dc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007e0:	e7e9      	b.n	80007b6 <__sfp+0x42>
 80007e2:	bf00      	nop
 80007e4:	08001598 	.word	0x08001598
 80007e8:	ffff0001 	.word	0xffff0001

080007ec <_fwalk_reent>:
 80007ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007f0:	4680      	mov	r8, r0
 80007f2:	4689      	mov	r9, r1
 80007f4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007f8:	2600      	movs	r6, #0
 80007fa:	b914      	cbnz	r4, 8000802 <_fwalk_reent+0x16>
 80007fc:	4630      	mov	r0, r6
 80007fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000802:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000806:	3f01      	subs	r7, #1
 8000808:	d501      	bpl.n	800080e <_fwalk_reent+0x22>
 800080a:	6824      	ldr	r4, [r4, #0]
 800080c:	e7f5      	b.n	80007fa <_fwalk_reent+0xe>
 800080e:	89ab      	ldrh	r3, [r5, #12]
 8000810:	2b01      	cmp	r3, #1
 8000812:	d907      	bls.n	8000824 <_fwalk_reent+0x38>
 8000814:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000818:	3301      	adds	r3, #1
 800081a:	d003      	beq.n	8000824 <_fwalk_reent+0x38>
 800081c:	4629      	mov	r1, r5
 800081e:	4640      	mov	r0, r8
 8000820:	47c8      	blx	r9
 8000822:	4306      	orrs	r6, r0
 8000824:	3568      	adds	r5, #104	; 0x68
 8000826:	e7ee      	b.n	8000806 <_fwalk_reent+0x1a>

08000828 <_malloc_r>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	1ccd      	adds	r5, r1, #3
 800082c:	f025 0503 	bic.w	r5, r5, #3
 8000830:	3508      	adds	r5, #8
 8000832:	2d0c      	cmp	r5, #12
 8000834:	bf38      	it	cc
 8000836:	250c      	movcc	r5, #12
 8000838:	2d00      	cmp	r5, #0
 800083a:	4606      	mov	r6, r0
 800083c:	db01      	blt.n	8000842 <_malloc_r+0x1a>
 800083e:	42a9      	cmp	r1, r5
 8000840:	d903      	bls.n	800084a <_malloc_r+0x22>
 8000842:	230c      	movs	r3, #12
 8000844:	6033      	str	r3, [r6, #0]
 8000846:	2000      	movs	r0, #0
 8000848:	bd70      	pop	{r4, r5, r6, pc}
 800084a:	f000 fd69 	bl	8001320 <__malloc_lock>
 800084e:	4a21      	ldr	r2, [pc, #132]	; (80008d4 <_malloc_r+0xac>)
 8000850:	6814      	ldr	r4, [r2, #0]
 8000852:	4621      	mov	r1, r4
 8000854:	b991      	cbnz	r1, 800087c <_malloc_r+0x54>
 8000856:	4c20      	ldr	r4, [pc, #128]	; (80008d8 <_malloc_r+0xb0>)
 8000858:	6823      	ldr	r3, [r4, #0]
 800085a:	b91b      	cbnz	r3, 8000864 <_malloc_r+0x3c>
 800085c:	4630      	mov	r0, r6
 800085e:	f000 fb03 	bl	8000e68 <_sbrk_r>
 8000862:	6020      	str	r0, [r4, #0]
 8000864:	4629      	mov	r1, r5
 8000866:	4630      	mov	r0, r6
 8000868:	f000 fafe 	bl	8000e68 <_sbrk_r>
 800086c:	1c43      	adds	r3, r0, #1
 800086e:	d124      	bne.n	80008ba <_malloc_r+0x92>
 8000870:	230c      	movs	r3, #12
 8000872:	6033      	str	r3, [r6, #0]
 8000874:	4630      	mov	r0, r6
 8000876:	f000 fd54 	bl	8001322 <__malloc_unlock>
 800087a:	e7e4      	b.n	8000846 <_malloc_r+0x1e>
 800087c:	680b      	ldr	r3, [r1, #0]
 800087e:	1b5b      	subs	r3, r3, r5
 8000880:	d418      	bmi.n	80008b4 <_malloc_r+0x8c>
 8000882:	2b0b      	cmp	r3, #11
 8000884:	d90f      	bls.n	80008a6 <_malloc_r+0x7e>
 8000886:	600b      	str	r3, [r1, #0]
 8000888:	50cd      	str	r5, [r1, r3]
 800088a:	18cc      	adds	r4, r1, r3
 800088c:	4630      	mov	r0, r6
 800088e:	f000 fd48 	bl	8001322 <__malloc_unlock>
 8000892:	f104 000b 	add.w	r0, r4, #11
 8000896:	1d23      	adds	r3, r4, #4
 8000898:	f020 0007 	bic.w	r0, r0, #7
 800089c:	1ac3      	subs	r3, r0, r3
 800089e:	d0d3      	beq.n	8000848 <_malloc_r+0x20>
 80008a0:	425a      	negs	r2, r3
 80008a2:	50e2      	str	r2, [r4, r3]
 80008a4:	e7d0      	b.n	8000848 <_malloc_r+0x20>
 80008a6:	428c      	cmp	r4, r1
 80008a8:	684b      	ldr	r3, [r1, #4]
 80008aa:	bf16      	itet	ne
 80008ac:	6063      	strne	r3, [r4, #4]
 80008ae:	6013      	streq	r3, [r2, #0]
 80008b0:	460c      	movne	r4, r1
 80008b2:	e7eb      	b.n	800088c <_malloc_r+0x64>
 80008b4:	460c      	mov	r4, r1
 80008b6:	6849      	ldr	r1, [r1, #4]
 80008b8:	e7cc      	b.n	8000854 <_malloc_r+0x2c>
 80008ba:	1cc4      	adds	r4, r0, #3
 80008bc:	f024 0403 	bic.w	r4, r4, #3
 80008c0:	42a0      	cmp	r0, r4
 80008c2:	d005      	beq.n	80008d0 <_malloc_r+0xa8>
 80008c4:	1a21      	subs	r1, r4, r0
 80008c6:	4630      	mov	r0, r6
 80008c8:	f000 face 	bl	8000e68 <_sbrk_r>
 80008cc:	3001      	adds	r0, #1
 80008ce:	d0cf      	beq.n	8000870 <_malloc_r+0x48>
 80008d0:	6025      	str	r5, [r4, #0]
 80008d2:	e7db      	b.n	800088c <_malloc_r+0x64>
 80008d4:	20000084 	.word	0x20000084
 80008d8:	20000088 	.word	0x20000088

080008dc <__sfputc_r>:
 80008dc:	6893      	ldr	r3, [r2, #8]
 80008de:	3b01      	subs	r3, #1
 80008e0:	2b00      	cmp	r3, #0
 80008e2:	b410      	push	{r4}
 80008e4:	6093      	str	r3, [r2, #8]
 80008e6:	da07      	bge.n	80008f8 <__sfputc_r+0x1c>
 80008e8:	6994      	ldr	r4, [r2, #24]
 80008ea:	42a3      	cmp	r3, r4
 80008ec:	db01      	blt.n	80008f2 <__sfputc_r+0x16>
 80008ee:	290a      	cmp	r1, #10
 80008f0:	d102      	bne.n	80008f8 <__sfputc_r+0x1c>
 80008f2:	bc10      	pop	{r4}
 80008f4:	f000 bb0c 	b.w	8000f10 <__swbuf_r>
 80008f8:	6813      	ldr	r3, [r2, #0]
 80008fa:	1c58      	adds	r0, r3, #1
 80008fc:	6010      	str	r0, [r2, #0]
 80008fe:	7019      	strb	r1, [r3, #0]
 8000900:	4608      	mov	r0, r1
 8000902:	bc10      	pop	{r4}
 8000904:	4770      	bx	lr

08000906 <__sfputs_r>:
 8000906:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000908:	4606      	mov	r6, r0
 800090a:	460f      	mov	r7, r1
 800090c:	4614      	mov	r4, r2
 800090e:	18d5      	adds	r5, r2, r3
 8000910:	42ac      	cmp	r4, r5
 8000912:	d101      	bne.n	8000918 <__sfputs_r+0x12>
 8000914:	2000      	movs	r0, #0
 8000916:	e007      	b.n	8000928 <__sfputs_r+0x22>
 8000918:	463a      	mov	r2, r7
 800091a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800091e:	4630      	mov	r0, r6
 8000920:	f7ff ffdc 	bl	80008dc <__sfputc_r>
 8000924:	1c43      	adds	r3, r0, #1
 8000926:	d1f3      	bne.n	8000910 <__sfputs_r+0xa>
 8000928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800092c <_vfiprintf_r>:
 800092c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000930:	460c      	mov	r4, r1
 8000932:	b09d      	sub	sp, #116	; 0x74
 8000934:	4617      	mov	r7, r2
 8000936:	461d      	mov	r5, r3
 8000938:	4606      	mov	r6, r0
 800093a:	b118      	cbz	r0, 8000944 <_vfiprintf_r+0x18>
 800093c:	6983      	ldr	r3, [r0, #24]
 800093e:	b90b      	cbnz	r3, 8000944 <_vfiprintf_r+0x18>
 8000940:	f7ff fee8 	bl	8000714 <__sinit>
 8000944:	4b7c      	ldr	r3, [pc, #496]	; (8000b38 <_vfiprintf_r+0x20c>)
 8000946:	429c      	cmp	r4, r3
 8000948:	d158      	bne.n	80009fc <_vfiprintf_r+0xd0>
 800094a:	6874      	ldr	r4, [r6, #4]
 800094c:	89a3      	ldrh	r3, [r4, #12]
 800094e:	0718      	lsls	r0, r3, #28
 8000950:	d55e      	bpl.n	8000a10 <_vfiprintf_r+0xe4>
 8000952:	6923      	ldr	r3, [r4, #16]
 8000954:	2b00      	cmp	r3, #0
 8000956:	d05b      	beq.n	8000a10 <_vfiprintf_r+0xe4>
 8000958:	2300      	movs	r3, #0
 800095a:	9309      	str	r3, [sp, #36]	; 0x24
 800095c:	2320      	movs	r3, #32
 800095e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000962:	2330      	movs	r3, #48	; 0x30
 8000964:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000968:	9503      	str	r5, [sp, #12]
 800096a:	f04f 0b01 	mov.w	fp, #1
 800096e:	46b8      	mov	r8, r7
 8000970:	4645      	mov	r5, r8
 8000972:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000976:	b10b      	cbz	r3, 800097c <_vfiprintf_r+0x50>
 8000978:	2b25      	cmp	r3, #37	; 0x25
 800097a:	d154      	bne.n	8000a26 <_vfiprintf_r+0xfa>
 800097c:	ebb8 0a07 	subs.w	sl, r8, r7
 8000980:	d00b      	beq.n	800099a <_vfiprintf_r+0x6e>
 8000982:	4653      	mov	r3, sl
 8000984:	463a      	mov	r2, r7
 8000986:	4621      	mov	r1, r4
 8000988:	4630      	mov	r0, r6
 800098a:	f7ff ffbc 	bl	8000906 <__sfputs_r>
 800098e:	3001      	adds	r0, #1
 8000990:	f000 80c2 	beq.w	8000b18 <_vfiprintf_r+0x1ec>
 8000994:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000996:	4453      	add	r3, sl
 8000998:	9309      	str	r3, [sp, #36]	; 0x24
 800099a:	f898 3000 	ldrb.w	r3, [r8]
 800099e:	2b00      	cmp	r3, #0
 80009a0:	f000 80ba 	beq.w	8000b18 <_vfiprintf_r+0x1ec>
 80009a4:	2300      	movs	r3, #0
 80009a6:	f04f 32ff 	mov.w	r2, #4294967295
 80009aa:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009ae:	9304      	str	r3, [sp, #16]
 80009b0:	9307      	str	r3, [sp, #28]
 80009b2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80009b6:	931a      	str	r3, [sp, #104]	; 0x68
 80009b8:	46a8      	mov	r8, r5
 80009ba:	2205      	movs	r2, #5
 80009bc:	f818 1b01 	ldrb.w	r1, [r8], #1
 80009c0:	485e      	ldr	r0, [pc, #376]	; (8000b3c <_vfiprintf_r+0x210>)
 80009c2:	f7ff fc25 	bl	8000210 <memchr>
 80009c6:	9b04      	ldr	r3, [sp, #16]
 80009c8:	bb78      	cbnz	r0, 8000a2a <_vfiprintf_r+0xfe>
 80009ca:	06d9      	lsls	r1, r3, #27
 80009cc:	bf44      	itt	mi
 80009ce:	2220      	movmi	r2, #32
 80009d0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80009d4:	071a      	lsls	r2, r3, #28
 80009d6:	bf44      	itt	mi
 80009d8:	222b      	movmi	r2, #43	; 0x2b
 80009da:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80009de:	782a      	ldrb	r2, [r5, #0]
 80009e0:	2a2a      	cmp	r2, #42	; 0x2a
 80009e2:	d02a      	beq.n	8000a3a <_vfiprintf_r+0x10e>
 80009e4:	9a07      	ldr	r2, [sp, #28]
 80009e6:	46a8      	mov	r8, r5
 80009e8:	2000      	movs	r0, #0
 80009ea:	250a      	movs	r5, #10
 80009ec:	4641      	mov	r1, r8
 80009ee:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009f2:	3b30      	subs	r3, #48	; 0x30
 80009f4:	2b09      	cmp	r3, #9
 80009f6:	d969      	bls.n	8000acc <_vfiprintf_r+0x1a0>
 80009f8:	b360      	cbz	r0, 8000a54 <_vfiprintf_r+0x128>
 80009fa:	e024      	b.n	8000a46 <_vfiprintf_r+0x11a>
 80009fc:	4b50      	ldr	r3, [pc, #320]	; (8000b40 <_vfiprintf_r+0x214>)
 80009fe:	429c      	cmp	r4, r3
 8000a00:	d101      	bne.n	8000a06 <_vfiprintf_r+0xda>
 8000a02:	68b4      	ldr	r4, [r6, #8]
 8000a04:	e7a2      	b.n	800094c <_vfiprintf_r+0x20>
 8000a06:	4b4f      	ldr	r3, [pc, #316]	; (8000b44 <_vfiprintf_r+0x218>)
 8000a08:	429c      	cmp	r4, r3
 8000a0a:	bf08      	it	eq
 8000a0c:	68f4      	ldreq	r4, [r6, #12]
 8000a0e:	e79d      	b.n	800094c <_vfiprintf_r+0x20>
 8000a10:	4621      	mov	r1, r4
 8000a12:	4630      	mov	r0, r6
 8000a14:	f000 fae0 	bl	8000fd8 <__swsetup_r>
 8000a18:	2800      	cmp	r0, #0
 8000a1a:	d09d      	beq.n	8000958 <_vfiprintf_r+0x2c>
 8000a1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000a20:	b01d      	add	sp, #116	; 0x74
 8000a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a26:	46a8      	mov	r8, r5
 8000a28:	e7a2      	b.n	8000970 <_vfiprintf_r+0x44>
 8000a2a:	4a44      	ldr	r2, [pc, #272]	; (8000b3c <_vfiprintf_r+0x210>)
 8000a2c:	1a80      	subs	r0, r0, r2
 8000a2e:	fa0b f000 	lsl.w	r0, fp, r0
 8000a32:	4318      	orrs	r0, r3
 8000a34:	9004      	str	r0, [sp, #16]
 8000a36:	4645      	mov	r5, r8
 8000a38:	e7be      	b.n	80009b8 <_vfiprintf_r+0x8c>
 8000a3a:	9a03      	ldr	r2, [sp, #12]
 8000a3c:	1d11      	adds	r1, r2, #4
 8000a3e:	6812      	ldr	r2, [r2, #0]
 8000a40:	9103      	str	r1, [sp, #12]
 8000a42:	2a00      	cmp	r2, #0
 8000a44:	db01      	blt.n	8000a4a <_vfiprintf_r+0x11e>
 8000a46:	9207      	str	r2, [sp, #28]
 8000a48:	e004      	b.n	8000a54 <_vfiprintf_r+0x128>
 8000a4a:	4252      	negs	r2, r2
 8000a4c:	f043 0302 	orr.w	r3, r3, #2
 8000a50:	9207      	str	r2, [sp, #28]
 8000a52:	9304      	str	r3, [sp, #16]
 8000a54:	f898 3000 	ldrb.w	r3, [r8]
 8000a58:	2b2e      	cmp	r3, #46	; 0x2e
 8000a5a:	d10e      	bne.n	8000a7a <_vfiprintf_r+0x14e>
 8000a5c:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000a60:	2b2a      	cmp	r3, #42	; 0x2a
 8000a62:	d138      	bne.n	8000ad6 <_vfiprintf_r+0x1aa>
 8000a64:	9b03      	ldr	r3, [sp, #12]
 8000a66:	1d1a      	adds	r2, r3, #4
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	9203      	str	r2, [sp, #12]
 8000a6c:	2b00      	cmp	r3, #0
 8000a6e:	bfb8      	it	lt
 8000a70:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a74:	f108 0802 	add.w	r8, r8, #2
 8000a78:	9305      	str	r3, [sp, #20]
 8000a7a:	4d33      	ldr	r5, [pc, #204]	; (8000b48 <_vfiprintf_r+0x21c>)
 8000a7c:	f898 1000 	ldrb.w	r1, [r8]
 8000a80:	2203      	movs	r2, #3
 8000a82:	4628      	mov	r0, r5
 8000a84:	f7ff fbc4 	bl	8000210 <memchr>
 8000a88:	b140      	cbz	r0, 8000a9c <_vfiprintf_r+0x170>
 8000a8a:	2340      	movs	r3, #64	; 0x40
 8000a8c:	1b40      	subs	r0, r0, r5
 8000a8e:	fa03 f000 	lsl.w	r0, r3, r0
 8000a92:	9b04      	ldr	r3, [sp, #16]
 8000a94:	4303      	orrs	r3, r0
 8000a96:	f108 0801 	add.w	r8, r8, #1
 8000a9a:	9304      	str	r3, [sp, #16]
 8000a9c:	f898 1000 	ldrb.w	r1, [r8]
 8000aa0:	482a      	ldr	r0, [pc, #168]	; (8000b4c <_vfiprintf_r+0x220>)
 8000aa2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000aa6:	2206      	movs	r2, #6
 8000aa8:	f108 0701 	add.w	r7, r8, #1
 8000aac:	f7ff fbb0 	bl	8000210 <memchr>
 8000ab0:	2800      	cmp	r0, #0
 8000ab2:	d037      	beq.n	8000b24 <_vfiprintf_r+0x1f8>
 8000ab4:	4b26      	ldr	r3, [pc, #152]	; (8000b50 <_vfiprintf_r+0x224>)
 8000ab6:	bb1b      	cbnz	r3, 8000b00 <_vfiprintf_r+0x1d4>
 8000ab8:	9b03      	ldr	r3, [sp, #12]
 8000aba:	3307      	adds	r3, #7
 8000abc:	f023 0307 	bic.w	r3, r3, #7
 8000ac0:	3308      	adds	r3, #8
 8000ac2:	9303      	str	r3, [sp, #12]
 8000ac4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ac6:	444b      	add	r3, r9
 8000ac8:	9309      	str	r3, [sp, #36]	; 0x24
 8000aca:	e750      	b.n	800096e <_vfiprintf_r+0x42>
 8000acc:	fb05 3202 	mla	r2, r5, r2, r3
 8000ad0:	2001      	movs	r0, #1
 8000ad2:	4688      	mov	r8, r1
 8000ad4:	e78a      	b.n	80009ec <_vfiprintf_r+0xc0>
 8000ad6:	2300      	movs	r3, #0
 8000ad8:	f108 0801 	add.w	r8, r8, #1
 8000adc:	9305      	str	r3, [sp, #20]
 8000ade:	4619      	mov	r1, r3
 8000ae0:	250a      	movs	r5, #10
 8000ae2:	4640      	mov	r0, r8
 8000ae4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ae8:	3a30      	subs	r2, #48	; 0x30
 8000aea:	2a09      	cmp	r2, #9
 8000aec:	d903      	bls.n	8000af6 <_vfiprintf_r+0x1ca>
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	d0c3      	beq.n	8000a7a <_vfiprintf_r+0x14e>
 8000af2:	9105      	str	r1, [sp, #20]
 8000af4:	e7c1      	b.n	8000a7a <_vfiprintf_r+0x14e>
 8000af6:	fb05 2101 	mla	r1, r5, r1, r2
 8000afa:	2301      	movs	r3, #1
 8000afc:	4680      	mov	r8, r0
 8000afe:	e7f0      	b.n	8000ae2 <_vfiprintf_r+0x1b6>
 8000b00:	ab03      	add	r3, sp, #12
 8000b02:	9300      	str	r3, [sp, #0]
 8000b04:	4622      	mov	r2, r4
 8000b06:	4b13      	ldr	r3, [pc, #76]	; (8000b54 <_vfiprintf_r+0x228>)
 8000b08:	a904      	add	r1, sp, #16
 8000b0a:	4630      	mov	r0, r6
 8000b0c:	f3af 8000 	nop.w
 8000b10:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000b14:	4681      	mov	r9, r0
 8000b16:	d1d5      	bne.n	8000ac4 <_vfiprintf_r+0x198>
 8000b18:	89a3      	ldrh	r3, [r4, #12]
 8000b1a:	065b      	lsls	r3, r3, #25
 8000b1c:	f53f af7e 	bmi.w	8000a1c <_vfiprintf_r+0xf0>
 8000b20:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b22:	e77d      	b.n	8000a20 <_vfiprintf_r+0xf4>
 8000b24:	ab03      	add	r3, sp, #12
 8000b26:	9300      	str	r3, [sp, #0]
 8000b28:	4622      	mov	r2, r4
 8000b2a:	4b0a      	ldr	r3, [pc, #40]	; (8000b54 <_vfiprintf_r+0x228>)
 8000b2c:	a904      	add	r1, sp, #16
 8000b2e:	4630      	mov	r0, r6
 8000b30:	f000 f888 	bl	8000c44 <_printf_i>
 8000b34:	e7ec      	b.n	8000b10 <_vfiprintf_r+0x1e4>
 8000b36:	bf00      	nop
 8000b38:	080015bc 	.word	0x080015bc
 8000b3c:	080015fc 	.word	0x080015fc
 8000b40:	080015dc 	.word	0x080015dc
 8000b44:	0800159c 	.word	0x0800159c
 8000b48:	08001602 	.word	0x08001602
 8000b4c:	08001606 	.word	0x08001606
 8000b50:	00000000 	.word	0x00000000
 8000b54:	08000907 	.word	0x08000907

08000b58 <_printf_common>:
 8000b58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b5c:	4691      	mov	r9, r2
 8000b5e:	461f      	mov	r7, r3
 8000b60:	688a      	ldr	r2, [r1, #8]
 8000b62:	690b      	ldr	r3, [r1, #16]
 8000b64:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b68:	4293      	cmp	r3, r2
 8000b6a:	bfb8      	it	lt
 8000b6c:	4613      	movlt	r3, r2
 8000b6e:	f8c9 3000 	str.w	r3, [r9]
 8000b72:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b76:	4606      	mov	r6, r0
 8000b78:	460c      	mov	r4, r1
 8000b7a:	b112      	cbz	r2, 8000b82 <_printf_common+0x2a>
 8000b7c:	3301      	adds	r3, #1
 8000b7e:	f8c9 3000 	str.w	r3, [r9]
 8000b82:	6823      	ldr	r3, [r4, #0]
 8000b84:	0699      	lsls	r1, r3, #26
 8000b86:	bf42      	ittt	mi
 8000b88:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000b8c:	3302      	addmi	r3, #2
 8000b8e:	f8c9 3000 	strmi.w	r3, [r9]
 8000b92:	6825      	ldr	r5, [r4, #0]
 8000b94:	f015 0506 	ands.w	r5, r5, #6
 8000b98:	d107      	bne.n	8000baa <_printf_common+0x52>
 8000b9a:	f104 0a19 	add.w	sl, r4, #25
 8000b9e:	68e3      	ldr	r3, [r4, #12]
 8000ba0:	f8d9 2000 	ldr.w	r2, [r9]
 8000ba4:	1a9b      	subs	r3, r3, r2
 8000ba6:	42ab      	cmp	r3, r5
 8000ba8:	dc28      	bgt.n	8000bfc <_printf_common+0xa4>
 8000baa:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000bae:	6822      	ldr	r2, [r4, #0]
 8000bb0:	3300      	adds	r3, #0
 8000bb2:	bf18      	it	ne
 8000bb4:	2301      	movne	r3, #1
 8000bb6:	0692      	lsls	r2, r2, #26
 8000bb8:	d42d      	bmi.n	8000c16 <_printf_common+0xbe>
 8000bba:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bbe:	4639      	mov	r1, r7
 8000bc0:	4630      	mov	r0, r6
 8000bc2:	47c0      	blx	r8
 8000bc4:	3001      	adds	r0, #1
 8000bc6:	d020      	beq.n	8000c0a <_printf_common+0xb2>
 8000bc8:	6823      	ldr	r3, [r4, #0]
 8000bca:	68e5      	ldr	r5, [r4, #12]
 8000bcc:	f8d9 2000 	ldr.w	r2, [r9]
 8000bd0:	f003 0306 	and.w	r3, r3, #6
 8000bd4:	2b04      	cmp	r3, #4
 8000bd6:	bf08      	it	eq
 8000bd8:	1aad      	subeq	r5, r5, r2
 8000bda:	68a3      	ldr	r3, [r4, #8]
 8000bdc:	6922      	ldr	r2, [r4, #16]
 8000bde:	bf0c      	ite	eq
 8000be0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000be4:	2500      	movne	r5, #0
 8000be6:	4293      	cmp	r3, r2
 8000be8:	bfc4      	itt	gt
 8000bea:	1a9b      	subgt	r3, r3, r2
 8000bec:	18ed      	addgt	r5, r5, r3
 8000bee:	f04f 0900 	mov.w	r9, #0
 8000bf2:	341a      	adds	r4, #26
 8000bf4:	454d      	cmp	r5, r9
 8000bf6:	d11a      	bne.n	8000c2e <_printf_common+0xd6>
 8000bf8:	2000      	movs	r0, #0
 8000bfa:	e008      	b.n	8000c0e <_printf_common+0xb6>
 8000bfc:	2301      	movs	r3, #1
 8000bfe:	4652      	mov	r2, sl
 8000c00:	4639      	mov	r1, r7
 8000c02:	4630      	mov	r0, r6
 8000c04:	47c0      	blx	r8
 8000c06:	3001      	adds	r0, #1
 8000c08:	d103      	bne.n	8000c12 <_printf_common+0xba>
 8000c0a:	f04f 30ff 	mov.w	r0, #4294967295
 8000c0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c12:	3501      	adds	r5, #1
 8000c14:	e7c3      	b.n	8000b9e <_printf_common+0x46>
 8000c16:	18e1      	adds	r1, r4, r3
 8000c18:	1c5a      	adds	r2, r3, #1
 8000c1a:	2030      	movs	r0, #48	; 0x30
 8000c1c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c20:	4422      	add	r2, r4
 8000c22:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c26:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c2a:	3302      	adds	r3, #2
 8000c2c:	e7c5      	b.n	8000bba <_printf_common+0x62>
 8000c2e:	2301      	movs	r3, #1
 8000c30:	4622      	mov	r2, r4
 8000c32:	4639      	mov	r1, r7
 8000c34:	4630      	mov	r0, r6
 8000c36:	47c0      	blx	r8
 8000c38:	3001      	adds	r0, #1
 8000c3a:	d0e6      	beq.n	8000c0a <_printf_common+0xb2>
 8000c3c:	f109 0901 	add.w	r9, r9, #1
 8000c40:	e7d8      	b.n	8000bf4 <_printf_common+0x9c>
	...

08000c44 <_printf_i>:
 8000c44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c48:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000c4c:	460c      	mov	r4, r1
 8000c4e:	7e09      	ldrb	r1, [r1, #24]
 8000c50:	b085      	sub	sp, #20
 8000c52:	296e      	cmp	r1, #110	; 0x6e
 8000c54:	4617      	mov	r7, r2
 8000c56:	4606      	mov	r6, r0
 8000c58:	4698      	mov	r8, r3
 8000c5a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000c5c:	f000 80b3 	beq.w	8000dc6 <_printf_i+0x182>
 8000c60:	d822      	bhi.n	8000ca8 <_printf_i+0x64>
 8000c62:	2963      	cmp	r1, #99	; 0x63
 8000c64:	d036      	beq.n	8000cd4 <_printf_i+0x90>
 8000c66:	d80a      	bhi.n	8000c7e <_printf_i+0x3a>
 8000c68:	2900      	cmp	r1, #0
 8000c6a:	f000 80b9 	beq.w	8000de0 <_printf_i+0x19c>
 8000c6e:	2958      	cmp	r1, #88	; 0x58
 8000c70:	f000 8083 	beq.w	8000d7a <_printf_i+0x136>
 8000c74:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c78:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000c7c:	e032      	b.n	8000ce4 <_printf_i+0xa0>
 8000c7e:	2964      	cmp	r1, #100	; 0x64
 8000c80:	d001      	beq.n	8000c86 <_printf_i+0x42>
 8000c82:	2969      	cmp	r1, #105	; 0x69
 8000c84:	d1f6      	bne.n	8000c74 <_printf_i+0x30>
 8000c86:	6820      	ldr	r0, [r4, #0]
 8000c88:	6813      	ldr	r3, [r2, #0]
 8000c8a:	0605      	lsls	r5, r0, #24
 8000c8c:	f103 0104 	add.w	r1, r3, #4
 8000c90:	d52a      	bpl.n	8000ce8 <_printf_i+0xa4>
 8000c92:	681b      	ldr	r3, [r3, #0]
 8000c94:	6011      	str	r1, [r2, #0]
 8000c96:	2b00      	cmp	r3, #0
 8000c98:	da03      	bge.n	8000ca2 <_printf_i+0x5e>
 8000c9a:	222d      	movs	r2, #45	; 0x2d
 8000c9c:	425b      	negs	r3, r3
 8000c9e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000ca2:	486f      	ldr	r0, [pc, #444]	; (8000e60 <_printf_i+0x21c>)
 8000ca4:	220a      	movs	r2, #10
 8000ca6:	e039      	b.n	8000d1c <_printf_i+0xd8>
 8000ca8:	2973      	cmp	r1, #115	; 0x73
 8000caa:	f000 809d 	beq.w	8000de8 <_printf_i+0x1a4>
 8000cae:	d808      	bhi.n	8000cc2 <_printf_i+0x7e>
 8000cb0:	296f      	cmp	r1, #111	; 0x6f
 8000cb2:	d020      	beq.n	8000cf6 <_printf_i+0xb2>
 8000cb4:	2970      	cmp	r1, #112	; 0x70
 8000cb6:	d1dd      	bne.n	8000c74 <_printf_i+0x30>
 8000cb8:	6823      	ldr	r3, [r4, #0]
 8000cba:	f043 0320 	orr.w	r3, r3, #32
 8000cbe:	6023      	str	r3, [r4, #0]
 8000cc0:	e003      	b.n	8000cca <_printf_i+0x86>
 8000cc2:	2975      	cmp	r1, #117	; 0x75
 8000cc4:	d017      	beq.n	8000cf6 <_printf_i+0xb2>
 8000cc6:	2978      	cmp	r1, #120	; 0x78
 8000cc8:	d1d4      	bne.n	8000c74 <_printf_i+0x30>
 8000cca:	2378      	movs	r3, #120	; 0x78
 8000ccc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000cd0:	4864      	ldr	r0, [pc, #400]	; (8000e64 <_printf_i+0x220>)
 8000cd2:	e055      	b.n	8000d80 <_printf_i+0x13c>
 8000cd4:	6813      	ldr	r3, [r2, #0]
 8000cd6:	1d19      	adds	r1, r3, #4
 8000cd8:	681b      	ldr	r3, [r3, #0]
 8000cda:	6011      	str	r1, [r2, #0]
 8000cdc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ce0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ce4:	2301      	movs	r3, #1
 8000ce6:	e08c      	b.n	8000e02 <_printf_i+0x1be>
 8000ce8:	681b      	ldr	r3, [r3, #0]
 8000cea:	6011      	str	r1, [r2, #0]
 8000cec:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000cf0:	bf18      	it	ne
 8000cf2:	b21b      	sxthne	r3, r3
 8000cf4:	e7cf      	b.n	8000c96 <_printf_i+0x52>
 8000cf6:	6813      	ldr	r3, [r2, #0]
 8000cf8:	6825      	ldr	r5, [r4, #0]
 8000cfa:	1d18      	adds	r0, r3, #4
 8000cfc:	6010      	str	r0, [r2, #0]
 8000cfe:	0628      	lsls	r0, r5, #24
 8000d00:	d501      	bpl.n	8000d06 <_printf_i+0xc2>
 8000d02:	681b      	ldr	r3, [r3, #0]
 8000d04:	e002      	b.n	8000d0c <_printf_i+0xc8>
 8000d06:	0668      	lsls	r0, r5, #25
 8000d08:	d5fb      	bpl.n	8000d02 <_printf_i+0xbe>
 8000d0a:	881b      	ldrh	r3, [r3, #0]
 8000d0c:	4854      	ldr	r0, [pc, #336]	; (8000e60 <_printf_i+0x21c>)
 8000d0e:	296f      	cmp	r1, #111	; 0x6f
 8000d10:	bf14      	ite	ne
 8000d12:	220a      	movne	r2, #10
 8000d14:	2208      	moveq	r2, #8
 8000d16:	2100      	movs	r1, #0
 8000d18:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d1c:	6865      	ldr	r5, [r4, #4]
 8000d1e:	60a5      	str	r5, [r4, #8]
 8000d20:	2d00      	cmp	r5, #0
 8000d22:	f2c0 8095 	blt.w	8000e50 <_printf_i+0x20c>
 8000d26:	6821      	ldr	r1, [r4, #0]
 8000d28:	f021 0104 	bic.w	r1, r1, #4
 8000d2c:	6021      	str	r1, [r4, #0]
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d13d      	bne.n	8000dae <_printf_i+0x16a>
 8000d32:	2d00      	cmp	r5, #0
 8000d34:	f040 808e 	bne.w	8000e54 <_printf_i+0x210>
 8000d38:	4665      	mov	r5, ip
 8000d3a:	2a08      	cmp	r2, #8
 8000d3c:	d10b      	bne.n	8000d56 <_printf_i+0x112>
 8000d3e:	6823      	ldr	r3, [r4, #0]
 8000d40:	07db      	lsls	r3, r3, #31
 8000d42:	d508      	bpl.n	8000d56 <_printf_i+0x112>
 8000d44:	6923      	ldr	r3, [r4, #16]
 8000d46:	6862      	ldr	r2, [r4, #4]
 8000d48:	429a      	cmp	r2, r3
 8000d4a:	bfde      	ittt	le
 8000d4c:	2330      	movle	r3, #48	; 0x30
 8000d4e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d52:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000d56:	ebac 0305 	sub.w	r3, ip, r5
 8000d5a:	6123      	str	r3, [r4, #16]
 8000d5c:	f8cd 8000 	str.w	r8, [sp]
 8000d60:	463b      	mov	r3, r7
 8000d62:	aa03      	add	r2, sp, #12
 8000d64:	4621      	mov	r1, r4
 8000d66:	4630      	mov	r0, r6
 8000d68:	f7ff fef6 	bl	8000b58 <_printf_common>
 8000d6c:	3001      	adds	r0, #1
 8000d6e:	d14d      	bne.n	8000e0c <_printf_i+0x1c8>
 8000d70:	f04f 30ff 	mov.w	r0, #4294967295
 8000d74:	b005      	add	sp, #20
 8000d76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d7a:	4839      	ldr	r0, [pc, #228]	; (8000e60 <_printf_i+0x21c>)
 8000d7c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000d80:	6813      	ldr	r3, [r2, #0]
 8000d82:	6821      	ldr	r1, [r4, #0]
 8000d84:	1d1d      	adds	r5, r3, #4
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	6015      	str	r5, [r2, #0]
 8000d8a:	060a      	lsls	r2, r1, #24
 8000d8c:	d50b      	bpl.n	8000da6 <_printf_i+0x162>
 8000d8e:	07ca      	lsls	r2, r1, #31
 8000d90:	bf44      	itt	mi
 8000d92:	f041 0120 	orrmi.w	r1, r1, #32
 8000d96:	6021      	strmi	r1, [r4, #0]
 8000d98:	b91b      	cbnz	r3, 8000da2 <_printf_i+0x15e>
 8000d9a:	6822      	ldr	r2, [r4, #0]
 8000d9c:	f022 0220 	bic.w	r2, r2, #32
 8000da0:	6022      	str	r2, [r4, #0]
 8000da2:	2210      	movs	r2, #16
 8000da4:	e7b7      	b.n	8000d16 <_printf_i+0xd2>
 8000da6:	064d      	lsls	r5, r1, #25
 8000da8:	bf48      	it	mi
 8000daa:	b29b      	uxthmi	r3, r3
 8000dac:	e7ef      	b.n	8000d8e <_printf_i+0x14a>
 8000dae:	4665      	mov	r5, ip
 8000db0:	fbb3 f1f2 	udiv	r1, r3, r2
 8000db4:	fb02 3311 	mls	r3, r2, r1, r3
 8000db8:	5cc3      	ldrb	r3, [r0, r3]
 8000dba:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000dbe:	460b      	mov	r3, r1
 8000dc0:	2900      	cmp	r1, #0
 8000dc2:	d1f5      	bne.n	8000db0 <_printf_i+0x16c>
 8000dc4:	e7b9      	b.n	8000d3a <_printf_i+0xf6>
 8000dc6:	6813      	ldr	r3, [r2, #0]
 8000dc8:	6825      	ldr	r5, [r4, #0]
 8000dca:	6961      	ldr	r1, [r4, #20]
 8000dcc:	1d18      	adds	r0, r3, #4
 8000dce:	6010      	str	r0, [r2, #0]
 8000dd0:	0628      	lsls	r0, r5, #24
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	d501      	bpl.n	8000dda <_printf_i+0x196>
 8000dd6:	6019      	str	r1, [r3, #0]
 8000dd8:	e002      	b.n	8000de0 <_printf_i+0x19c>
 8000dda:	066a      	lsls	r2, r5, #25
 8000ddc:	d5fb      	bpl.n	8000dd6 <_printf_i+0x192>
 8000dde:	8019      	strh	r1, [r3, #0]
 8000de0:	2300      	movs	r3, #0
 8000de2:	6123      	str	r3, [r4, #16]
 8000de4:	4665      	mov	r5, ip
 8000de6:	e7b9      	b.n	8000d5c <_printf_i+0x118>
 8000de8:	6813      	ldr	r3, [r2, #0]
 8000dea:	1d19      	adds	r1, r3, #4
 8000dec:	6011      	str	r1, [r2, #0]
 8000dee:	681d      	ldr	r5, [r3, #0]
 8000df0:	6862      	ldr	r2, [r4, #4]
 8000df2:	2100      	movs	r1, #0
 8000df4:	4628      	mov	r0, r5
 8000df6:	f7ff fa0b 	bl	8000210 <memchr>
 8000dfa:	b108      	cbz	r0, 8000e00 <_printf_i+0x1bc>
 8000dfc:	1b40      	subs	r0, r0, r5
 8000dfe:	6060      	str	r0, [r4, #4]
 8000e00:	6863      	ldr	r3, [r4, #4]
 8000e02:	6123      	str	r3, [r4, #16]
 8000e04:	2300      	movs	r3, #0
 8000e06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e0a:	e7a7      	b.n	8000d5c <_printf_i+0x118>
 8000e0c:	6923      	ldr	r3, [r4, #16]
 8000e0e:	462a      	mov	r2, r5
 8000e10:	4639      	mov	r1, r7
 8000e12:	4630      	mov	r0, r6
 8000e14:	47c0      	blx	r8
 8000e16:	3001      	adds	r0, #1
 8000e18:	d0aa      	beq.n	8000d70 <_printf_i+0x12c>
 8000e1a:	6823      	ldr	r3, [r4, #0]
 8000e1c:	079b      	lsls	r3, r3, #30
 8000e1e:	d413      	bmi.n	8000e48 <_printf_i+0x204>
 8000e20:	68e0      	ldr	r0, [r4, #12]
 8000e22:	9b03      	ldr	r3, [sp, #12]
 8000e24:	4298      	cmp	r0, r3
 8000e26:	bfb8      	it	lt
 8000e28:	4618      	movlt	r0, r3
 8000e2a:	e7a3      	b.n	8000d74 <_printf_i+0x130>
 8000e2c:	2301      	movs	r3, #1
 8000e2e:	464a      	mov	r2, r9
 8000e30:	4639      	mov	r1, r7
 8000e32:	4630      	mov	r0, r6
 8000e34:	47c0      	blx	r8
 8000e36:	3001      	adds	r0, #1
 8000e38:	d09a      	beq.n	8000d70 <_printf_i+0x12c>
 8000e3a:	3501      	adds	r5, #1
 8000e3c:	68e3      	ldr	r3, [r4, #12]
 8000e3e:	9a03      	ldr	r2, [sp, #12]
 8000e40:	1a9b      	subs	r3, r3, r2
 8000e42:	42ab      	cmp	r3, r5
 8000e44:	dcf2      	bgt.n	8000e2c <_printf_i+0x1e8>
 8000e46:	e7eb      	b.n	8000e20 <_printf_i+0x1dc>
 8000e48:	2500      	movs	r5, #0
 8000e4a:	f104 0919 	add.w	r9, r4, #25
 8000e4e:	e7f5      	b.n	8000e3c <_printf_i+0x1f8>
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d1ac      	bne.n	8000dae <_printf_i+0x16a>
 8000e54:	7803      	ldrb	r3, [r0, #0]
 8000e56:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e5a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e5e:	e76c      	b.n	8000d3a <_printf_i+0xf6>
 8000e60:	0800160d 	.word	0x0800160d
 8000e64:	0800161e 	.word	0x0800161e

08000e68 <_sbrk_r>:
 8000e68:	b538      	push	{r3, r4, r5, lr}
 8000e6a:	4c06      	ldr	r4, [pc, #24]	; (8000e84 <_sbrk_r+0x1c>)
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	4605      	mov	r5, r0
 8000e70:	4608      	mov	r0, r1
 8000e72:	6023      	str	r3, [r4, #0]
 8000e74:	f7ff fb64 	bl	8000540 <_sbrk>
 8000e78:	1c43      	adds	r3, r0, #1
 8000e7a:	d102      	bne.n	8000e82 <_sbrk_r+0x1a>
 8000e7c:	6823      	ldr	r3, [r4, #0]
 8000e7e:	b103      	cbz	r3, 8000e82 <_sbrk_r+0x1a>
 8000e80:	602b      	str	r3, [r5, #0]
 8000e82:	bd38      	pop	{r3, r4, r5, pc}
 8000e84:	2000008c 	.word	0x2000008c

08000e88 <__sread>:
 8000e88:	b510      	push	{r4, lr}
 8000e8a:	460c      	mov	r4, r1
 8000e8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e90:	f000 fa96 	bl	80013c0 <_read_r>
 8000e94:	2800      	cmp	r0, #0
 8000e96:	bfab      	itete	ge
 8000e98:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e9a:	89a3      	ldrhlt	r3, [r4, #12]
 8000e9c:	181b      	addge	r3, r3, r0
 8000e9e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ea2:	bfac      	ite	ge
 8000ea4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ea6:	81a3      	strhlt	r3, [r4, #12]
 8000ea8:	bd10      	pop	{r4, pc}

08000eaa <__swrite>:
 8000eaa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000eae:	461f      	mov	r7, r3
 8000eb0:	898b      	ldrh	r3, [r1, #12]
 8000eb2:	05db      	lsls	r3, r3, #23
 8000eb4:	4605      	mov	r5, r0
 8000eb6:	460c      	mov	r4, r1
 8000eb8:	4616      	mov	r6, r2
 8000eba:	d505      	bpl.n	8000ec8 <__swrite+0x1e>
 8000ebc:	2302      	movs	r3, #2
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ec4:	f000 f9b6 	bl	8001234 <_lseek_r>
 8000ec8:	89a3      	ldrh	r3, [r4, #12]
 8000eca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ece:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ed2:	81a3      	strh	r3, [r4, #12]
 8000ed4:	4632      	mov	r2, r6
 8000ed6:	463b      	mov	r3, r7
 8000ed8:	4628      	mov	r0, r5
 8000eda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ede:	f000 b869 	b.w	8000fb4 <_write_r>

08000ee2 <__sseek>:
 8000ee2:	b510      	push	{r4, lr}
 8000ee4:	460c      	mov	r4, r1
 8000ee6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eea:	f000 f9a3 	bl	8001234 <_lseek_r>
 8000eee:	1c43      	adds	r3, r0, #1
 8000ef0:	89a3      	ldrh	r3, [r4, #12]
 8000ef2:	bf15      	itete	ne
 8000ef4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ef6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000efa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000efe:	81a3      	strheq	r3, [r4, #12]
 8000f00:	bf18      	it	ne
 8000f02:	81a3      	strhne	r3, [r4, #12]
 8000f04:	bd10      	pop	{r4, pc}

08000f06 <__sclose>:
 8000f06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f0a:	f000 b8d3 	b.w	80010b4 <_close_r>
	...

08000f10 <__swbuf_r>:
 8000f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f12:	460e      	mov	r6, r1
 8000f14:	4614      	mov	r4, r2
 8000f16:	4605      	mov	r5, r0
 8000f18:	b118      	cbz	r0, 8000f22 <__swbuf_r+0x12>
 8000f1a:	6983      	ldr	r3, [r0, #24]
 8000f1c:	b90b      	cbnz	r3, 8000f22 <__swbuf_r+0x12>
 8000f1e:	f7ff fbf9 	bl	8000714 <__sinit>
 8000f22:	4b21      	ldr	r3, [pc, #132]	; (8000fa8 <__swbuf_r+0x98>)
 8000f24:	429c      	cmp	r4, r3
 8000f26:	d12a      	bne.n	8000f7e <__swbuf_r+0x6e>
 8000f28:	686c      	ldr	r4, [r5, #4]
 8000f2a:	69a3      	ldr	r3, [r4, #24]
 8000f2c:	60a3      	str	r3, [r4, #8]
 8000f2e:	89a3      	ldrh	r3, [r4, #12]
 8000f30:	071a      	lsls	r2, r3, #28
 8000f32:	d52e      	bpl.n	8000f92 <__swbuf_r+0x82>
 8000f34:	6923      	ldr	r3, [r4, #16]
 8000f36:	b363      	cbz	r3, 8000f92 <__swbuf_r+0x82>
 8000f38:	6923      	ldr	r3, [r4, #16]
 8000f3a:	6820      	ldr	r0, [r4, #0]
 8000f3c:	1ac0      	subs	r0, r0, r3
 8000f3e:	6963      	ldr	r3, [r4, #20]
 8000f40:	b2f6      	uxtb	r6, r6
 8000f42:	4283      	cmp	r3, r0
 8000f44:	4637      	mov	r7, r6
 8000f46:	dc04      	bgt.n	8000f52 <__swbuf_r+0x42>
 8000f48:	4621      	mov	r1, r4
 8000f4a:	4628      	mov	r0, r5
 8000f4c:	f000 f948 	bl	80011e0 <_fflush_r>
 8000f50:	bb28      	cbnz	r0, 8000f9e <__swbuf_r+0x8e>
 8000f52:	68a3      	ldr	r3, [r4, #8]
 8000f54:	3b01      	subs	r3, #1
 8000f56:	60a3      	str	r3, [r4, #8]
 8000f58:	6823      	ldr	r3, [r4, #0]
 8000f5a:	1c5a      	adds	r2, r3, #1
 8000f5c:	6022      	str	r2, [r4, #0]
 8000f5e:	701e      	strb	r6, [r3, #0]
 8000f60:	6963      	ldr	r3, [r4, #20]
 8000f62:	3001      	adds	r0, #1
 8000f64:	4283      	cmp	r3, r0
 8000f66:	d004      	beq.n	8000f72 <__swbuf_r+0x62>
 8000f68:	89a3      	ldrh	r3, [r4, #12]
 8000f6a:	07db      	lsls	r3, r3, #31
 8000f6c:	d519      	bpl.n	8000fa2 <__swbuf_r+0x92>
 8000f6e:	2e0a      	cmp	r6, #10
 8000f70:	d117      	bne.n	8000fa2 <__swbuf_r+0x92>
 8000f72:	4621      	mov	r1, r4
 8000f74:	4628      	mov	r0, r5
 8000f76:	f000 f933 	bl	80011e0 <_fflush_r>
 8000f7a:	b190      	cbz	r0, 8000fa2 <__swbuf_r+0x92>
 8000f7c:	e00f      	b.n	8000f9e <__swbuf_r+0x8e>
 8000f7e:	4b0b      	ldr	r3, [pc, #44]	; (8000fac <__swbuf_r+0x9c>)
 8000f80:	429c      	cmp	r4, r3
 8000f82:	d101      	bne.n	8000f88 <__swbuf_r+0x78>
 8000f84:	68ac      	ldr	r4, [r5, #8]
 8000f86:	e7d0      	b.n	8000f2a <__swbuf_r+0x1a>
 8000f88:	4b09      	ldr	r3, [pc, #36]	; (8000fb0 <__swbuf_r+0xa0>)
 8000f8a:	429c      	cmp	r4, r3
 8000f8c:	bf08      	it	eq
 8000f8e:	68ec      	ldreq	r4, [r5, #12]
 8000f90:	e7cb      	b.n	8000f2a <__swbuf_r+0x1a>
 8000f92:	4621      	mov	r1, r4
 8000f94:	4628      	mov	r0, r5
 8000f96:	f000 f81f 	bl	8000fd8 <__swsetup_r>
 8000f9a:	2800      	cmp	r0, #0
 8000f9c:	d0cc      	beq.n	8000f38 <__swbuf_r+0x28>
 8000f9e:	f04f 37ff 	mov.w	r7, #4294967295
 8000fa2:	4638      	mov	r0, r7
 8000fa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fa6:	bf00      	nop
 8000fa8:	080015bc 	.word	0x080015bc
 8000fac:	080015dc 	.word	0x080015dc
 8000fb0:	0800159c 	.word	0x0800159c

08000fb4 <_write_r>:
 8000fb4:	b538      	push	{r3, r4, r5, lr}
 8000fb6:	4c07      	ldr	r4, [pc, #28]	; (8000fd4 <_write_r+0x20>)
 8000fb8:	4605      	mov	r5, r0
 8000fba:	4608      	mov	r0, r1
 8000fbc:	4611      	mov	r1, r2
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	6022      	str	r2, [r4, #0]
 8000fc2:	461a      	mov	r2, r3
 8000fc4:	f7ff fa6f 	bl	80004a6 <_write>
 8000fc8:	1c43      	adds	r3, r0, #1
 8000fca:	d102      	bne.n	8000fd2 <_write_r+0x1e>
 8000fcc:	6823      	ldr	r3, [r4, #0]
 8000fce:	b103      	cbz	r3, 8000fd2 <_write_r+0x1e>
 8000fd0:	602b      	str	r3, [r5, #0]
 8000fd2:	bd38      	pop	{r3, r4, r5, pc}
 8000fd4:	2000008c 	.word	0x2000008c

08000fd8 <__swsetup_r>:
 8000fd8:	4b32      	ldr	r3, [pc, #200]	; (80010a4 <__swsetup_r+0xcc>)
 8000fda:	b570      	push	{r4, r5, r6, lr}
 8000fdc:	681d      	ldr	r5, [r3, #0]
 8000fde:	4606      	mov	r6, r0
 8000fe0:	460c      	mov	r4, r1
 8000fe2:	b125      	cbz	r5, 8000fee <__swsetup_r+0x16>
 8000fe4:	69ab      	ldr	r3, [r5, #24]
 8000fe6:	b913      	cbnz	r3, 8000fee <__swsetup_r+0x16>
 8000fe8:	4628      	mov	r0, r5
 8000fea:	f7ff fb93 	bl	8000714 <__sinit>
 8000fee:	4b2e      	ldr	r3, [pc, #184]	; (80010a8 <__swsetup_r+0xd0>)
 8000ff0:	429c      	cmp	r4, r3
 8000ff2:	d10f      	bne.n	8001014 <__swsetup_r+0x3c>
 8000ff4:	686c      	ldr	r4, [r5, #4]
 8000ff6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ffa:	b29a      	uxth	r2, r3
 8000ffc:	0715      	lsls	r5, r2, #28
 8000ffe:	d42c      	bmi.n	800105a <__swsetup_r+0x82>
 8001000:	06d0      	lsls	r0, r2, #27
 8001002:	d411      	bmi.n	8001028 <__swsetup_r+0x50>
 8001004:	2209      	movs	r2, #9
 8001006:	6032      	str	r2, [r6, #0]
 8001008:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800100c:	81a3      	strh	r3, [r4, #12]
 800100e:	f04f 30ff 	mov.w	r0, #4294967295
 8001012:	e03e      	b.n	8001092 <__swsetup_r+0xba>
 8001014:	4b25      	ldr	r3, [pc, #148]	; (80010ac <__swsetup_r+0xd4>)
 8001016:	429c      	cmp	r4, r3
 8001018:	d101      	bne.n	800101e <__swsetup_r+0x46>
 800101a:	68ac      	ldr	r4, [r5, #8]
 800101c:	e7eb      	b.n	8000ff6 <__swsetup_r+0x1e>
 800101e:	4b24      	ldr	r3, [pc, #144]	; (80010b0 <__swsetup_r+0xd8>)
 8001020:	429c      	cmp	r4, r3
 8001022:	bf08      	it	eq
 8001024:	68ec      	ldreq	r4, [r5, #12]
 8001026:	e7e6      	b.n	8000ff6 <__swsetup_r+0x1e>
 8001028:	0751      	lsls	r1, r2, #29
 800102a:	d512      	bpl.n	8001052 <__swsetup_r+0x7a>
 800102c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800102e:	b141      	cbz	r1, 8001042 <__swsetup_r+0x6a>
 8001030:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001034:	4299      	cmp	r1, r3
 8001036:	d002      	beq.n	800103e <__swsetup_r+0x66>
 8001038:	4630      	mov	r0, r6
 800103a:	f000 f973 	bl	8001324 <_free_r>
 800103e:	2300      	movs	r3, #0
 8001040:	6363      	str	r3, [r4, #52]	; 0x34
 8001042:	89a3      	ldrh	r3, [r4, #12]
 8001044:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001048:	81a3      	strh	r3, [r4, #12]
 800104a:	2300      	movs	r3, #0
 800104c:	6063      	str	r3, [r4, #4]
 800104e:	6923      	ldr	r3, [r4, #16]
 8001050:	6023      	str	r3, [r4, #0]
 8001052:	89a3      	ldrh	r3, [r4, #12]
 8001054:	f043 0308 	orr.w	r3, r3, #8
 8001058:	81a3      	strh	r3, [r4, #12]
 800105a:	6923      	ldr	r3, [r4, #16]
 800105c:	b94b      	cbnz	r3, 8001072 <__swsetup_r+0x9a>
 800105e:	89a3      	ldrh	r3, [r4, #12]
 8001060:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001064:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001068:	d003      	beq.n	8001072 <__swsetup_r+0x9a>
 800106a:	4621      	mov	r1, r4
 800106c:	4630      	mov	r0, r6
 800106e:	f000 f917 	bl	80012a0 <__smakebuf_r>
 8001072:	89a2      	ldrh	r2, [r4, #12]
 8001074:	f012 0301 	ands.w	r3, r2, #1
 8001078:	d00c      	beq.n	8001094 <__swsetup_r+0xbc>
 800107a:	2300      	movs	r3, #0
 800107c:	60a3      	str	r3, [r4, #8]
 800107e:	6963      	ldr	r3, [r4, #20]
 8001080:	425b      	negs	r3, r3
 8001082:	61a3      	str	r3, [r4, #24]
 8001084:	6923      	ldr	r3, [r4, #16]
 8001086:	b953      	cbnz	r3, 800109e <__swsetup_r+0xc6>
 8001088:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800108c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8001090:	d1ba      	bne.n	8001008 <__swsetup_r+0x30>
 8001092:	bd70      	pop	{r4, r5, r6, pc}
 8001094:	0792      	lsls	r2, r2, #30
 8001096:	bf58      	it	pl
 8001098:	6963      	ldrpl	r3, [r4, #20]
 800109a:	60a3      	str	r3, [r4, #8]
 800109c:	e7f2      	b.n	8001084 <__swsetup_r+0xac>
 800109e:	2000      	movs	r0, #0
 80010a0:	e7f7      	b.n	8001092 <__swsetup_r+0xba>
 80010a2:	bf00      	nop
 80010a4:	20000000 	.word	0x20000000
 80010a8:	080015bc 	.word	0x080015bc
 80010ac:	080015dc 	.word	0x080015dc
 80010b0:	0800159c 	.word	0x0800159c

080010b4 <_close_r>:
 80010b4:	b538      	push	{r3, r4, r5, lr}
 80010b6:	4c06      	ldr	r4, [pc, #24]	; (80010d0 <_close_r+0x1c>)
 80010b8:	2300      	movs	r3, #0
 80010ba:	4605      	mov	r5, r0
 80010bc:	4608      	mov	r0, r1
 80010be:	6023      	str	r3, [r4, #0]
 80010c0:	f7ff fa0d 	bl	80004de <_close>
 80010c4:	1c43      	adds	r3, r0, #1
 80010c6:	d102      	bne.n	80010ce <_close_r+0x1a>
 80010c8:	6823      	ldr	r3, [r4, #0]
 80010ca:	b103      	cbz	r3, 80010ce <_close_r+0x1a>
 80010cc:	602b      	str	r3, [r5, #0]
 80010ce:	bd38      	pop	{r3, r4, r5, pc}
 80010d0:	2000008c 	.word	0x2000008c

080010d4 <__sflush_r>:
 80010d4:	898a      	ldrh	r2, [r1, #12]
 80010d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010da:	4605      	mov	r5, r0
 80010dc:	0710      	lsls	r0, r2, #28
 80010de:	460c      	mov	r4, r1
 80010e0:	d458      	bmi.n	8001194 <__sflush_r+0xc0>
 80010e2:	684b      	ldr	r3, [r1, #4]
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	dc05      	bgt.n	80010f4 <__sflush_r+0x20>
 80010e8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80010ea:	2b00      	cmp	r3, #0
 80010ec:	dc02      	bgt.n	80010f4 <__sflush_r+0x20>
 80010ee:	2000      	movs	r0, #0
 80010f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010f6:	2e00      	cmp	r6, #0
 80010f8:	d0f9      	beq.n	80010ee <__sflush_r+0x1a>
 80010fa:	2300      	movs	r3, #0
 80010fc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001100:	682f      	ldr	r7, [r5, #0]
 8001102:	6a21      	ldr	r1, [r4, #32]
 8001104:	602b      	str	r3, [r5, #0]
 8001106:	d032      	beq.n	800116e <__sflush_r+0x9a>
 8001108:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800110a:	89a3      	ldrh	r3, [r4, #12]
 800110c:	075a      	lsls	r2, r3, #29
 800110e:	d505      	bpl.n	800111c <__sflush_r+0x48>
 8001110:	6863      	ldr	r3, [r4, #4]
 8001112:	1ac0      	subs	r0, r0, r3
 8001114:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001116:	b10b      	cbz	r3, 800111c <__sflush_r+0x48>
 8001118:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800111a:	1ac0      	subs	r0, r0, r3
 800111c:	2300      	movs	r3, #0
 800111e:	4602      	mov	r2, r0
 8001120:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001122:	6a21      	ldr	r1, [r4, #32]
 8001124:	4628      	mov	r0, r5
 8001126:	47b0      	blx	r6
 8001128:	1c43      	adds	r3, r0, #1
 800112a:	89a3      	ldrh	r3, [r4, #12]
 800112c:	d106      	bne.n	800113c <__sflush_r+0x68>
 800112e:	6829      	ldr	r1, [r5, #0]
 8001130:	291d      	cmp	r1, #29
 8001132:	d848      	bhi.n	80011c6 <__sflush_r+0xf2>
 8001134:	4a29      	ldr	r2, [pc, #164]	; (80011dc <__sflush_r+0x108>)
 8001136:	40ca      	lsrs	r2, r1
 8001138:	07d6      	lsls	r6, r2, #31
 800113a:	d544      	bpl.n	80011c6 <__sflush_r+0xf2>
 800113c:	2200      	movs	r2, #0
 800113e:	6062      	str	r2, [r4, #4]
 8001140:	04d9      	lsls	r1, r3, #19
 8001142:	6922      	ldr	r2, [r4, #16]
 8001144:	6022      	str	r2, [r4, #0]
 8001146:	d504      	bpl.n	8001152 <__sflush_r+0x7e>
 8001148:	1c42      	adds	r2, r0, #1
 800114a:	d101      	bne.n	8001150 <__sflush_r+0x7c>
 800114c:	682b      	ldr	r3, [r5, #0]
 800114e:	b903      	cbnz	r3, 8001152 <__sflush_r+0x7e>
 8001150:	6560      	str	r0, [r4, #84]	; 0x54
 8001152:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001154:	602f      	str	r7, [r5, #0]
 8001156:	2900      	cmp	r1, #0
 8001158:	d0c9      	beq.n	80010ee <__sflush_r+0x1a>
 800115a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800115e:	4299      	cmp	r1, r3
 8001160:	d002      	beq.n	8001168 <__sflush_r+0x94>
 8001162:	4628      	mov	r0, r5
 8001164:	f000 f8de 	bl	8001324 <_free_r>
 8001168:	2000      	movs	r0, #0
 800116a:	6360      	str	r0, [r4, #52]	; 0x34
 800116c:	e7c0      	b.n	80010f0 <__sflush_r+0x1c>
 800116e:	2301      	movs	r3, #1
 8001170:	4628      	mov	r0, r5
 8001172:	47b0      	blx	r6
 8001174:	1c41      	adds	r1, r0, #1
 8001176:	d1c8      	bne.n	800110a <__sflush_r+0x36>
 8001178:	682b      	ldr	r3, [r5, #0]
 800117a:	2b00      	cmp	r3, #0
 800117c:	d0c5      	beq.n	800110a <__sflush_r+0x36>
 800117e:	2b1d      	cmp	r3, #29
 8001180:	d001      	beq.n	8001186 <__sflush_r+0xb2>
 8001182:	2b16      	cmp	r3, #22
 8001184:	d101      	bne.n	800118a <__sflush_r+0xb6>
 8001186:	602f      	str	r7, [r5, #0]
 8001188:	e7b1      	b.n	80010ee <__sflush_r+0x1a>
 800118a:	89a3      	ldrh	r3, [r4, #12]
 800118c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001190:	81a3      	strh	r3, [r4, #12]
 8001192:	e7ad      	b.n	80010f0 <__sflush_r+0x1c>
 8001194:	690f      	ldr	r7, [r1, #16]
 8001196:	2f00      	cmp	r7, #0
 8001198:	d0a9      	beq.n	80010ee <__sflush_r+0x1a>
 800119a:	0793      	lsls	r3, r2, #30
 800119c:	680e      	ldr	r6, [r1, #0]
 800119e:	bf08      	it	eq
 80011a0:	694b      	ldreq	r3, [r1, #20]
 80011a2:	600f      	str	r7, [r1, #0]
 80011a4:	bf18      	it	ne
 80011a6:	2300      	movne	r3, #0
 80011a8:	eba6 0807 	sub.w	r8, r6, r7
 80011ac:	608b      	str	r3, [r1, #8]
 80011ae:	f1b8 0f00 	cmp.w	r8, #0
 80011b2:	dd9c      	ble.n	80010ee <__sflush_r+0x1a>
 80011b4:	4643      	mov	r3, r8
 80011b6:	463a      	mov	r2, r7
 80011b8:	6a21      	ldr	r1, [r4, #32]
 80011ba:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80011bc:	4628      	mov	r0, r5
 80011be:	47b0      	blx	r6
 80011c0:	2800      	cmp	r0, #0
 80011c2:	dc06      	bgt.n	80011d2 <__sflush_r+0xfe>
 80011c4:	89a3      	ldrh	r3, [r4, #12]
 80011c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011ca:	81a3      	strh	r3, [r4, #12]
 80011cc:	f04f 30ff 	mov.w	r0, #4294967295
 80011d0:	e78e      	b.n	80010f0 <__sflush_r+0x1c>
 80011d2:	4407      	add	r7, r0
 80011d4:	eba8 0800 	sub.w	r8, r8, r0
 80011d8:	e7e9      	b.n	80011ae <__sflush_r+0xda>
 80011da:	bf00      	nop
 80011dc:	20400001 	.word	0x20400001

080011e0 <_fflush_r>:
 80011e0:	b538      	push	{r3, r4, r5, lr}
 80011e2:	690b      	ldr	r3, [r1, #16]
 80011e4:	4605      	mov	r5, r0
 80011e6:	460c      	mov	r4, r1
 80011e8:	b1db      	cbz	r3, 8001222 <_fflush_r+0x42>
 80011ea:	b118      	cbz	r0, 80011f4 <_fflush_r+0x14>
 80011ec:	6983      	ldr	r3, [r0, #24]
 80011ee:	b90b      	cbnz	r3, 80011f4 <_fflush_r+0x14>
 80011f0:	f7ff fa90 	bl	8000714 <__sinit>
 80011f4:	4b0c      	ldr	r3, [pc, #48]	; (8001228 <_fflush_r+0x48>)
 80011f6:	429c      	cmp	r4, r3
 80011f8:	d109      	bne.n	800120e <_fflush_r+0x2e>
 80011fa:	686c      	ldr	r4, [r5, #4]
 80011fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001200:	b17b      	cbz	r3, 8001222 <_fflush_r+0x42>
 8001202:	4621      	mov	r1, r4
 8001204:	4628      	mov	r0, r5
 8001206:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800120a:	f7ff bf63 	b.w	80010d4 <__sflush_r>
 800120e:	4b07      	ldr	r3, [pc, #28]	; (800122c <_fflush_r+0x4c>)
 8001210:	429c      	cmp	r4, r3
 8001212:	d101      	bne.n	8001218 <_fflush_r+0x38>
 8001214:	68ac      	ldr	r4, [r5, #8]
 8001216:	e7f1      	b.n	80011fc <_fflush_r+0x1c>
 8001218:	4b05      	ldr	r3, [pc, #20]	; (8001230 <_fflush_r+0x50>)
 800121a:	429c      	cmp	r4, r3
 800121c:	bf08      	it	eq
 800121e:	68ec      	ldreq	r4, [r5, #12]
 8001220:	e7ec      	b.n	80011fc <_fflush_r+0x1c>
 8001222:	2000      	movs	r0, #0
 8001224:	bd38      	pop	{r3, r4, r5, pc}
 8001226:	bf00      	nop
 8001228:	080015bc 	.word	0x080015bc
 800122c:	080015dc 	.word	0x080015dc
 8001230:	0800159c 	.word	0x0800159c

08001234 <_lseek_r>:
 8001234:	b538      	push	{r3, r4, r5, lr}
 8001236:	4c07      	ldr	r4, [pc, #28]	; (8001254 <_lseek_r+0x20>)
 8001238:	4605      	mov	r5, r0
 800123a:	4608      	mov	r0, r1
 800123c:	4611      	mov	r1, r2
 800123e:	2200      	movs	r2, #0
 8001240:	6022      	str	r2, [r4, #0]
 8001242:	461a      	mov	r2, r3
 8001244:	f7ff f96f 	bl	8000526 <_lseek>
 8001248:	1c43      	adds	r3, r0, #1
 800124a:	d102      	bne.n	8001252 <_lseek_r+0x1e>
 800124c:	6823      	ldr	r3, [r4, #0]
 800124e:	b103      	cbz	r3, 8001252 <_lseek_r+0x1e>
 8001250:	602b      	str	r3, [r5, #0]
 8001252:	bd38      	pop	{r3, r4, r5, pc}
 8001254:	2000008c 	.word	0x2000008c

08001258 <__swhatbuf_r>:
 8001258:	b570      	push	{r4, r5, r6, lr}
 800125a:	460e      	mov	r6, r1
 800125c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001260:	2900      	cmp	r1, #0
 8001262:	b096      	sub	sp, #88	; 0x58
 8001264:	4614      	mov	r4, r2
 8001266:	461d      	mov	r5, r3
 8001268:	da07      	bge.n	800127a <__swhatbuf_r+0x22>
 800126a:	2300      	movs	r3, #0
 800126c:	602b      	str	r3, [r5, #0]
 800126e:	89b3      	ldrh	r3, [r6, #12]
 8001270:	061a      	lsls	r2, r3, #24
 8001272:	d410      	bmi.n	8001296 <__swhatbuf_r+0x3e>
 8001274:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001278:	e00e      	b.n	8001298 <__swhatbuf_r+0x40>
 800127a:	466a      	mov	r2, sp
 800127c:	f000 f8b2 	bl	80013e4 <_fstat_r>
 8001280:	2800      	cmp	r0, #0
 8001282:	dbf2      	blt.n	800126a <__swhatbuf_r+0x12>
 8001284:	9a01      	ldr	r2, [sp, #4]
 8001286:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800128a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800128e:	425a      	negs	r2, r3
 8001290:	415a      	adcs	r2, r3
 8001292:	602a      	str	r2, [r5, #0]
 8001294:	e7ee      	b.n	8001274 <__swhatbuf_r+0x1c>
 8001296:	2340      	movs	r3, #64	; 0x40
 8001298:	2000      	movs	r0, #0
 800129a:	6023      	str	r3, [r4, #0]
 800129c:	b016      	add	sp, #88	; 0x58
 800129e:	bd70      	pop	{r4, r5, r6, pc}

080012a0 <__smakebuf_r>:
 80012a0:	898b      	ldrh	r3, [r1, #12]
 80012a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012a4:	079d      	lsls	r5, r3, #30
 80012a6:	4606      	mov	r6, r0
 80012a8:	460c      	mov	r4, r1
 80012aa:	d507      	bpl.n	80012bc <__smakebuf_r+0x1c>
 80012ac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	6123      	str	r3, [r4, #16]
 80012b4:	2301      	movs	r3, #1
 80012b6:	6163      	str	r3, [r4, #20]
 80012b8:	b002      	add	sp, #8
 80012ba:	bd70      	pop	{r4, r5, r6, pc}
 80012bc:	ab01      	add	r3, sp, #4
 80012be:	466a      	mov	r2, sp
 80012c0:	f7ff ffca 	bl	8001258 <__swhatbuf_r>
 80012c4:	9900      	ldr	r1, [sp, #0]
 80012c6:	4605      	mov	r5, r0
 80012c8:	4630      	mov	r0, r6
 80012ca:	f7ff faad 	bl	8000828 <_malloc_r>
 80012ce:	b948      	cbnz	r0, 80012e4 <__smakebuf_r+0x44>
 80012d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012d4:	059a      	lsls	r2, r3, #22
 80012d6:	d4ef      	bmi.n	80012b8 <__smakebuf_r+0x18>
 80012d8:	f023 0303 	bic.w	r3, r3, #3
 80012dc:	f043 0302 	orr.w	r3, r3, #2
 80012e0:	81a3      	strh	r3, [r4, #12]
 80012e2:	e7e3      	b.n	80012ac <__smakebuf_r+0xc>
 80012e4:	4b0d      	ldr	r3, [pc, #52]	; (800131c <__smakebuf_r+0x7c>)
 80012e6:	62b3      	str	r3, [r6, #40]	; 0x28
 80012e8:	89a3      	ldrh	r3, [r4, #12]
 80012ea:	6020      	str	r0, [r4, #0]
 80012ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012f0:	81a3      	strh	r3, [r4, #12]
 80012f2:	9b00      	ldr	r3, [sp, #0]
 80012f4:	6163      	str	r3, [r4, #20]
 80012f6:	9b01      	ldr	r3, [sp, #4]
 80012f8:	6120      	str	r0, [r4, #16]
 80012fa:	b15b      	cbz	r3, 8001314 <__smakebuf_r+0x74>
 80012fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001300:	4630      	mov	r0, r6
 8001302:	f000 f881 	bl	8001408 <_isatty_r>
 8001306:	b128      	cbz	r0, 8001314 <__smakebuf_r+0x74>
 8001308:	89a3      	ldrh	r3, [r4, #12]
 800130a:	f023 0303 	bic.w	r3, r3, #3
 800130e:	f043 0301 	orr.w	r3, r3, #1
 8001312:	81a3      	strh	r3, [r4, #12]
 8001314:	89a3      	ldrh	r3, [r4, #12]
 8001316:	431d      	orrs	r5, r3
 8001318:	81a5      	strh	r5, [r4, #12]
 800131a:	e7cd      	b.n	80012b8 <__smakebuf_r+0x18>
 800131c:	080006dd 	.word	0x080006dd

08001320 <__malloc_lock>:
 8001320:	4770      	bx	lr

08001322 <__malloc_unlock>:
 8001322:	4770      	bx	lr

08001324 <_free_r>:
 8001324:	b538      	push	{r3, r4, r5, lr}
 8001326:	4605      	mov	r5, r0
 8001328:	2900      	cmp	r1, #0
 800132a:	d045      	beq.n	80013b8 <_free_r+0x94>
 800132c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001330:	1f0c      	subs	r4, r1, #4
 8001332:	2b00      	cmp	r3, #0
 8001334:	bfb8      	it	lt
 8001336:	18e4      	addlt	r4, r4, r3
 8001338:	f7ff fff2 	bl	8001320 <__malloc_lock>
 800133c:	4a1f      	ldr	r2, [pc, #124]	; (80013bc <_free_r+0x98>)
 800133e:	6813      	ldr	r3, [r2, #0]
 8001340:	4610      	mov	r0, r2
 8001342:	b933      	cbnz	r3, 8001352 <_free_r+0x2e>
 8001344:	6063      	str	r3, [r4, #4]
 8001346:	6014      	str	r4, [r2, #0]
 8001348:	4628      	mov	r0, r5
 800134a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800134e:	f7ff bfe8 	b.w	8001322 <__malloc_unlock>
 8001352:	42a3      	cmp	r3, r4
 8001354:	d90c      	bls.n	8001370 <_free_r+0x4c>
 8001356:	6821      	ldr	r1, [r4, #0]
 8001358:	1862      	adds	r2, r4, r1
 800135a:	4293      	cmp	r3, r2
 800135c:	bf04      	itt	eq
 800135e:	681a      	ldreq	r2, [r3, #0]
 8001360:	685b      	ldreq	r3, [r3, #4]
 8001362:	6063      	str	r3, [r4, #4]
 8001364:	bf04      	itt	eq
 8001366:	1852      	addeq	r2, r2, r1
 8001368:	6022      	streq	r2, [r4, #0]
 800136a:	6004      	str	r4, [r0, #0]
 800136c:	e7ec      	b.n	8001348 <_free_r+0x24>
 800136e:	4613      	mov	r3, r2
 8001370:	685a      	ldr	r2, [r3, #4]
 8001372:	b10a      	cbz	r2, 8001378 <_free_r+0x54>
 8001374:	42a2      	cmp	r2, r4
 8001376:	d9fa      	bls.n	800136e <_free_r+0x4a>
 8001378:	6819      	ldr	r1, [r3, #0]
 800137a:	1858      	adds	r0, r3, r1
 800137c:	42a0      	cmp	r0, r4
 800137e:	d10b      	bne.n	8001398 <_free_r+0x74>
 8001380:	6820      	ldr	r0, [r4, #0]
 8001382:	4401      	add	r1, r0
 8001384:	1858      	adds	r0, r3, r1
 8001386:	4282      	cmp	r2, r0
 8001388:	6019      	str	r1, [r3, #0]
 800138a:	d1dd      	bne.n	8001348 <_free_r+0x24>
 800138c:	6810      	ldr	r0, [r2, #0]
 800138e:	6852      	ldr	r2, [r2, #4]
 8001390:	605a      	str	r2, [r3, #4]
 8001392:	4401      	add	r1, r0
 8001394:	6019      	str	r1, [r3, #0]
 8001396:	e7d7      	b.n	8001348 <_free_r+0x24>
 8001398:	d902      	bls.n	80013a0 <_free_r+0x7c>
 800139a:	230c      	movs	r3, #12
 800139c:	602b      	str	r3, [r5, #0]
 800139e:	e7d3      	b.n	8001348 <_free_r+0x24>
 80013a0:	6820      	ldr	r0, [r4, #0]
 80013a2:	1821      	adds	r1, r4, r0
 80013a4:	428a      	cmp	r2, r1
 80013a6:	bf04      	itt	eq
 80013a8:	6811      	ldreq	r1, [r2, #0]
 80013aa:	6852      	ldreq	r2, [r2, #4]
 80013ac:	6062      	str	r2, [r4, #4]
 80013ae:	bf04      	itt	eq
 80013b0:	1809      	addeq	r1, r1, r0
 80013b2:	6021      	streq	r1, [r4, #0]
 80013b4:	605c      	str	r4, [r3, #4]
 80013b6:	e7c7      	b.n	8001348 <_free_r+0x24>
 80013b8:	bd38      	pop	{r3, r4, r5, pc}
 80013ba:	bf00      	nop
 80013bc:	20000084 	.word	0x20000084

080013c0 <_read_r>:
 80013c0:	b538      	push	{r3, r4, r5, lr}
 80013c2:	4c07      	ldr	r4, [pc, #28]	; (80013e0 <_read_r+0x20>)
 80013c4:	4605      	mov	r5, r0
 80013c6:	4608      	mov	r0, r1
 80013c8:	4611      	mov	r1, r2
 80013ca:	2200      	movs	r2, #0
 80013cc:	6022      	str	r2, [r4, #0]
 80013ce:	461a      	mov	r2, r3
 80013d0:	f7ff f84c 	bl	800046c <_read>
 80013d4:	1c43      	adds	r3, r0, #1
 80013d6:	d102      	bne.n	80013de <_read_r+0x1e>
 80013d8:	6823      	ldr	r3, [r4, #0]
 80013da:	b103      	cbz	r3, 80013de <_read_r+0x1e>
 80013dc:	602b      	str	r3, [r5, #0]
 80013de:	bd38      	pop	{r3, r4, r5, pc}
 80013e0:	2000008c 	.word	0x2000008c

080013e4 <_fstat_r>:
 80013e4:	b538      	push	{r3, r4, r5, lr}
 80013e6:	4c07      	ldr	r4, [pc, #28]	; (8001404 <_fstat_r+0x20>)
 80013e8:	2300      	movs	r3, #0
 80013ea:	4605      	mov	r5, r0
 80013ec:	4608      	mov	r0, r1
 80013ee:	4611      	mov	r1, r2
 80013f0:	6023      	str	r3, [r4, #0]
 80013f2:	f7ff f87f 	bl	80004f4 <_fstat>
 80013f6:	1c43      	adds	r3, r0, #1
 80013f8:	d102      	bne.n	8001400 <_fstat_r+0x1c>
 80013fa:	6823      	ldr	r3, [r4, #0]
 80013fc:	b103      	cbz	r3, 8001400 <_fstat_r+0x1c>
 80013fe:	602b      	str	r3, [r5, #0]
 8001400:	bd38      	pop	{r3, r4, r5, pc}
 8001402:	bf00      	nop
 8001404:	2000008c 	.word	0x2000008c

08001408 <_isatty_r>:
 8001408:	b538      	push	{r3, r4, r5, lr}
 800140a:	4c06      	ldr	r4, [pc, #24]	; (8001424 <_isatty_r+0x1c>)
 800140c:	2300      	movs	r3, #0
 800140e:	4605      	mov	r5, r0
 8001410:	4608      	mov	r0, r1
 8001412:	6023      	str	r3, [r4, #0]
 8001414:	f7ff f87d 	bl	8000512 <_isatty>
 8001418:	1c43      	adds	r3, r0, #1
 800141a:	d102      	bne.n	8001422 <_isatty_r+0x1a>
 800141c:	6823      	ldr	r3, [r4, #0]
 800141e:	b103      	cbz	r3, 8001422 <_isatty_r+0x1a>
 8001420:	602b      	str	r3, [r5, #0]
 8001422:	bd38      	pop	{r3, r4, r5, pc}
 8001424:	2000008c 	.word	0x2000008c

08001428 <_init>:
 8001428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800142a:	bf00      	nop
 800142c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800142e:	bc08      	pop	{r3}
 8001430:	469e      	mov	lr, r3
 8001432:	4770      	bx	lr

08001434 <_fini>:
 8001434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001436:	bf00      	nop
 8001438:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800143a:	bc08      	pop	{r3}
 800143c:	469e      	mov	lr, r3
 800143e:	4770      	bx	lr
