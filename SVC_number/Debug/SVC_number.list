
SVC_number.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001238  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c8  08001408  08001408  00011408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014d0  080014d0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014d0  080014d0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014d0  080014d0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014d0  080014d0  000114d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014d4  080014d4  000114d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  0800153c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  0800153c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000021da  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005db  00000000  00000000  00022268  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  00022848  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f0  00000000  00000000  00022970  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000029cc  00000000  00000000  00022a60  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000122c  00000000  00000000  0002542c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009121  00000000  00000000  00026658  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f779  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000adc  00000000  00000000  0002f7f4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080013f0 	.word	0x080013f0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080013f0 	.word	0x080013f0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:

#include <stdio.h>
#include <stdint.h>

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	__asm ("SVC #12");
 80002b6:	df0c      	svc	12

	//register uint32_t data __asm ("r0");

	uint32_t data;

	__asm volatile ("MOV %0,R0": "=r"(data):  );
 80002b8:	4603      	mov	r3, r0
 80002ba:	607b      	str	r3, [r7, #4]

	printf("data = %ld\n",data);
 80002bc:	6879      	ldr	r1, [r7, #4]
 80002be:	4802      	ldr	r0, [pc, #8]	; (80002c8 <main+0x18>)
 80002c0:	f000 f950 	bl	8000564 <iprintf>
    /* Loop forever */
	for(;;);
 80002c4:	e7fe      	b.n	80002c4 <main+0x14>
 80002c6:	bf00      	nop
 80002c8:	08001408 	.word	0x08001408

080002cc <SVC_Handler>:
}

__attribute__((naked)) void SVC_Handler (void){

	//1.get the value of MSP
	__asm ("MRS R0,MSP");
 80002cc:	f3ef 8008 	mrs	r0, MSP
	__asm ("B SVC_Handler_c");
 80002d0:	f000 b802 	b.w	80002d8 <SVC_Handler_c>


}
 80002d4:	bf00      	nop
	...

080002d8 <SVC_Handler_c>:

void SVC_Handler_c(uint32_t* pBaseOfStackFrame){
 80002d8:	b580      	push	{r7, lr}
 80002da:	b084      	sub	sp, #16
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]

	printf("In SVC Handler\n");
 80002e0:	480d      	ldr	r0, [pc, #52]	; (8000318 <SVC_Handler_c+0x40>)
 80002e2:	f000 f9b3 	bl	800064c <puts>

	uint8_t *pReturn_addr = (uint8_t*) pBaseOfStackFrame[6];
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	3318      	adds	r3, #24
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	60fb      	str	r3, [r7, #12]

	//2.decreament the address by 2 to point to
	//opcode of SVC instruction in program memory

	pReturn_addr-=2;
 80002ee:	68fb      	ldr	r3, [r7, #12]
 80002f0:	3b02      	subs	r3, #2
 80002f2:	60fb      	str	r3, [r7, #12]

	//3. Get the SVC number

	uint8_t SVC_number = *pReturn_addr;
 80002f4:	68fb      	ldr	r3, [r7, #12]
 80002f6:	781b      	ldrb	r3, [r3, #0]
 80002f8:	72fb      	strb	r3, [r7, #11]

	printf("SVC number is %d\n",SVC_number);
 80002fa:	7afb      	ldrb	r3, [r7, #11]
 80002fc:	4619      	mov	r1, r3
 80002fe:	4807      	ldr	r0, [pc, #28]	; (800031c <SVC_Handler_c+0x44>)
 8000300:	f000 f930 	bl	8000564 <iprintf>

	SVC_number+=4;
 8000304:	7afb      	ldrb	r3, [r7, #11]
 8000306:	3304      	adds	r3, #4
 8000308:	72fb      	strb	r3, [r7, #11]

	pBaseOfStackFrame[0]=SVC_number;
 800030a:	7afa      	ldrb	r2, [r7, #11]
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	601a      	str	r2, [r3, #0]

}
 8000310:	bf00      	nop
 8000312:	3710      	adds	r7, #16
 8000314:	46bd      	mov	sp, r7
 8000316:	bd80      	pop	{r7, pc}
 8000318:	08001414 	.word	0x08001414
 800031c:	08001424 	.word	0x08001424

08000320 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000320:	b480      	push	{r7}
 8000322:	b083      	sub	sp, #12
 8000324:	af00      	add	r7, sp, #0
 8000326:	4603      	mov	r3, r0
 8000328:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800032a:	4b0e      	ldr	r3, [pc, #56]	; (8000364 <ITM_SendChar+0x44>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	4a0d      	ldr	r2, [pc, #52]	; (8000364 <ITM_SendChar+0x44>)
 8000330:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000334:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000336:	4b0c      	ldr	r3, [pc, #48]	; (8000368 <ITM_SendChar+0x48>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	4a0b      	ldr	r2, [pc, #44]	; (8000368 <ITM_SendChar+0x48>)
 800033c:	f043 0301 	orr.w	r3, r3, #1
 8000340:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000342:	bf00      	nop
 8000344:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	f003 0301 	and.w	r3, r3, #1
 800034e:	2b00      	cmp	r3, #0
 8000350:	d0f8      	beq.n	8000344 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000352:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000356:	79fb      	ldrb	r3, [r7, #7]
 8000358:	6013      	str	r3, [r2, #0]
}
 800035a:	bf00      	nop
 800035c:	370c      	adds	r7, #12
 800035e:	46bd      	mov	sp, r7
 8000360:	bc80      	pop	{r7}
 8000362:	4770      	bx	lr
 8000364:	e000edfc 	.word	0xe000edfc
 8000368:	e0000e00 	.word	0xe0000e00

0800036c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800036c:	b580      	push	{r7, lr}
 800036e:	b086      	sub	sp, #24
 8000370:	af00      	add	r7, sp, #0
 8000372:	60f8      	str	r0, [r7, #12]
 8000374:	60b9      	str	r1, [r7, #8]
 8000376:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000378:	2300      	movs	r3, #0
 800037a:	617b      	str	r3, [r7, #20]
 800037c:	e00a      	b.n	8000394 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800037e:	f3af 8000 	nop.w
 8000382:	4601      	mov	r1, r0
 8000384:	68bb      	ldr	r3, [r7, #8]
 8000386:	1c5a      	adds	r2, r3, #1
 8000388:	60ba      	str	r2, [r7, #8]
 800038a:	b2ca      	uxtb	r2, r1
 800038c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800038e:	697b      	ldr	r3, [r7, #20]
 8000390:	3301      	adds	r3, #1
 8000392:	617b      	str	r3, [r7, #20]
 8000394:	697a      	ldr	r2, [r7, #20]
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	429a      	cmp	r2, r3
 800039a:	dbf0      	blt.n	800037e <_read+0x12>
	}

return len;
 800039c:	687b      	ldr	r3, [r7, #4]
}
 800039e:	4618      	mov	r0, r3
 80003a0:	3718      	adds	r7, #24
 80003a2:	46bd      	mov	sp, r7
 80003a4:	bd80      	pop	{r7, pc}

080003a6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003a6:	b580      	push	{r7, lr}
 80003a8:	b086      	sub	sp, #24
 80003aa:	af00      	add	r7, sp, #0
 80003ac:	60f8      	str	r0, [r7, #12]
 80003ae:	60b9      	str	r1, [r7, #8]
 80003b0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003b2:	2300      	movs	r3, #0
 80003b4:	617b      	str	r3, [r7, #20]
 80003b6:	e009      	b.n	80003cc <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80003b8:	68bb      	ldr	r3, [r7, #8]
 80003ba:	1c5a      	adds	r2, r3, #1
 80003bc:	60ba      	str	r2, [r7, #8]
 80003be:	781b      	ldrb	r3, [r3, #0]
 80003c0:	4618      	mov	r0, r3
 80003c2:	f7ff ffad 	bl	8000320 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003c6:	697b      	ldr	r3, [r7, #20]
 80003c8:	3301      	adds	r3, #1
 80003ca:	617b      	str	r3, [r7, #20]
 80003cc:	697a      	ldr	r2, [r7, #20]
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	429a      	cmp	r2, r3
 80003d2:	dbf1      	blt.n	80003b8 <_write+0x12>
	}
	return len;
 80003d4:	687b      	ldr	r3, [r7, #4]
}
 80003d6:	4618      	mov	r0, r3
 80003d8:	3718      	adds	r7, #24
 80003da:	46bd      	mov	sp, r7
 80003dc:	bd80      	pop	{r7, pc}

080003de <_close>:

int _close(int file)
{
 80003de:	b480      	push	{r7}
 80003e0:	b083      	sub	sp, #12
 80003e2:	af00      	add	r7, sp, #0
 80003e4:	6078      	str	r0, [r7, #4]
	return -1;
 80003e6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003ea:	4618      	mov	r0, r3
 80003ec:	370c      	adds	r7, #12
 80003ee:	46bd      	mov	sp, r7
 80003f0:	bc80      	pop	{r7}
 80003f2:	4770      	bx	lr

080003f4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003f4:	b480      	push	{r7}
 80003f6:	b083      	sub	sp, #12
 80003f8:	af00      	add	r7, sp, #0
 80003fa:	6078      	str	r0, [r7, #4]
 80003fc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003fe:	683b      	ldr	r3, [r7, #0]
 8000400:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000404:	605a      	str	r2, [r3, #4]
	return 0;
 8000406:	2300      	movs	r3, #0
}
 8000408:	4618      	mov	r0, r3
 800040a:	370c      	adds	r7, #12
 800040c:	46bd      	mov	sp, r7
 800040e:	bc80      	pop	{r7}
 8000410:	4770      	bx	lr

08000412 <_isatty>:

int _isatty(int file)
{
 8000412:	b480      	push	{r7}
 8000414:	b083      	sub	sp, #12
 8000416:	af00      	add	r7, sp, #0
 8000418:	6078      	str	r0, [r7, #4]
	return 1;
 800041a:	2301      	movs	r3, #1
}
 800041c:	4618      	mov	r0, r3
 800041e:	370c      	adds	r7, #12
 8000420:	46bd      	mov	sp, r7
 8000422:	bc80      	pop	{r7}
 8000424:	4770      	bx	lr

08000426 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000426:	b480      	push	{r7}
 8000428:	b085      	sub	sp, #20
 800042a:	af00      	add	r7, sp, #0
 800042c:	60f8      	str	r0, [r7, #12]
 800042e:	60b9      	str	r1, [r7, #8]
 8000430:	607a      	str	r2, [r7, #4]
	return 0;
 8000432:	2300      	movs	r3, #0
}
 8000434:	4618      	mov	r0, r3
 8000436:	3714      	adds	r7, #20
 8000438:	46bd      	mov	sp, r7
 800043a:	bc80      	pop	{r7}
 800043c:	4770      	bx	lr
	...

08000440 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000440:	b580      	push	{r7, lr}
 8000442:	b086      	sub	sp, #24
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000448:	4a14      	ldr	r2, [pc, #80]	; (800049c <_sbrk+0x5c>)
 800044a:	4b15      	ldr	r3, [pc, #84]	; (80004a0 <_sbrk+0x60>)
 800044c:	1ad3      	subs	r3, r2, r3
 800044e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000450:	697b      	ldr	r3, [r7, #20]
 8000452:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000454:	4b13      	ldr	r3, [pc, #76]	; (80004a4 <_sbrk+0x64>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	2b00      	cmp	r3, #0
 800045a:	d102      	bne.n	8000462 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800045c:	4b11      	ldr	r3, [pc, #68]	; (80004a4 <_sbrk+0x64>)
 800045e:	4a12      	ldr	r2, [pc, #72]	; (80004a8 <_sbrk+0x68>)
 8000460:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000462:	4b10      	ldr	r3, [pc, #64]	; (80004a4 <_sbrk+0x64>)
 8000464:	681a      	ldr	r2, [r3, #0]
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4413      	add	r3, r2
 800046a:	693a      	ldr	r2, [r7, #16]
 800046c:	429a      	cmp	r2, r3
 800046e:	d207      	bcs.n	8000480 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000470:	f000 f846 	bl	8000500 <__errno>
 8000474:	4602      	mov	r2, r0
 8000476:	230c      	movs	r3, #12
 8000478:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 800047a:	f04f 33ff 	mov.w	r3, #4294967295
 800047e:	e009      	b.n	8000494 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000480:	4b08      	ldr	r3, [pc, #32]	; (80004a4 <_sbrk+0x64>)
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000486:	4b07      	ldr	r3, [pc, #28]	; (80004a4 <_sbrk+0x64>)
 8000488:	681a      	ldr	r2, [r3, #0]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	4413      	add	r3, r2
 800048e:	4a05      	ldr	r2, [pc, #20]	; (80004a4 <_sbrk+0x64>)
 8000490:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000492:	68fb      	ldr	r3, [r7, #12]
}
 8000494:	4618      	mov	r0, r3
 8000496:	3718      	adds	r7, #24
 8000498:	46bd      	mov	sp, r7
 800049a:	bd80      	pop	{r7, pc}
 800049c:	20020000 	.word	0x20020000
 80004a0:	00000400 	.word	0x00000400
 80004a4:	20000080 	.word	0x20000080
 80004a8:	20000090 	.word	0x20000090

080004ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004ac:	480d      	ldr	r0, [pc, #52]	; (80004e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ae:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004b4:	480c      	ldr	r0, [pc, #48]	; (80004e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80004b6:	490d      	ldr	r1, [pc, #52]	; (80004ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80004b8:	4a0d      	ldr	r2, [pc, #52]	; (80004f0 <LoopForever+0xe>)
  movs r3, #0
 80004ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004bc:	e002      	b.n	80004c4 <LoopCopyDataInit>

080004be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004c2:	3304      	adds	r3, #4

080004c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004c8:	d3f9      	bcc.n	80004be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ca:	4a0a      	ldr	r2, [pc, #40]	; (80004f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004cc:	4c0a      	ldr	r4, [pc, #40]	; (80004f8 <LoopForever+0x16>)
  movs r3, #0
 80004ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004d0:	e001      	b.n	80004d6 <LoopFillZerobss>

080004d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004d4:	3204      	adds	r2, #4

080004d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004d8:	d3fb      	bcc.n	80004d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004da:	f000 f817 	bl	800050c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004de:	f7ff fee7 	bl	80002b0 <main>

080004e2 <LoopForever>:

LoopForever:
    b LoopForever
 80004e2:	e7fe      	b.n	80004e2 <LoopForever>
  ldr   r0, =_estack
 80004e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004ec:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004f0:	080014d8 	.word	0x080014d8
  ldr r2, =_sbss
 80004f4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004f8:	20000090 	.word	0x20000090

080004fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004fc:	e7fe      	b.n	80004fc <ADC_IRQHandler>
	...

08000500 <__errno>:
 8000500:	4b01      	ldr	r3, [pc, #4]	; (8000508 <__errno+0x8>)
 8000502:	6818      	ldr	r0, [r3, #0]
 8000504:	4770      	bx	lr
 8000506:	bf00      	nop
 8000508:	20000000 	.word	0x20000000

0800050c <__libc_init_array>:
 800050c:	b570      	push	{r4, r5, r6, lr}
 800050e:	4e0d      	ldr	r6, [pc, #52]	; (8000544 <__libc_init_array+0x38>)
 8000510:	4c0d      	ldr	r4, [pc, #52]	; (8000548 <__libc_init_array+0x3c>)
 8000512:	1ba4      	subs	r4, r4, r6
 8000514:	10a4      	asrs	r4, r4, #2
 8000516:	2500      	movs	r5, #0
 8000518:	42a5      	cmp	r5, r4
 800051a:	d109      	bne.n	8000530 <__libc_init_array+0x24>
 800051c:	4e0b      	ldr	r6, [pc, #44]	; (800054c <__libc_init_array+0x40>)
 800051e:	4c0c      	ldr	r4, [pc, #48]	; (8000550 <__libc_init_array+0x44>)
 8000520:	f000 ff66 	bl	80013f0 <_init>
 8000524:	1ba4      	subs	r4, r4, r6
 8000526:	10a4      	asrs	r4, r4, #2
 8000528:	2500      	movs	r5, #0
 800052a:	42a5      	cmp	r5, r4
 800052c:	d105      	bne.n	800053a <__libc_init_array+0x2e>
 800052e:	bd70      	pop	{r4, r5, r6, pc}
 8000530:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000534:	4798      	blx	r3
 8000536:	3501      	adds	r5, #1
 8000538:	e7ee      	b.n	8000518 <__libc_init_array+0xc>
 800053a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800053e:	4798      	blx	r3
 8000540:	3501      	adds	r5, #1
 8000542:	e7f2      	b.n	800052a <__libc_init_array+0x1e>
 8000544:	080014d0 	.word	0x080014d0
 8000548:	080014d0 	.word	0x080014d0
 800054c:	080014d0 	.word	0x080014d0
 8000550:	080014d4 	.word	0x080014d4

08000554 <memset>:
 8000554:	4402      	add	r2, r0
 8000556:	4603      	mov	r3, r0
 8000558:	4293      	cmp	r3, r2
 800055a:	d100      	bne.n	800055e <memset+0xa>
 800055c:	4770      	bx	lr
 800055e:	f803 1b01 	strb.w	r1, [r3], #1
 8000562:	e7f9      	b.n	8000558 <memset+0x4>

08000564 <iprintf>:
 8000564:	b40f      	push	{r0, r1, r2, r3}
 8000566:	4b0a      	ldr	r3, [pc, #40]	; (8000590 <iprintf+0x2c>)
 8000568:	b513      	push	{r0, r1, r4, lr}
 800056a:	681c      	ldr	r4, [r3, #0]
 800056c:	b124      	cbz	r4, 8000578 <iprintf+0x14>
 800056e:	69a3      	ldr	r3, [r4, #24]
 8000570:	b913      	cbnz	r3, 8000578 <iprintf+0x14>
 8000572:	4620      	mov	r0, r4
 8000574:	f000 fa22 	bl	80009bc <__sinit>
 8000578:	ab05      	add	r3, sp, #20
 800057a:	9a04      	ldr	r2, [sp, #16]
 800057c:	68a1      	ldr	r1, [r4, #8]
 800057e:	9301      	str	r3, [sp, #4]
 8000580:	4620      	mov	r0, r4
 8000582:	f000 fbd9 	bl	8000d38 <_vfiprintf_r>
 8000586:	b002      	add	sp, #8
 8000588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800058c:	b004      	add	sp, #16
 800058e:	4770      	bx	lr
 8000590:	20000000 	.word	0x20000000

08000594 <_puts_r>:
 8000594:	b570      	push	{r4, r5, r6, lr}
 8000596:	460e      	mov	r6, r1
 8000598:	4605      	mov	r5, r0
 800059a:	b118      	cbz	r0, 80005a4 <_puts_r+0x10>
 800059c:	6983      	ldr	r3, [r0, #24]
 800059e:	b90b      	cbnz	r3, 80005a4 <_puts_r+0x10>
 80005a0:	f000 fa0c 	bl	80009bc <__sinit>
 80005a4:	69ab      	ldr	r3, [r5, #24]
 80005a6:	68ac      	ldr	r4, [r5, #8]
 80005a8:	b913      	cbnz	r3, 80005b0 <_puts_r+0x1c>
 80005aa:	4628      	mov	r0, r5
 80005ac:	f000 fa06 	bl	80009bc <__sinit>
 80005b0:	4b23      	ldr	r3, [pc, #140]	; (8000640 <_puts_r+0xac>)
 80005b2:	429c      	cmp	r4, r3
 80005b4:	d117      	bne.n	80005e6 <_puts_r+0x52>
 80005b6:	686c      	ldr	r4, [r5, #4]
 80005b8:	89a3      	ldrh	r3, [r4, #12]
 80005ba:	071b      	lsls	r3, r3, #28
 80005bc:	d51d      	bpl.n	80005fa <_puts_r+0x66>
 80005be:	6923      	ldr	r3, [r4, #16]
 80005c0:	b1db      	cbz	r3, 80005fa <_puts_r+0x66>
 80005c2:	3e01      	subs	r6, #1
 80005c4:	68a3      	ldr	r3, [r4, #8]
 80005c6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80005ca:	3b01      	subs	r3, #1
 80005cc:	60a3      	str	r3, [r4, #8]
 80005ce:	b9e9      	cbnz	r1, 800060c <_puts_r+0x78>
 80005d0:	2b00      	cmp	r3, #0
 80005d2:	da2e      	bge.n	8000632 <_puts_r+0x9e>
 80005d4:	4622      	mov	r2, r4
 80005d6:	210a      	movs	r1, #10
 80005d8:	4628      	mov	r0, r5
 80005da:	f000 f83f 	bl	800065c <__swbuf_r>
 80005de:	3001      	adds	r0, #1
 80005e0:	d011      	beq.n	8000606 <_puts_r+0x72>
 80005e2:	200a      	movs	r0, #10
 80005e4:	e011      	b.n	800060a <_puts_r+0x76>
 80005e6:	4b17      	ldr	r3, [pc, #92]	; (8000644 <_puts_r+0xb0>)
 80005e8:	429c      	cmp	r4, r3
 80005ea:	d101      	bne.n	80005f0 <_puts_r+0x5c>
 80005ec:	68ac      	ldr	r4, [r5, #8]
 80005ee:	e7e3      	b.n	80005b8 <_puts_r+0x24>
 80005f0:	4b15      	ldr	r3, [pc, #84]	; (8000648 <_puts_r+0xb4>)
 80005f2:	429c      	cmp	r4, r3
 80005f4:	bf08      	it	eq
 80005f6:	68ec      	ldreq	r4, [r5, #12]
 80005f8:	e7de      	b.n	80005b8 <_puts_r+0x24>
 80005fa:	4621      	mov	r1, r4
 80005fc:	4628      	mov	r0, r5
 80005fe:	f000 f87f 	bl	8000700 <__swsetup_r>
 8000602:	2800      	cmp	r0, #0
 8000604:	d0dd      	beq.n	80005c2 <_puts_r+0x2e>
 8000606:	f04f 30ff 	mov.w	r0, #4294967295
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	2b00      	cmp	r3, #0
 800060e:	da04      	bge.n	800061a <_puts_r+0x86>
 8000610:	69a2      	ldr	r2, [r4, #24]
 8000612:	429a      	cmp	r2, r3
 8000614:	dc06      	bgt.n	8000624 <_puts_r+0x90>
 8000616:	290a      	cmp	r1, #10
 8000618:	d004      	beq.n	8000624 <_puts_r+0x90>
 800061a:	6823      	ldr	r3, [r4, #0]
 800061c:	1c5a      	adds	r2, r3, #1
 800061e:	6022      	str	r2, [r4, #0]
 8000620:	7019      	strb	r1, [r3, #0]
 8000622:	e7cf      	b.n	80005c4 <_puts_r+0x30>
 8000624:	4622      	mov	r2, r4
 8000626:	4628      	mov	r0, r5
 8000628:	f000 f818 	bl	800065c <__swbuf_r>
 800062c:	3001      	adds	r0, #1
 800062e:	d1c9      	bne.n	80005c4 <_puts_r+0x30>
 8000630:	e7e9      	b.n	8000606 <_puts_r+0x72>
 8000632:	6823      	ldr	r3, [r4, #0]
 8000634:	200a      	movs	r0, #10
 8000636:	1c5a      	adds	r2, r3, #1
 8000638:	6022      	str	r2, [r4, #0]
 800063a:	7018      	strb	r0, [r3, #0]
 800063c:	e7e5      	b.n	800060a <_puts_r+0x76>
 800063e:	bf00      	nop
 8000640:	0800145c 	.word	0x0800145c
 8000644:	0800147c 	.word	0x0800147c
 8000648:	0800143c 	.word	0x0800143c

0800064c <puts>:
 800064c:	4b02      	ldr	r3, [pc, #8]	; (8000658 <puts+0xc>)
 800064e:	4601      	mov	r1, r0
 8000650:	6818      	ldr	r0, [r3, #0]
 8000652:	f7ff bf9f 	b.w	8000594 <_puts_r>
 8000656:	bf00      	nop
 8000658:	20000000 	.word	0x20000000

0800065c <__swbuf_r>:
 800065c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800065e:	460e      	mov	r6, r1
 8000660:	4614      	mov	r4, r2
 8000662:	4605      	mov	r5, r0
 8000664:	b118      	cbz	r0, 800066e <__swbuf_r+0x12>
 8000666:	6983      	ldr	r3, [r0, #24]
 8000668:	b90b      	cbnz	r3, 800066e <__swbuf_r+0x12>
 800066a:	f000 f9a7 	bl	80009bc <__sinit>
 800066e:	4b21      	ldr	r3, [pc, #132]	; (80006f4 <__swbuf_r+0x98>)
 8000670:	429c      	cmp	r4, r3
 8000672:	d12a      	bne.n	80006ca <__swbuf_r+0x6e>
 8000674:	686c      	ldr	r4, [r5, #4]
 8000676:	69a3      	ldr	r3, [r4, #24]
 8000678:	60a3      	str	r3, [r4, #8]
 800067a:	89a3      	ldrh	r3, [r4, #12]
 800067c:	071a      	lsls	r2, r3, #28
 800067e:	d52e      	bpl.n	80006de <__swbuf_r+0x82>
 8000680:	6923      	ldr	r3, [r4, #16]
 8000682:	b363      	cbz	r3, 80006de <__swbuf_r+0x82>
 8000684:	6923      	ldr	r3, [r4, #16]
 8000686:	6820      	ldr	r0, [r4, #0]
 8000688:	1ac0      	subs	r0, r0, r3
 800068a:	6963      	ldr	r3, [r4, #20]
 800068c:	b2f6      	uxtb	r6, r6
 800068e:	4283      	cmp	r3, r0
 8000690:	4637      	mov	r7, r6
 8000692:	dc04      	bgt.n	800069e <__swbuf_r+0x42>
 8000694:	4621      	mov	r1, r4
 8000696:	4628      	mov	r0, r5
 8000698:	f000 f926 	bl	80008e8 <_fflush_r>
 800069c:	bb28      	cbnz	r0, 80006ea <__swbuf_r+0x8e>
 800069e:	68a3      	ldr	r3, [r4, #8]
 80006a0:	3b01      	subs	r3, #1
 80006a2:	60a3      	str	r3, [r4, #8]
 80006a4:	6823      	ldr	r3, [r4, #0]
 80006a6:	1c5a      	adds	r2, r3, #1
 80006a8:	6022      	str	r2, [r4, #0]
 80006aa:	701e      	strb	r6, [r3, #0]
 80006ac:	6963      	ldr	r3, [r4, #20]
 80006ae:	3001      	adds	r0, #1
 80006b0:	4283      	cmp	r3, r0
 80006b2:	d004      	beq.n	80006be <__swbuf_r+0x62>
 80006b4:	89a3      	ldrh	r3, [r4, #12]
 80006b6:	07db      	lsls	r3, r3, #31
 80006b8:	d519      	bpl.n	80006ee <__swbuf_r+0x92>
 80006ba:	2e0a      	cmp	r6, #10
 80006bc:	d117      	bne.n	80006ee <__swbuf_r+0x92>
 80006be:	4621      	mov	r1, r4
 80006c0:	4628      	mov	r0, r5
 80006c2:	f000 f911 	bl	80008e8 <_fflush_r>
 80006c6:	b190      	cbz	r0, 80006ee <__swbuf_r+0x92>
 80006c8:	e00f      	b.n	80006ea <__swbuf_r+0x8e>
 80006ca:	4b0b      	ldr	r3, [pc, #44]	; (80006f8 <__swbuf_r+0x9c>)
 80006cc:	429c      	cmp	r4, r3
 80006ce:	d101      	bne.n	80006d4 <__swbuf_r+0x78>
 80006d0:	68ac      	ldr	r4, [r5, #8]
 80006d2:	e7d0      	b.n	8000676 <__swbuf_r+0x1a>
 80006d4:	4b09      	ldr	r3, [pc, #36]	; (80006fc <__swbuf_r+0xa0>)
 80006d6:	429c      	cmp	r4, r3
 80006d8:	bf08      	it	eq
 80006da:	68ec      	ldreq	r4, [r5, #12]
 80006dc:	e7cb      	b.n	8000676 <__swbuf_r+0x1a>
 80006de:	4621      	mov	r1, r4
 80006e0:	4628      	mov	r0, r5
 80006e2:	f000 f80d 	bl	8000700 <__swsetup_r>
 80006e6:	2800      	cmp	r0, #0
 80006e8:	d0cc      	beq.n	8000684 <__swbuf_r+0x28>
 80006ea:	f04f 37ff 	mov.w	r7, #4294967295
 80006ee:	4638      	mov	r0, r7
 80006f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006f2:	bf00      	nop
 80006f4:	0800145c 	.word	0x0800145c
 80006f8:	0800147c 	.word	0x0800147c
 80006fc:	0800143c 	.word	0x0800143c

08000700 <__swsetup_r>:
 8000700:	4b32      	ldr	r3, [pc, #200]	; (80007cc <__swsetup_r+0xcc>)
 8000702:	b570      	push	{r4, r5, r6, lr}
 8000704:	681d      	ldr	r5, [r3, #0]
 8000706:	4606      	mov	r6, r0
 8000708:	460c      	mov	r4, r1
 800070a:	b125      	cbz	r5, 8000716 <__swsetup_r+0x16>
 800070c:	69ab      	ldr	r3, [r5, #24]
 800070e:	b913      	cbnz	r3, 8000716 <__swsetup_r+0x16>
 8000710:	4628      	mov	r0, r5
 8000712:	f000 f953 	bl	80009bc <__sinit>
 8000716:	4b2e      	ldr	r3, [pc, #184]	; (80007d0 <__swsetup_r+0xd0>)
 8000718:	429c      	cmp	r4, r3
 800071a:	d10f      	bne.n	800073c <__swsetup_r+0x3c>
 800071c:	686c      	ldr	r4, [r5, #4]
 800071e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000722:	b29a      	uxth	r2, r3
 8000724:	0715      	lsls	r5, r2, #28
 8000726:	d42c      	bmi.n	8000782 <__swsetup_r+0x82>
 8000728:	06d0      	lsls	r0, r2, #27
 800072a:	d411      	bmi.n	8000750 <__swsetup_r+0x50>
 800072c:	2209      	movs	r2, #9
 800072e:	6032      	str	r2, [r6, #0]
 8000730:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000734:	81a3      	strh	r3, [r4, #12]
 8000736:	f04f 30ff 	mov.w	r0, #4294967295
 800073a:	e03e      	b.n	80007ba <__swsetup_r+0xba>
 800073c:	4b25      	ldr	r3, [pc, #148]	; (80007d4 <__swsetup_r+0xd4>)
 800073e:	429c      	cmp	r4, r3
 8000740:	d101      	bne.n	8000746 <__swsetup_r+0x46>
 8000742:	68ac      	ldr	r4, [r5, #8]
 8000744:	e7eb      	b.n	800071e <__swsetup_r+0x1e>
 8000746:	4b24      	ldr	r3, [pc, #144]	; (80007d8 <__swsetup_r+0xd8>)
 8000748:	429c      	cmp	r4, r3
 800074a:	bf08      	it	eq
 800074c:	68ec      	ldreq	r4, [r5, #12]
 800074e:	e7e6      	b.n	800071e <__swsetup_r+0x1e>
 8000750:	0751      	lsls	r1, r2, #29
 8000752:	d512      	bpl.n	800077a <__swsetup_r+0x7a>
 8000754:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000756:	b141      	cbz	r1, 800076a <__swsetup_r+0x6a>
 8000758:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800075c:	4299      	cmp	r1, r3
 800075e:	d002      	beq.n	8000766 <__swsetup_r+0x66>
 8000760:	4630      	mov	r0, r6
 8000762:	f000 fa19 	bl	8000b98 <_free_r>
 8000766:	2300      	movs	r3, #0
 8000768:	6363      	str	r3, [r4, #52]	; 0x34
 800076a:	89a3      	ldrh	r3, [r4, #12]
 800076c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000770:	81a3      	strh	r3, [r4, #12]
 8000772:	2300      	movs	r3, #0
 8000774:	6063      	str	r3, [r4, #4]
 8000776:	6923      	ldr	r3, [r4, #16]
 8000778:	6023      	str	r3, [r4, #0]
 800077a:	89a3      	ldrh	r3, [r4, #12]
 800077c:	f043 0308 	orr.w	r3, r3, #8
 8000780:	81a3      	strh	r3, [r4, #12]
 8000782:	6923      	ldr	r3, [r4, #16]
 8000784:	b94b      	cbnz	r3, 800079a <__swsetup_r+0x9a>
 8000786:	89a3      	ldrh	r3, [r4, #12]
 8000788:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800078c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000790:	d003      	beq.n	800079a <__swsetup_r+0x9a>
 8000792:	4621      	mov	r1, r4
 8000794:	4630      	mov	r0, r6
 8000796:	f000 f9bf 	bl	8000b18 <__smakebuf_r>
 800079a:	89a2      	ldrh	r2, [r4, #12]
 800079c:	f012 0301 	ands.w	r3, r2, #1
 80007a0:	d00c      	beq.n	80007bc <__swsetup_r+0xbc>
 80007a2:	2300      	movs	r3, #0
 80007a4:	60a3      	str	r3, [r4, #8]
 80007a6:	6963      	ldr	r3, [r4, #20]
 80007a8:	425b      	negs	r3, r3
 80007aa:	61a3      	str	r3, [r4, #24]
 80007ac:	6923      	ldr	r3, [r4, #16]
 80007ae:	b953      	cbnz	r3, 80007c6 <__swsetup_r+0xc6>
 80007b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007b4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80007b8:	d1ba      	bne.n	8000730 <__swsetup_r+0x30>
 80007ba:	bd70      	pop	{r4, r5, r6, pc}
 80007bc:	0792      	lsls	r2, r2, #30
 80007be:	bf58      	it	pl
 80007c0:	6963      	ldrpl	r3, [r4, #20]
 80007c2:	60a3      	str	r3, [r4, #8]
 80007c4:	e7f2      	b.n	80007ac <__swsetup_r+0xac>
 80007c6:	2000      	movs	r0, #0
 80007c8:	e7f7      	b.n	80007ba <__swsetup_r+0xba>
 80007ca:	bf00      	nop
 80007cc:	20000000 	.word	0x20000000
 80007d0:	0800145c 	.word	0x0800145c
 80007d4:	0800147c 	.word	0x0800147c
 80007d8:	0800143c 	.word	0x0800143c

080007dc <__sflush_r>:
 80007dc:	898a      	ldrh	r2, [r1, #12]
 80007de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007e2:	4605      	mov	r5, r0
 80007e4:	0710      	lsls	r0, r2, #28
 80007e6:	460c      	mov	r4, r1
 80007e8:	d458      	bmi.n	800089c <__sflush_r+0xc0>
 80007ea:	684b      	ldr	r3, [r1, #4]
 80007ec:	2b00      	cmp	r3, #0
 80007ee:	dc05      	bgt.n	80007fc <__sflush_r+0x20>
 80007f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80007f2:	2b00      	cmp	r3, #0
 80007f4:	dc02      	bgt.n	80007fc <__sflush_r+0x20>
 80007f6:	2000      	movs	r0, #0
 80007f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007fe:	2e00      	cmp	r6, #0
 8000800:	d0f9      	beq.n	80007f6 <__sflush_r+0x1a>
 8000802:	2300      	movs	r3, #0
 8000804:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000808:	682f      	ldr	r7, [r5, #0]
 800080a:	6a21      	ldr	r1, [r4, #32]
 800080c:	602b      	str	r3, [r5, #0]
 800080e:	d032      	beq.n	8000876 <__sflush_r+0x9a>
 8000810:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000812:	89a3      	ldrh	r3, [r4, #12]
 8000814:	075a      	lsls	r2, r3, #29
 8000816:	d505      	bpl.n	8000824 <__sflush_r+0x48>
 8000818:	6863      	ldr	r3, [r4, #4]
 800081a:	1ac0      	subs	r0, r0, r3
 800081c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800081e:	b10b      	cbz	r3, 8000824 <__sflush_r+0x48>
 8000820:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000822:	1ac0      	subs	r0, r0, r3
 8000824:	2300      	movs	r3, #0
 8000826:	4602      	mov	r2, r0
 8000828:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800082a:	6a21      	ldr	r1, [r4, #32]
 800082c:	4628      	mov	r0, r5
 800082e:	47b0      	blx	r6
 8000830:	1c43      	adds	r3, r0, #1
 8000832:	89a3      	ldrh	r3, [r4, #12]
 8000834:	d106      	bne.n	8000844 <__sflush_r+0x68>
 8000836:	6829      	ldr	r1, [r5, #0]
 8000838:	291d      	cmp	r1, #29
 800083a:	d848      	bhi.n	80008ce <__sflush_r+0xf2>
 800083c:	4a29      	ldr	r2, [pc, #164]	; (80008e4 <__sflush_r+0x108>)
 800083e:	40ca      	lsrs	r2, r1
 8000840:	07d6      	lsls	r6, r2, #31
 8000842:	d544      	bpl.n	80008ce <__sflush_r+0xf2>
 8000844:	2200      	movs	r2, #0
 8000846:	6062      	str	r2, [r4, #4]
 8000848:	04d9      	lsls	r1, r3, #19
 800084a:	6922      	ldr	r2, [r4, #16]
 800084c:	6022      	str	r2, [r4, #0]
 800084e:	d504      	bpl.n	800085a <__sflush_r+0x7e>
 8000850:	1c42      	adds	r2, r0, #1
 8000852:	d101      	bne.n	8000858 <__sflush_r+0x7c>
 8000854:	682b      	ldr	r3, [r5, #0]
 8000856:	b903      	cbnz	r3, 800085a <__sflush_r+0x7e>
 8000858:	6560      	str	r0, [r4, #84]	; 0x54
 800085a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800085c:	602f      	str	r7, [r5, #0]
 800085e:	2900      	cmp	r1, #0
 8000860:	d0c9      	beq.n	80007f6 <__sflush_r+0x1a>
 8000862:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000866:	4299      	cmp	r1, r3
 8000868:	d002      	beq.n	8000870 <__sflush_r+0x94>
 800086a:	4628      	mov	r0, r5
 800086c:	f000 f994 	bl	8000b98 <_free_r>
 8000870:	2000      	movs	r0, #0
 8000872:	6360      	str	r0, [r4, #52]	; 0x34
 8000874:	e7c0      	b.n	80007f8 <__sflush_r+0x1c>
 8000876:	2301      	movs	r3, #1
 8000878:	4628      	mov	r0, r5
 800087a:	47b0      	blx	r6
 800087c:	1c41      	adds	r1, r0, #1
 800087e:	d1c8      	bne.n	8000812 <__sflush_r+0x36>
 8000880:	682b      	ldr	r3, [r5, #0]
 8000882:	2b00      	cmp	r3, #0
 8000884:	d0c5      	beq.n	8000812 <__sflush_r+0x36>
 8000886:	2b1d      	cmp	r3, #29
 8000888:	d001      	beq.n	800088e <__sflush_r+0xb2>
 800088a:	2b16      	cmp	r3, #22
 800088c:	d101      	bne.n	8000892 <__sflush_r+0xb6>
 800088e:	602f      	str	r7, [r5, #0]
 8000890:	e7b1      	b.n	80007f6 <__sflush_r+0x1a>
 8000892:	89a3      	ldrh	r3, [r4, #12]
 8000894:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000898:	81a3      	strh	r3, [r4, #12]
 800089a:	e7ad      	b.n	80007f8 <__sflush_r+0x1c>
 800089c:	690f      	ldr	r7, [r1, #16]
 800089e:	2f00      	cmp	r7, #0
 80008a0:	d0a9      	beq.n	80007f6 <__sflush_r+0x1a>
 80008a2:	0793      	lsls	r3, r2, #30
 80008a4:	680e      	ldr	r6, [r1, #0]
 80008a6:	bf08      	it	eq
 80008a8:	694b      	ldreq	r3, [r1, #20]
 80008aa:	600f      	str	r7, [r1, #0]
 80008ac:	bf18      	it	ne
 80008ae:	2300      	movne	r3, #0
 80008b0:	eba6 0807 	sub.w	r8, r6, r7
 80008b4:	608b      	str	r3, [r1, #8]
 80008b6:	f1b8 0f00 	cmp.w	r8, #0
 80008ba:	dd9c      	ble.n	80007f6 <__sflush_r+0x1a>
 80008bc:	4643      	mov	r3, r8
 80008be:	463a      	mov	r2, r7
 80008c0:	6a21      	ldr	r1, [r4, #32]
 80008c2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80008c4:	4628      	mov	r0, r5
 80008c6:	47b0      	blx	r6
 80008c8:	2800      	cmp	r0, #0
 80008ca:	dc06      	bgt.n	80008da <__sflush_r+0xfe>
 80008cc:	89a3      	ldrh	r3, [r4, #12]
 80008ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008d2:	81a3      	strh	r3, [r4, #12]
 80008d4:	f04f 30ff 	mov.w	r0, #4294967295
 80008d8:	e78e      	b.n	80007f8 <__sflush_r+0x1c>
 80008da:	4407      	add	r7, r0
 80008dc:	eba8 0800 	sub.w	r8, r8, r0
 80008e0:	e7e9      	b.n	80008b6 <__sflush_r+0xda>
 80008e2:	bf00      	nop
 80008e4:	20400001 	.word	0x20400001

080008e8 <_fflush_r>:
 80008e8:	b538      	push	{r3, r4, r5, lr}
 80008ea:	690b      	ldr	r3, [r1, #16]
 80008ec:	4605      	mov	r5, r0
 80008ee:	460c      	mov	r4, r1
 80008f0:	b1db      	cbz	r3, 800092a <_fflush_r+0x42>
 80008f2:	b118      	cbz	r0, 80008fc <_fflush_r+0x14>
 80008f4:	6983      	ldr	r3, [r0, #24]
 80008f6:	b90b      	cbnz	r3, 80008fc <_fflush_r+0x14>
 80008f8:	f000 f860 	bl	80009bc <__sinit>
 80008fc:	4b0c      	ldr	r3, [pc, #48]	; (8000930 <_fflush_r+0x48>)
 80008fe:	429c      	cmp	r4, r3
 8000900:	d109      	bne.n	8000916 <_fflush_r+0x2e>
 8000902:	686c      	ldr	r4, [r5, #4]
 8000904:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000908:	b17b      	cbz	r3, 800092a <_fflush_r+0x42>
 800090a:	4621      	mov	r1, r4
 800090c:	4628      	mov	r0, r5
 800090e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000912:	f7ff bf63 	b.w	80007dc <__sflush_r>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_fflush_r+0x4c>)
 8000918:	429c      	cmp	r4, r3
 800091a:	d101      	bne.n	8000920 <_fflush_r+0x38>
 800091c:	68ac      	ldr	r4, [r5, #8]
 800091e:	e7f1      	b.n	8000904 <_fflush_r+0x1c>
 8000920:	4b05      	ldr	r3, [pc, #20]	; (8000938 <_fflush_r+0x50>)
 8000922:	429c      	cmp	r4, r3
 8000924:	bf08      	it	eq
 8000926:	68ec      	ldreq	r4, [r5, #12]
 8000928:	e7ec      	b.n	8000904 <_fflush_r+0x1c>
 800092a:	2000      	movs	r0, #0
 800092c:	bd38      	pop	{r3, r4, r5, pc}
 800092e:	bf00      	nop
 8000930:	0800145c 	.word	0x0800145c
 8000934:	0800147c 	.word	0x0800147c
 8000938:	0800143c 	.word	0x0800143c

0800093c <std>:
 800093c:	2300      	movs	r3, #0
 800093e:	b510      	push	{r4, lr}
 8000940:	4604      	mov	r4, r0
 8000942:	e9c0 3300 	strd	r3, r3, [r0]
 8000946:	6083      	str	r3, [r0, #8]
 8000948:	8181      	strh	r1, [r0, #12]
 800094a:	6643      	str	r3, [r0, #100]	; 0x64
 800094c:	81c2      	strh	r2, [r0, #14]
 800094e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000952:	6183      	str	r3, [r0, #24]
 8000954:	4619      	mov	r1, r3
 8000956:	2208      	movs	r2, #8
 8000958:	305c      	adds	r0, #92	; 0x5c
 800095a:	f7ff fdfb 	bl	8000554 <memset>
 800095e:	4b05      	ldr	r3, [pc, #20]	; (8000974 <std+0x38>)
 8000960:	6263      	str	r3, [r4, #36]	; 0x24
 8000962:	4b05      	ldr	r3, [pc, #20]	; (8000978 <std+0x3c>)
 8000964:	62a3      	str	r3, [r4, #40]	; 0x28
 8000966:	4b05      	ldr	r3, [pc, #20]	; (800097c <std+0x40>)
 8000968:	62e3      	str	r3, [r4, #44]	; 0x2c
 800096a:	4b05      	ldr	r3, [pc, #20]	; (8000980 <std+0x44>)
 800096c:	6224      	str	r4, [r4, #32]
 800096e:	6323      	str	r3, [r4, #48]	; 0x30
 8000970:	bd10      	pop	{r4, pc}
 8000972:	bf00      	nop
 8000974:	08001295 	.word	0x08001295
 8000978:	080012b7 	.word	0x080012b7
 800097c:	080012ef 	.word	0x080012ef
 8000980:	08001313 	.word	0x08001313

08000984 <_cleanup_r>:
 8000984:	4901      	ldr	r1, [pc, #4]	; (800098c <_cleanup_r+0x8>)
 8000986:	f000 b885 	b.w	8000a94 <_fwalk_reent>
 800098a:	bf00      	nop
 800098c:	080008e9 	.word	0x080008e9

08000990 <__sfmoreglue>:
 8000990:	b570      	push	{r4, r5, r6, lr}
 8000992:	1e4a      	subs	r2, r1, #1
 8000994:	2568      	movs	r5, #104	; 0x68
 8000996:	4355      	muls	r5, r2
 8000998:	460e      	mov	r6, r1
 800099a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800099e:	f000 f949 	bl	8000c34 <_malloc_r>
 80009a2:	4604      	mov	r4, r0
 80009a4:	b140      	cbz	r0, 80009b8 <__sfmoreglue+0x28>
 80009a6:	2100      	movs	r1, #0
 80009a8:	e9c0 1600 	strd	r1, r6, [r0]
 80009ac:	300c      	adds	r0, #12
 80009ae:	60a0      	str	r0, [r4, #8]
 80009b0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80009b4:	f7ff fdce 	bl	8000554 <memset>
 80009b8:	4620      	mov	r0, r4
 80009ba:	bd70      	pop	{r4, r5, r6, pc}

080009bc <__sinit>:
 80009bc:	6983      	ldr	r3, [r0, #24]
 80009be:	b510      	push	{r4, lr}
 80009c0:	4604      	mov	r4, r0
 80009c2:	bb33      	cbnz	r3, 8000a12 <__sinit+0x56>
 80009c4:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80009c8:	6503      	str	r3, [r0, #80]	; 0x50
 80009ca:	4b12      	ldr	r3, [pc, #72]	; (8000a14 <__sinit+0x58>)
 80009cc:	4a12      	ldr	r2, [pc, #72]	; (8000a18 <__sinit+0x5c>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	6282      	str	r2, [r0, #40]	; 0x28
 80009d2:	4298      	cmp	r0, r3
 80009d4:	bf04      	itt	eq
 80009d6:	2301      	moveq	r3, #1
 80009d8:	6183      	streq	r3, [r0, #24]
 80009da:	f000 f81f 	bl	8000a1c <__sfp>
 80009de:	6060      	str	r0, [r4, #4]
 80009e0:	4620      	mov	r0, r4
 80009e2:	f000 f81b 	bl	8000a1c <__sfp>
 80009e6:	60a0      	str	r0, [r4, #8]
 80009e8:	4620      	mov	r0, r4
 80009ea:	f000 f817 	bl	8000a1c <__sfp>
 80009ee:	2200      	movs	r2, #0
 80009f0:	60e0      	str	r0, [r4, #12]
 80009f2:	2104      	movs	r1, #4
 80009f4:	6860      	ldr	r0, [r4, #4]
 80009f6:	f7ff ffa1 	bl	800093c <std>
 80009fa:	2201      	movs	r2, #1
 80009fc:	2109      	movs	r1, #9
 80009fe:	68a0      	ldr	r0, [r4, #8]
 8000a00:	f7ff ff9c 	bl	800093c <std>
 8000a04:	2202      	movs	r2, #2
 8000a06:	2112      	movs	r1, #18
 8000a08:	68e0      	ldr	r0, [r4, #12]
 8000a0a:	f7ff ff97 	bl	800093c <std>
 8000a0e:	2301      	movs	r3, #1
 8000a10:	61a3      	str	r3, [r4, #24]
 8000a12:	bd10      	pop	{r4, pc}
 8000a14:	08001438 	.word	0x08001438
 8000a18:	08000985 	.word	0x08000985

08000a1c <__sfp>:
 8000a1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a1e:	4b1b      	ldr	r3, [pc, #108]	; (8000a8c <__sfp+0x70>)
 8000a20:	681e      	ldr	r6, [r3, #0]
 8000a22:	69b3      	ldr	r3, [r6, #24]
 8000a24:	4607      	mov	r7, r0
 8000a26:	b913      	cbnz	r3, 8000a2e <__sfp+0x12>
 8000a28:	4630      	mov	r0, r6
 8000a2a:	f7ff ffc7 	bl	80009bc <__sinit>
 8000a2e:	3648      	adds	r6, #72	; 0x48
 8000a30:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a34:	3b01      	subs	r3, #1
 8000a36:	d503      	bpl.n	8000a40 <__sfp+0x24>
 8000a38:	6833      	ldr	r3, [r6, #0]
 8000a3a:	b133      	cbz	r3, 8000a4a <__sfp+0x2e>
 8000a3c:	6836      	ldr	r6, [r6, #0]
 8000a3e:	e7f7      	b.n	8000a30 <__sfp+0x14>
 8000a40:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a44:	b16d      	cbz	r5, 8000a62 <__sfp+0x46>
 8000a46:	3468      	adds	r4, #104	; 0x68
 8000a48:	e7f4      	b.n	8000a34 <__sfp+0x18>
 8000a4a:	2104      	movs	r1, #4
 8000a4c:	4638      	mov	r0, r7
 8000a4e:	f7ff ff9f 	bl	8000990 <__sfmoreglue>
 8000a52:	6030      	str	r0, [r6, #0]
 8000a54:	2800      	cmp	r0, #0
 8000a56:	d1f1      	bne.n	8000a3c <__sfp+0x20>
 8000a58:	230c      	movs	r3, #12
 8000a5a:	603b      	str	r3, [r7, #0]
 8000a5c:	4604      	mov	r4, r0
 8000a5e:	4620      	mov	r0, r4
 8000a60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a62:	4b0b      	ldr	r3, [pc, #44]	; (8000a90 <__sfp+0x74>)
 8000a64:	6665      	str	r5, [r4, #100]	; 0x64
 8000a66:	e9c4 5500 	strd	r5, r5, [r4]
 8000a6a:	60a5      	str	r5, [r4, #8]
 8000a6c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000a70:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000a74:	2208      	movs	r2, #8
 8000a76:	4629      	mov	r1, r5
 8000a78:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a7c:	f7ff fd6a 	bl	8000554 <memset>
 8000a80:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a84:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a88:	e7e9      	b.n	8000a5e <__sfp+0x42>
 8000a8a:	bf00      	nop
 8000a8c:	08001438 	.word	0x08001438
 8000a90:	ffff0001 	.word	0xffff0001

08000a94 <_fwalk_reent>:
 8000a94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a98:	4680      	mov	r8, r0
 8000a9a:	4689      	mov	r9, r1
 8000a9c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000aa0:	2600      	movs	r6, #0
 8000aa2:	b914      	cbnz	r4, 8000aaa <_fwalk_reent+0x16>
 8000aa4:	4630      	mov	r0, r6
 8000aa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aaa:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000aae:	3f01      	subs	r7, #1
 8000ab0:	d501      	bpl.n	8000ab6 <_fwalk_reent+0x22>
 8000ab2:	6824      	ldr	r4, [r4, #0]
 8000ab4:	e7f5      	b.n	8000aa2 <_fwalk_reent+0xe>
 8000ab6:	89ab      	ldrh	r3, [r5, #12]
 8000ab8:	2b01      	cmp	r3, #1
 8000aba:	d907      	bls.n	8000acc <_fwalk_reent+0x38>
 8000abc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000ac0:	3301      	adds	r3, #1
 8000ac2:	d003      	beq.n	8000acc <_fwalk_reent+0x38>
 8000ac4:	4629      	mov	r1, r5
 8000ac6:	4640      	mov	r0, r8
 8000ac8:	47c8      	blx	r9
 8000aca:	4306      	orrs	r6, r0
 8000acc:	3568      	adds	r5, #104	; 0x68
 8000ace:	e7ee      	b.n	8000aae <_fwalk_reent+0x1a>

08000ad0 <__swhatbuf_r>:
 8000ad0:	b570      	push	{r4, r5, r6, lr}
 8000ad2:	460e      	mov	r6, r1
 8000ad4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ad8:	2900      	cmp	r1, #0
 8000ada:	b096      	sub	sp, #88	; 0x58
 8000adc:	4614      	mov	r4, r2
 8000ade:	461d      	mov	r5, r3
 8000ae0:	da07      	bge.n	8000af2 <__swhatbuf_r+0x22>
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	602b      	str	r3, [r5, #0]
 8000ae6:	89b3      	ldrh	r3, [r6, #12]
 8000ae8:	061a      	lsls	r2, r3, #24
 8000aea:	d410      	bmi.n	8000b0e <__swhatbuf_r+0x3e>
 8000aec:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000af0:	e00e      	b.n	8000b10 <__swhatbuf_r+0x40>
 8000af2:	466a      	mov	r2, sp
 8000af4:	f000 fc34 	bl	8001360 <_fstat_r>
 8000af8:	2800      	cmp	r0, #0
 8000afa:	dbf2      	blt.n	8000ae2 <__swhatbuf_r+0x12>
 8000afc:	9a01      	ldr	r2, [sp, #4]
 8000afe:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b02:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b06:	425a      	negs	r2, r3
 8000b08:	415a      	adcs	r2, r3
 8000b0a:	602a      	str	r2, [r5, #0]
 8000b0c:	e7ee      	b.n	8000aec <__swhatbuf_r+0x1c>
 8000b0e:	2340      	movs	r3, #64	; 0x40
 8000b10:	2000      	movs	r0, #0
 8000b12:	6023      	str	r3, [r4, #0]
 8000b14:	b016      	add	sp, #88	; 0x58
 8000b16:	bd70      	pop	{r4, r5, r6, pc}

08000b18 <__smakebuf_r>:
 8000b18:	898b      	ldrh	r3, [r1, #12]
 8000b1a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b1c:	079d      	lsls	r5, r3, #30
 8000b1e:	4606      	mov	r6, r0
 8000b20:	460c      	mov	r4, r1
 8000b22:	d507      	bpl.n	8000b34 <__smakebuf_r+0x1c>
 8000b24:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b28:	6023      	str	r3, [r4, #0]
 8000b2a:	6123      	str	r3, [r4, #16]
 8000b2c:	2301      	movs	r3, #1
 8000b2e:	6163      	str	r3, [r4, #20]
 8000b30:	b002      	add	sp, #8
 8000b32:	bd70      	pop	{r4, r5, r6, pc}
 8000b34:	ab01      	add	r3, sp, #4
 8000b36:	466a      	mov	r2, sp
 8000b38:	f7ff ffca 	bl	8000ad0 <__swhatbuf_r>
 8000b3c:	9900      	ldr	r1, [sp, #0]
 8000b3e:	4605      	mov	r5, r0
 8000b40:	4630      	mov	r0, r6
 8000b42:	f000 f877 	bl	8000c34 <_malloc_r>
 8000b46:	b948      	cbnz	r0, 8000b5c <__smakebuf_r+0x44>
 8000b48:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b4c:	059a      	lsls	r2, r3, #22
 8000b4e:	d4ef      	bmi.n	8000b30 <__smakebuf_r+0x18>
 8000b50:	f023 0303 	bic.w	r3, r3, #3
 8000b54:	f043 0302 	orr.w	r3, r3, #2
 8000b58:	81a3      	strh	r3, [r4, #12]
 8000b5a:	e7e3      	b.n	8000b24 <__smakebuf_r+0xc>
 8000b5c:	4b0d      	ldr	r3, [pc, #52]	; (8000b94 <__smakebuf_r+0x7c>)
 8000b5e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b60:	89a3      	ldrh	r3, [r4, #12]
 8000b62:	6020      	str	r0, [r4, #0]
 8000b64:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b68:	81a3      	strh	r3, [r4, #12]
 8000b6a:	9b00      	ldr	r3, [sp, #0]
 8000b6c:	6163      	str	r3, [r4, #20]
 8000b6e:	9b01      	ldr	r3, [sp, #4]
 8000b70:	6120      	str	r0, [r4, #16]
 8000b72:	b15b      	cbz	r3, 8000b8c <__smakebuf_r+0x74>
 8000b74:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b78:	4630      	mov	r0, r6
 8000b7a:	f000 fc03 	bl	8001384 <_isatty_r>
 8000b7e:	b128      	cbz	r0, 8000b8c <__smakebuf_r+0x74>
 8000b80:	89a3      	ldrh	r3, [r4, #12]
 8000b82:	f023 0303 	bic.w	r3, r3, #3
 8000b86:	f043 0301 	orr.w	r3, r3, #1
 8000b8a:	81a3      	strh	r3, [r4, #12]
 8000b8c:	89a3      	ldrh	r3, [r4, #12]
 8000b8e:	431d      	orrs	r5, r3
 8000b90:	81a5      	strh	r5, [r4, #12]
 8000b92:	e7cd      	b.n	8000b30 <__smakebuf_r+0x18>
 8000b94:	08000985 	.word	0x08000985

08000b98 <_free_r>:
 8000b98:	b538      	push	{r3, r4, r5, lr}
 8000b9a:	4605      	mov	r5, r0
 8000b9c:	2900      	cmp	r1, #0
 8000b9e:	d045      	beq.n	8000c2c <_free_r+0x94>
 8000ba0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ba4:	1f0c      	subs	r4, r1, #4
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	bfb8      	it	lt
 8000baa:	18e4      	addlt	r4, r4, r3
 8000bac:	f000 fc0c 	bl	80013c8 <__malloc_lock>
 8000bb0:	4a1f      	ldr	r2, [pc, #124]	; (8000c30 <_free_r+0x98>)
 8000bb2:	6813      	ldr	r3, [r2, #0]
 8000bb4:	4610      	mov	r0, r2
 8000bb6:	b933      	cbnz	r3, 8000bc6 <_free_r+0x2e>
 8000bb8:	6063      	str	r3, [r4, #4]
 8000bba:	6014      	str	r4, [r2, #0]
 8000bbc:	4628      	mov	r0, r5
 8000bbe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bc2:	f000 bc02 	b.w	80013ca <__malloc_unlock>
 8000bc6:	42a3      	cmp	r3, r4
 8000bc8:	d90c      	bls.n	8000be4 <_free_r+0x4c>
 8000bca:	6821      	ldr	r1, [r4, #0]
 8000bcc:	1862      	adds	r2, r4, r1
 8000bce:	4293      	cmp	r3, r2
 8000bd0:	bf04      	itt	eq
 8000bd2:	681a      	ldreq	r2, [r3, #0]
 8000bd4:	685b      	ldreq	r3, [r3, #4]
 8000bd6:	6063      	str	r3, [r4, #4]
 8000bd8:	bf04      	itt	eq
 8000bda:	1852      	addeq	r2, r2, r1
 8000bdc:	6022      	streq	r2, [r4, #0]
 8000bde:	6004      	str	r4, [r0, #0]
 8000be0:	e7ec      	b.n	8000bbc <_free_r+0x24>
 8000be2:	4613      	mov	r3, r2
 8000be4:	685a      	ldr	r2, [r3, #4]
 8000be6:	b10a      	cbz	r2, 8000bec <_free_r+0x54>
 8000be8:	42a2      	cmp	r2, r4
 8000bea:	d9fa      	bls.n	8000be2 <_free_r+0x4a>
 8000bec:	6819      	ldr	r1, [r3, #0]
 8000bee:	1858      	adds	r0, r3, r1
 8000bf0:	42a0      	cmp	r0, r4
 8000bf2:	d10b      	bne.n	8000c0c <_free_r+0x74>
 8000bf4:	6820      	ldr	r0, [r4, #0]
 8000bf6:	4401      	add	r1, r0
 8000bf8:	1858      	adds	r0, r3, r1
 8000bfa:	4282      	cmp	r2, r0
 8000bfc:	6019      	str	r1, [r3, #0]
 8000bfe:	d1dd      	bne.n	8000bbc <_free_r+0x24>
 8000c00:	6810      	ldr	r0, [r2, #0]
 8000c02:	6852      	ldr	r2, [r2, #4]
 8000c04:	605a      	str	r2, [r3, #4]
 8000c06:	4401      	add	r1, r0
 8000c08:	6019      	str	r1, [r3, #0]
 8000c0a:	e7d7      	b.n	8000bbc <_free_r+0x24>
 8000c0c:	d902      	bls.n	8000c14 <_free_r+0x7c>
 8000c0e:	230c      	movs	r3, #12
 8000c10:	602b      	str	r3, [r5, #0]
 8000c12:	e7d3      	b.n	8000bbc <_free_r+0x24>
 8000c14:	6820      	ldr	r0, [r4, #0]
 8000c16:	1821      	adds	r1, r4, r0
 8000c18:	428a      	cmp	r2, r1
 8000c1a:	bf04      	itt	eq
 8000c1c:	6811      	ldreq	r1, [r2, #0]
 8000c1e:	6852      	ldreq	r2, [r2, #4]
 8000c20:	6062      	str	r2, [r4, #4]
 8000c22:	bf04      	itt	eq
 8000c24:	1809      	addeq	r1, r1, r0
 8000c26:	6021      	streq	r1, [r4, #0]
 8000c28:	605c      	str	r4, [r3, #4]
 8000c2a:	e7c7      	b.n	8000bbc <_free_r+0x24>
 8000c2c:	bd38      	pop	{r3, r4, r5, pc}
 8000c2e:	bf00      	nop
 8000c30:	20000084 	.word	0x20000084

08000c34 <_malloc_r>:
 8000c34:	b570      	push	{r4, r5, r6, lr}
 8000c36:	1ccd      	adds	r5, r1, #3
 8000c38:	f025 0503 	bic.w	r5, r5, #3
 8000c3c:	3508      	adds	r5, #8
 8000c3e:	2d0c      	cmp	r5, #12
 8000c40:	bf38      	it	cc
 8000c42:	250c      	movcc	r5, #12
 8000c44:	2d00      	cmp	r5, #0
 8000c46:	4606      	mov	r6, r0
 8000c48:	db01      	blt.n	8000c4e <_malloc_r+0x1a>
 8000c4a:	42a9      	cmp	r1, r5
 8000c4c:	d903      	bls.n	8000c56 <_malloc_r+0x22>
 8000c4e:	230c      	movs	r3, #12
 8000c50:	6033      	str	r3, [r6, #0]
 8000c52:	2000      	movs	r0, #0
 8000c54:	bd70      	pop	{r4, r5, r6, pc}
 8000c56:	f000 fbb7 	bl	80013c8 <__malloc_lock>
 8000c5a:	4a21      	ldr	r2, [pc, #132]	; (8000ce0 <_malloc_r+0xac>)
 8000c5c:	6814      	ldr	r4, [r2, #0]
 8000c5e:	4621      	mov	r1, r4
 8000c60:	b991      	cbnz	r1, 8000c88 <_malloc_r+0x54>
 8000c62:	4c20      	ldr	r4, [pc, #128]	; (8000ce4 <_malloc_r+0xb0>)
 8000c64:	6823      	ldr	r3, [r4, #0]
 8000c66:	b91b      	cbnz	r3, 8000c70 <_malloc_r+0x3c>
 8000c68:	4630      	mov	r0, r6
 8000c6a:	f000 fb03 	bl	8001274 <_sbrk_r>
 8000c6e:	6020      	str	r0, [r4, #0]
 8000c70:	4629      	mov	r1, r5
 8000c72:	4630      	mov	r0, r6
 8000c74:	f000 fafe 	bl	8001274 <_sbrk_r>
 8000c78:	1c43      	adds	r3, r0, #1
 8000c7a:	d124      	bne.n	8000cc6 <_malloc_r+0x92>
 8000c7c:	230c      	movs	r3, #12
 8000c7e:	6033      	str	r3, [r6, #0]
 8000c80:	4630      	mov	r0, r6
 8000c82:	f000 fba2 	bl	80013ca <__malloc_unlock>
 8000c86:	e7e4      	b.n	8000c52 <_malloc_r+0x1e>
 8000c88:	680b      	ldr	r3, [r1, #0]
 8000c8a:	1b5b      	subs	r3, r3, r5
 8000c8c:	d418      	bmi.n	8000cc0 <_malloc_r+0x8c>
 8000c8e:	2b0b      	cmp	r3, #11
 8000c90:	d90f      	bls.n	8000cb2 <_malloc_r+0x7e>
 8000c92:	600b      	str	r3, [r1, #0]
 8000c94:	50cd      	str	r5, [r1, r3]
 8000c96:	18cc      	adds	r4, r1, r3
 8000c98:	4630      	mov	r0, r6
 8000c9a:	f000 fb96 	bl	80013ca <__malloc_unlock>
 8000c9e:	f104 000b 	add.w	r0, r4, #11
 8000ca2:	1d23      	adds	r3, r4, #4
 8000ca4:	f020 0007 	bic.w	r0, r0, #7
 8000ca8:	1ac3      	subs	r3, r0, r3
 8000caa:	d0d3      	beq.n	8000c54 <_malloc_r+0x20>
 8000cac:	425a      	negs	r2, r3
 8000cae:	50e2      	str	r2, [r4, r3]
 8000cb0:	e7d0      	b.n	8000c54 <_malloc_r+0x20>
 8000cb2:	428c      	cmp	r4, r1
 8000cb4:	684b      	ldr	r3, [r1, #4]
 8000cb6:	bf16      	itet	ne
 8000cb8:	6063      	strne	r3, [r4, #4]
 8000cba:	6013      	streq	r3, [r2, #0]
 8000cbc:	460c      	movne	r4, r1
 8000cbe:	e7eb      	b.n	8000c98 <_malloc_r+0x64>
 8000cc0:	460c      	mov	r4, r1
 8000cc2:	6849      	ldr	r1, [r1, #4]
 8000cc4:	e7cc      	b.n	8000c60 <_malloc_r+0x2c>
 8000cc6:	1cc4      	adds	r4, r0, #3
 8000cc8:	f024 0403 	bic.w	r4, r4, #3
 8000ccc:	42a0      	cmp	r0, r4
 8000cce:	d005      	beq.n	8000cdc <_malloc_r+0xa8>
 8000cd0:	1a21      	subs	r1, r4, r0
 8000cd2:	4630      	mov	r0, r6
 8000cd4:	f000 face 	bl	8001274 <_sbrk_r>
 8000cd8:	3001      	adds	r0, #1
 8000cda:	d0cf      	beq.n	8000c7c <_malloc_r+0x48>
 8000cdc:	6025      	str	r5, [r4, #0]
 8000cde:	e7db      	b.n	8000c98 <_malloc_r+0x64>
 8000ce0:	20000084 	.word	0x20000084
 8000ce4:	20000088 	.word	0x20000088

08000ce8 <__sfputc_r>:
 8000ce8:	6893      	ldr	r3, [r2, #8]
 8000cea:	3b01      	subs	r3, #1
 8000cec:	2b00      	cmp	r3, #0
 8000cee:	b410      	push	{r4}
 8000cf0:	6093      	str	r3, [r2, #8]
 8000cf2:	da07      	bge.n	8000d04 <__sfputc_r+0x1c>
 8000cf4:	6994      	ldr	r4, [r2, #24]
 8000cf6:	42a3      	cmp	r3, r4
 8000cf8:	db01      	blt.n	8000cfe <__sfputc_r+0x16>
 8000cfa:	290a      	cmp	r1, #10
 8000cfc:	d102      	bne.n	8000d04 <__sfputc_r+0x1c>
 8000cfe:	bc10      	pop	{r4}
 8000d00:	f7ff bcac 	b.w	800065c <__swbuf_r>
 8000d04:	6813      	ldr	r3, [r2, #0]
 8000d06:	1c58      	adds	r0, r3, #1
 8000d08:	6010      	str	r0, [r2, #0]
 8000d0a:	7019      	strb	r1, [r3, #0]
 8000d0c:	4608      	mov	r0, r1
 8000d0e:	bc10      	pop	{r4}
 8000d10:	4770      	bx	lr

08000d12 <__sfputs_r>:
 8000d12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d14:	4606      	mov	r6, r0
 8000d16:	460f      	mov	r7, r1
 8000d18:	4614      	mov	r4, r2
 8000d1a:	18d5      	adds	r5, r2, r3
 8000d1c:	42ac      	cmp	r4, r5
 8000d1e:	d101      	bne.n	8000d24 <__sfputs_r+0x12>
 8000d20:	2000      	movs	r0, #0
 8000d22:	e007      	b.n	8000d34 <__sfputs_r+0x22>
 8000d24:	463a      	mov	r2, r7
 8000d26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d2a:	4630      	mov	r0, r6
 8000d2c:	f7ff ffdc 	bl	8000ce8 <__sfputc_r>
 8000d30:	1c43      	adds	r3, r0, #1
 8000d32:	d1f3      	bne.n	8000d1c <__sfputs_r+0xa>
 8000d34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000d38 <_vfiprintf_r>:
 8000d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d3c:	460c      	mov	r4, r1
 8000d3e:	b09d      	sub	sp, #116	; 0x74
 8000d40:	4617      	mov	r7, r2
 8000d42:	461d      	mov	r5, r3
 8000d44:	4606      	mov	r6, r0
 8000d46:	b118      	cbz	r0, 8000d50 <_vfiprintf_r+0x18>
 8000d48:	6983      	ldr	r3, [r0, #24]
 8000d4a:	b90b      	cbnz	r3, 8000d50 <_vfiprintf_r+0x18>
 8000d4c:	f7ff fe36 	bl	80009bc <__sinit>
 8000d50:	4b7c      	ldr	r3, [pc, #496]	; (8000f44 <_vfiprintf_r+0x20c>)
 8000d52:	429c      	cmp	r4, r3
 8000d54:	d158      	bne.n	8000e08 <_vfiprintf_r+0xd0>
 8000d56:	6874      	ldr	r4, [r6, #4]
 8000d58:	89a3      	ldrh	r3, [r4, #12]
 8000d5a:	0718      	lsls	r0, r3, #28
 8000d5c:	d55e      	bpl.n	8000e1c <_vfiprintf_r+0xe4>
 8000d5e:	6923      	ldr	r3, [r4, #16]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d05b      	beq.n	8000e1c <_vfiprintf_r+0xe4>
 8000d64:	2300      	movs	r3, #0
 8000d66:	9309      	str	r3, [sp, #36]	; 0x24
 8000d68:	2320      	movs	r3, #32
 8000d6a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d6e:	2330      	movs	r3, #48	; 0x30
 8000d70:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d74:	9503      	str	r5, [sp, #12]
 8000d76:	f04f 0b01 	mov.w	fp, #1
 8000d7a:	46b8      	mov	r8, r7
 8000d7c:	4645      	mov	r5, r8
 8000d7e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000d82:	b10b      	cbz	r3, 8000d88 <_vfiprintf_r+0x50>
 8000d84:	2b25      	cmp	r3, #37	; 0x25
 8000d86:	d154      	bne.n	8000e32 <_vfiprintf_r+0xfa>
 8000d88:	ebb8 0a07 	subs.w	sl, r8, r7
 8000d8c:	d00b      	beq.n	8000da6 <_vfiprintf_r+0x6e>
 8000d8e:	4653      	mov	r3, sl
 8000d90:	463a      	mov	r2, r7
 8000d92:	4621      	mov	r1, r4
 8000d94:	4630      	mov	r0, r6
 8000d96:	f7ff ffbc 	bl	8000d12 <__sfputs_r>
 8000d9a:	3001      	adds	r0, #1
 8000d9c:	f000 80c2 	beq.w	8000f24 <_vfiprintf_r+0x1ec>
 8000da0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000da2:	4453      	add	r3, sl
 8000da4:	9309      	str	r3, [sp, #36]	; 0x24
 8000da6:	f898 3000 	ldrb.w	r3, [r8]
 8000daa:	2b00      	cmp	r3, #0
 8000dac:	f000 80ba 	beq.w	8000f24 <_vfiprintf_r+0x1ec>
 8000db0:	2300      	movs	r3, #0
 8000db2:	f04f 32ff 	mov.w	r2, #4294967295
 8000db6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000dba:	9304      	str	r3, [sp, #16]
 8000dbc:	9307      	str	r3, [sp, #28]
 8000dbe:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000dc2:	931a      	str	r3, [sp, #104]	; 0x68
 8000dc4:	46a8      	mov	r8, r5
 8000dc6:	2205      	movs	r2, #5
 8000dc8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000dcc:	485e      	ldr	r0, [pc, #376]	; (8000f48 <_vfiprintf_r+0x210>)
 8000dce:	f7ff fa1f 	bl	8000210 <memchr>
 8000dd2:	9b04      	ldr	r3, [sp, #16]
 8000dd4:	bb78      	cbnz	r0, 8000e36 <_vfiprintf_r+0xfe>
 8000dd6:	06d9      	lsls	r1, r3, #27
 8000dd8:	bf44      	itt	mi
 8000dda:	2220      	movmi	r2, #32
 8000ddc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000de0:	071a      	lsls	r2, r3, #28
 8000de2:	bf44      	itt	mi
 8000de4:	222b      	movmi	r2, #43	; 0x2b
 8000de6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000dea:	782a      	ldrb	r2, [r5, #0]
 8000dec:	2a2a      	cmp	r2, #42	; 0x2a
 8000dee:	d02a      	beq.n	8000e46 <_vfiprintf_r+0x10e>
 8000df0:	9a07      	ldr	r2, [sp, #28]
 8000df2:	46a8      	mov	r8, r5
 8000df4:	2000      	movs	r0, #0
 8000df6:	250a      	movs	r5, #10
 8000df8:	4641      	mov	r1, r8
 8000dfa:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dfe:	3b30      	subs	r3, #48	; 0x30
 8000e00:	2b09      	cmp	r3, #9
 8000e02:	d969      	bls.n	8000ed8 <_vfiprintf_r+0x1a0>
 8000e04:	b360      	cbz	r0, 8000e60 <_vfiprintf_r+0x128>
 8000e06:	e024      	b.n	8000e52 <_vfiprintf_r+0x11a>
 8000e08:	4b50      	ldr	r3, [pc, #320]	; (8000f4c <_vfiprintf_r+0x214>)
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	d101      	bne.n	8000e12 <_vfiprintf_r+0xda>
 8000e0e:	68b4      	ldr	r4, [r6, #8]
 8000e10:	e7a2      	b.n	8000d58 <_vfiprintf_r+0x20>
 8000e12:	4b4f      	ldr	r3, [pc, #316]	; (8000f50 <_vfiprintf_r+0x218>)
 8000e14:	429c      	cmp	r4, r3
 8000e16:	bf08      	it	eq
 8000e18:	68f4      	ldreq	r4, [r6, #12]
 8000e1a:	e79d      	b.n	8000d58 <_vfiprintf_r+0x20>
 8000e1c:	4621      	mov	r1, r4
 8000e1e:	4630      	mov	r0, r6
 8000e20:	f7ff fc6e 	bl	8000700 <__swsetup_r>
 8000e24:	2800      	cmp	r0, #0
 8000e26:	d09d      	beq.n	8000d64 <_vfiprintf_r+0x2c>
 8000e28:	f04f 30ff 	mov.w	r0, #4294967295
 8000e2c:	b01d      	add	sp, #116	; 0x74
 8000e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e32:	46a8      	mov	r8, r5
 8000e34:	e7a2      	b.n	8000d7c <_vfiprintf_r+0x44>
 8000e36:	4a44      	ldr	r2, [pc, #272]	; (8000f48 <_vfiprintf_r+0x210>)
 8000e38:	1a80      	subs	r0, r0, r2
 8000e3a:	fa0b f000 	lsl.w	r0, fp, r0
 8000e3e:	4318      	orrs	r0, r3
 8000e40:	9004      	str	r0, [sp, #16]
 8000e42:	4645      	mov	r5, r8
 8000e44:	e7be      	b.n	8000dc4 <_vfiprintf_r+0x8c>
 8000e46:	9a03      	ldr	r2, [sp, #12]
 8000e48:	1d11      	adds	r1, r2, #4
 8000e4a:	6812      	ldr	r2, [r2, #0]
 8000e4c:	9103      	str	r1, [sp, #12]
 8000e4e:	2a00      	cmp	r2, #0
 8000e50:	db01      	blt.n	8000e56 <_vfiprintf_r+0x11e>
 8000e52:	9207      	str	r2, [sp, #28]
 8000e54:	e004      	b.n	8000e60 <_vfiprintf_r+0x128>
 8000e56:	4252      	negs	r2, r2
 8000e58:	f043 0302 	orr.w	r3, r3, #2
 8000e5c:	9207      	str	r2, [sp, #28]
 8000e5e:	9304      	str	r3, [sp, #16]
 8000e60:	f898 3000 	ldrb.w	r3, [r8]
 8000e64:	2b2e      	cmp	r3, #46	; 0x2e
 8000e66:	d10e      	bne.n	8000e86 <_vfiprintf_r+0x14e>
 8000e68:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000e6c:	2b2a      	cmp	r3, #42	; 0x2a
 8000e6e:	d138      	bne.n	8000ee2 <_vfiprintf_r+0x1aa>
 8000e70:	9b03      	ldr	r3, [sp, #12]
 8000e72:	1d1a      	adds	r2, r3, #4
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	9203      	str	r2, [sp, #12]
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	bfb8      	it	lt
 8000e7c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000e80:	f108 0802 	add.w	r8, r8, #2
 8000e84:	9305      	str	r3, [sp, #20]
 8000e86:	4d33      	ldr	r5, [pc, #204]	; (8000f54 <_vfiprintf_r+0x21c>)
 8000e88:	f898 1000 	ldrb.w	r1, [r8]
 8000e8c:	2203      	movs	r2, #3
 8000e8e:	4628      	mov	r0, r5
 8000e90:	f7ff f9be 	bl	8000210 <memchr>
 8000e94:	b140      	cbz	r0, 8000ea8 <_vfiprintf_r+0x170>
 8000e96:	2340      	movs	r3, #64	; 0x40
 8000e98:	1b40      	subs	r0, r0, r5
 8000e9a:	fa03 f000 	lsl.w	r0, r3, r0
 8000e9e:	9b04      	ldr	r3, [sp, #16]
 8000ea0:	4303      	orrs	r3, r0
 8000ea2:	f108 0801 	add.w	r8, r8, #1
 8000ea6:	9304      	str	r3, [sp, #16]
 8000ea8:	f898 1000 	ldrb.w	r1, [r8]
 8000eac:	482a      	ldr	r0, [pc, #168]	; (8000f58 <_vfiprintf_r+0x220>)
 8000eae:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000eb2:	2206      	movs	r2, #6
 8000eb4:	f108 0701 	add.w	r7, r8, #1
 8000eb8:	f7ff f9aa 	bl	8000210 <memchr>
 8000ebc:	2800      	cmp	r0, #0
 8000ebe:	d037      	beq.n	8000f30 <_vfiprintf_r+0x1f8>
 8000ec0:	4b26      	ldr	r3, [pc, #152]	; (8000f5c <_vfiprintf_r+0x224>)
 8000ec2:	bb1b      	cbnz	r3, 8000f0c <_vfiprintf_r+0x1d4>
 8000ec4:	9b03      	ldr	r3, [sp, #12]
 8000ec6:	3307      	adds	r3, #7
 8000ec8:	f023 0307 	bic.w	r3, r3, #7
 8000ecc:	3308      	adds	r3, #8
 8000ece:	9303      	str	r3, [sp, #12]
 8000ed0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ed2:	444b      	add	r3, r9
 8000ed4:	9309      	str	r3, [sp, #36]	; 0x24
 8000ed6:	e750      	b.n	8000d7a <_vfiprintf_r+0x42>
 8000ed8:	fb05 3202 	mla	r2, r5, r2, r3
 8000edc:	2001      	movs	r0, #1
 8000ede:	4688      	mov	r8, r1
 8000ee0:	e78a      	b.n	8000df8 <_vfiprintf_r+0xc0>
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	f108 0801 	add.w	r8, r8, #1
 8000ee8:	9305      	str	r3, [sp, #20]
 8000eea:	4619      	mov	r1, r3
 8000eec:	250a      	movs	r5, #10
 8000eee:	4640      	mov	r0, r8
 8000ef0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ef4:	3a30      	subs	r2, #48	; 0x30
 8000ef6:	2a09      	cmp	r2, #9
 8000ef8:	d903      	bls.n	8000f02 <_vfiprintf_r+0x1ca>
 8000efa:	2b00      	cmp	r3, #0
 8000efc:	d0c3      	beq.n	8000e86 <_vfiprintf_r+0x14e>
 8000efe:	9105      	str	r1, [sp, #20]
 8000f00:	e7c1      	b.n	8000e86 <_vfiprintf_r+0x14e>
 8000f02:	fb05 2101 	mla	r1, r5, r1, r2
 8000f06:	2301      	movs	r3, #1
 8000f08:	4680      	mov	r8, r0
 8000f0a:	e7f0      	b.n	8000eee <_vfiprintf_r+0x1b6>
 8000f0c:	ab03      	add	r3, sp, #12
 8000f0e:	9300      	str	r3, [sp, #0]
 8000f10:	4622      	mov	r2, r4
 8000f12:	4b13      	ldr	r3, [pc, #76]	; (8000f60 <_vfiprintf_r+0x228>)
 8000f14:	a904      	add	r1, sp, #16
 8000f16:	4630      	mov	r0, r6
 8000f18:	f3af 8000 	nop.w
 8000f1c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000f20:	4681      	mov	r9, r0
 8000f22:	d1d5      	bne.n	8000ed0 <_vfiprintf_r+0x198>
 8000f24:	89a3      	ldrh	r3, [r4, #12]
 8000f26:	065b      	lsls	r3, r3, #25
 8000f28:	f53f af7e 	bmi.w	8000e28 <_vfiprintf_r+0xf0>
 8000f2c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000f2e:	e77d      	b.n	8000e2c <_vfiprintf_r+0xf4>
 8000f30:	ab03      	add	r3, sp, #12
 8000f32:	9300      	str	r3, [sp, #0]
 8000f34:	4622      	mov	r2, r4
 8000f36:	4b0a      	ldr	r3, [pc, #40]	; (8000f60 <_vfiprintf_r+0x228>)
 8000f38:	a904      	add	r1, sp, #16
 8000f3a:	4630      	mov	r0, r6
 8000f3c:	f000 f888 	bl	8001050 <_printf_i>
 8000f40:	e7ec      	b.n	8000f1c <_vfiprintf_r+0x1e4>
 8000f42:	bf00      	nop
 8000f44:	0800145c 	.word	0x0800145c
 8000f48:	0800149c 	.word	0x0800149c
 8000f4c:	0800147c 	.word	0x0800147c
 8000f50:	0800143c 	.word	0x0800143c
 8000f54:	080014a2 	.word	0x080014a2
 8000f58:	080014a6 	.word	0x080014a6
 8000f5c:	00000000 	.word	0x00000000
 8000f60:	08000d13 	.word	0x08000d13

08000f64 <_printf_common>:
 8000f64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f68:	4691      	mov	r9, r2
 8000f6a:	461f      	mov	r7, r3
 8000f6c:	688a      	ldr	r2, [r1, #8]
 8000f6e:	690b      	ldr	r3, [r1, #16]
 8000f70:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f74:	4293      	cmp	r3, r2
 8000f76:	bfb8      	it	lt
 8000f78:	4613      	movlt	r3, r2
 8000f7a:	f8c9 3000 	str.w	r3, [r9]
 8000f7e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f82:	4606      	mov	r6, r0
 8000f84:	460c      	mov	r4, r1
 8000f86:	b112      	cbz	r2, 8000f8e <_printf_common+0x2a>
 8000f88:	3301      	adds	r3, #1
 8000f8a:	f8c9 3000 	str.w	r3, [r9]
 8000f8e:	6823      	ldr	r3, [r4, #0]
 8000f90:	0699      	lsls	r1, r3, #26
 8000f92:	bf42      	ittt	mi
 8000f94:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000f98:	3302      	addmi	r3, #2
 8000f9a:	f8c9 3000 	strmi.w	r3, [r9]
 8000f9e:	6825      	ldr	r5, [r4, #0]
 8000fa0:	f015 0506 	ands.w	r5, r5, #6
 8000fa4:	d107      	bne.n	8000fb6 <_printf_common+0x52>
 8000fa6:	f104 0a19 	add.w	sl, r4, #25
 8000faa:	68e3      	ldr	r3, [r4, #12]
 8000fac:	f8d9 2000 	ldr.w	r2, [r9]
 8000fb0:	1a9b      	subs	r3, r3, r2
 8000fb2:	42ab      	cmp	r3, r5
 8000fb4:	dc28      	bgt.n	8001008 <_printf_common+0xa4>
 8000fb6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000fba:	6822      	ldr	r2, [r4, #0]
 8000fbc:	3300      	adds	r3, #0
 8000fbe:	bf18      	it	ne
 8000fc0:	2301      	movne	r3, #1
 8000fc2:	0692      	lsls	r2, r2, #26
 8000fc4:	d42d      	bmi.n	8001022 <_printf_common+0xbe>
 8000fc6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000fca:	4639      	mov	r1, r7
 8000fcc:	4630      	mov	r0, r6
 8000fce:	47c0      	blx	r8
 8000fd0:	3001      	adds	r0, #1
 8000fd2:	d020      	beq.n	8001016 <_printf_common+0xb2>
 8000fd4:	6823      	ldr	r3, [r4, #0]
 8000fd6:	68e5      	ldr	r5, [r4, #12]
 8000fd8:	f8d9 2000 	ldr.w	r2, [r9]
 8000fdc:	f003 0306 	and.w	r3, r3, #6
 8000fe0:	2b04      	cmp	r3, #4
 8000fe2:	bf08      	it	eq
 8000fe4:	1aad      	subeq	r5, r5, r2
 8000fe6:	68a3      	ldr	r3, [r4, #8]
 8000fe8:	6922      	ldr	r2, [r4, #16]
 8000fea:	bf0c      	ite	eq
 8000fec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ff0:	2500      	movne	r5, #0
 8000ff2:	4293      	cmp	r3, r2
 8000ff4:	bfc4      	itt	gt
 8000ff6:	1a9b      	subgt	r3, r3, r2
 8000ff8:	18ed      	addgt	r5, r5, r3
 8000ffa:	f04f 0900 	mov.w	r9, #0
 8000ffe:	341a      	adds	r4, #26
 8001000:	454d      	cmp	r5, r9
 8001002:	d11a      	bne.n	800103a <_printf_common+0xd6>
 8001004:	2000      	movs	r0, #0
 8001006:	e008      	b.n	800101a <_printf_common+0xb6>
 8001008:	2301      	movs	r3, #1
 800100a:	4652      	mov	r2, sl
 800100c:	4639      	mov	r1, r7
 800100e:	4630      	mov	r0, r6
 8001010:	47c0      	blx	r8
 8001012:	3001      	adds	r0, #1
 8001014:	d103      	bne.n	800101e <_printf_common+0xba>
 8001016:	f04f 30ff 	mov.w	r0, #4294967295
 800101a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800101e:	3501      	adds	r5, #1
 8001020:	e7c3      	b.n	8000faa <_printf_common+0x46>
 8001022:	18e1      	adds	r1, r4, r3
 8001024:	1c5a      	adds	r2, r3, #1
 8001026:	2030      	movs	r0, #48	; 0x30
 8001028:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800102c:	4422      	add	r2, r4
 800102e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001032:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001036:	3302      	adds	r3, #2
 8001038:	e7c5      	b.n	8000fc6 <_printf_common+0x62>
 800103a:	2301      	movs	r3, #1
 800103c:	4622      	mov	r2, r4
 800103e:	4639      	mov	r1, r7
 8001040:	4630      	mov	r0, r6
 8001042:	47c0      	blx	r8
 8001044:	3001      	adds	r0, #1
 8001046:	d0e6      	beq.n	8001016 <_printf_common+0xb2>
 8001048:	f109 0901 	add.w	r9, r9, #1
 800104c:	e7d8      	b.n	8001000 <_printf_common+0x9c>
	...

08001050 <_printf_i>:
 8001050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001054:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001058:	460c      	mov	r4, r1
 800105a:	7e09      	ldrb	r1, [r1, #24]
 800105c:	b085      	sub	sp, #20
 800105e:	296e      	cmp	r1, #110	; 0x6e
 8001060:	4617      	mov	r7, r2
 8001062:	4606      	mov	r6, r0
 8001064:	4698      	mov	r8, r3
 8001066:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001068:	f000 80b3 	beq.w	80011d2 <_printf_i+0x182>
 800106c:	d822      	bhi.n	80010b4 <_printf_i+0x64>
 800106e:	2963      	cmp	r1, #99	; 0x63
 8001070:	d036      	beq.n	80010e0 <_printf_i+0x90>
 8001072:	d80a      	bhi.n	800108a <_printf_i+0x3a>
 8001074:	2900      	cmp	r1, #0
 8001076:	f000 80b9 	beq.w	80011ec <_printf_i+0x19c>
 800107a:	2958      	cmp	r1, #88	; 0x58
 800107c:	f000 8083 	beq.w	8001186 <_printf_i+0x136>
 8001080:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001084:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001088:	e032      	b.n	80010f0 <_printf_i+0xa0>
 800108a:	2964      	cmp	r1, #100	; 0x64
 800108c:	d001      	beq.n	8001092 <_printf_i+0x42>
 800108e:	2969      	cmp	r1, #105	; 0x69
 8001090:	d1f6      	bne.n	8001080 <_printf_i+0x30>
 8001092:	6820      	ldr	r0, [r4, #0]
 8001094:	6813      	ldr	r3, [r2, #0]
 8001096:	0605      	lsls	r5, r0, #24
 8001098:	f103 0104 	add.w	r1, r3, #4
 800109c:	d52a      	bpl.n	80010f4 <_printf_i+0xa4>
 800109e:	681b      	ldr	r3, [r3, #0]
 80010a0:	6011      	str	r1, [r2, #0]
 80010a2:	2b00      	cmp	r3, #0
 80010a4:	da03      	bge.n	80010ae <_printf_i+0x5e>
 80010a6:	222d      	movs	r2, #45	; 0x2d
 80010a8:	425b      	negs	r3, r3
 80010aa:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80010ae:	486f      	ldr	r0, [pc, #444]	; (800126c <_printf_i+0x21c>)
 80010b0:	220a      	movs	r2, #10
 80010b2:	e039      	b.n	8001128 <_printf_i+0xd8>
 80010b4:	2973      	cmp	r1, #115	; 0x73
 80010b6:	f000 809d 	beq.w	80011f4 <_printf_i+0x1a4>
 80010ba:	d808      	bhi.n	80010ce <_printf_i+0x7e>
 80010bc:	296f      	cmp	r1, #111	; 0x6f
 80010be:	d020      	beq.n	8001102 <_printf_i+0xb2>
 80010c0:	2970      	cmp	r1, #112	; 0x70
 80010c2:	d1dd      	bne.n	8001080 <_printf_i+0x30>
 80010c4:	6823      	ldr	r3, [r4, #0]
 80010c6:	f043 0320 	orr.w	r3, r3, #32
 80010ca:	6023      	str	r3, [r4, #0]
 80010cc:	e003      	b.n	80010d6 <_printf_i+0x86>
 80010ce:	2975      	cmp	r1, #117	; 0x75
 80010d0:	d017      	beq.n	8001102 <_printf_i+0xb2>
 80010d2:	2978      	cmp	r1, #120	; 0x78
 80010d4:	d1d4      	bne.n	8001080 <_printf_i+0x30>
 80010d6:	2378      	movs	r3, #120	; 0x78
 80010d8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80010dc:	4864      	ldr	r0, [pc, #400]	; (8001270 <_printf_i+0x220>)
 80010de:	e055      	b.n	800118c <_printf_i+0x13c>
 80010e0:	6813      	ldr	r3, [r2, #0]
 80010e2:	1d19      	adds	r1, r3, #4
 80010e4:	681b      	ldr	r3, [r3, #0]
 80010e6:	6011      	str	r1, [r2, #0]
 80010e8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80010ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80010f0:	2301      	movs	r3, #1
 80010f2:	e08c      	b.n	800120e <_printf_i+0x1be>
 80010f4:	681b      	ldr	r3, [r3, #0]
 80010f6:	6011      	str	r1, [r2, #0]
 80010f8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80010fc:	bf18      	it	ne
 80010fe:	b21b      	sxthne	r3, r3
 8001100:	e7cf      	b.n	80010a2 <_printf_i+0x52>
 8001102:	6813      	ldr	r3, [r2, #0]
 8001104:	6825      	ldr	r5, [r4, #0]
 8001106:	1d18      	adds	r0, r3, #4
 8001108:	6010      	str	r0, [r2, #0]
 800110a:	0628      	lsls	r0, r5, #24
 800110c:	d501      	bpl.n	8001112 <_printf_i+0xc2>
 800110e:	681b      	ldr	r3, [r3, #0]
 8001110:	e002      	b.n	8001118 <_printf_i+0xc8>
 8001112:	0668      	lsls	r0, r5, #25
 8001114:	d5fb      	bpl.n	800110e <_printf_i+0xbe>
 8001116:	881b      	ldrh	r3, [r3, #0]
 8001118:	4854      	ldr	r0, [pc, #336]	; (800126c <_printf_i+0x21c>)
 800111a:	296f      	cmp	r1, #111	; 0x6f
 800111c:	bf14      	ite	ne
 800111e:	220a      	movne	r2, #10
 8001120:	2208      	moveq	r2, #8
 8001122:	2100      	movs	r1, #0
 8001124:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001128:	6865      	ldr	r5, [r4, #4]
 800112a:	60a5      	str	r5, [r4, #8]
 800112c:	2d00      	cmp	r5, #0
 800112e:	f2c0 8095 	blt.w	800125c <_printf_i+0x20c>
 8001132:	6821      	ldr	r1, [r4, #0]
 8001134:	f021 0104 	bic.w	r1, r1, #4
 8001138:	6021      	str	r1, [r4, #0]
 800113a:	2b00      	cmp	r3, #0
 800113c:	d13d      	bne.n	80011ba <_printf_i+0x16a>
 800113e:	2d00      	cmp	r5, #0
 8001140:	f040 808e 	bne.w	8001260 <_printf_i+0x210>
 8001144:	4665      	mov	r5, ip
 8001146:	2a08      	cmp	r2, #8
 8001148:	d10b      	bne.n	8001162 <_printf_i+0x112>
 800114a:	6823      	ldr	r3, [r4, #0]
 800114c:	07db      	lsls	r3, r3, #31
 800114e:	d508      	bpl.n	8001162 <_printf_i+0x112>
 8001150:	6923      	ldr	r3, [r4, #16]
 8001152:	6862      	ldr	r2, [r4, #4]
 8001154:	429a      	cmp	r2, r3
 8001156:	bfde      	ittt	le
 8001158:	2330      	movle	r3, #48	; 0x30
 800115a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800115e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001162:	ebac 0305 	sub.w	r3, ip, r5
 8001166:	6123      	str	r3, [r4, #16]
 8001168:	f8cd 8000 	str.w	r8, [sp]
 800116c:	463b      	mov	r3, r7
 800116e:	aa03      	add	r2, sp, #12
 8001170:	4621      	mov	r1, r4
 8001172:	4630      	mov	r0, r6
 8001174:	f7ff fef6 	bl	8000f64 <_printf_common>
 8001178:	3001      	adds	r0, #1
 800117a:	d14d      	bne.n	8001218 <_printf_i+0x1c8>
 800117c:	f04f 30ff 	mov.w	r0, #4294967295
 8001180:	b005      	add	sp, #20
 8001182:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001186:	4839      	ldr	r0, [pc, #228]	; (800126c <_printf_i+0x21c>)
 8001188:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800118c:	6813      	ldr	r3, [r2, #0]
 800118e:	6821      	ldr	r1, [r4, #0]
 8001190:	1d1d      	adds	r5, r3, #4
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	6015      	str	r5, [r2, #0]
 8001196:	060a      	lsls	r2, r1, #24
 8001198:	d50b      	bpl.n	80011b2 <_printf_i+0x162>
 800119a:	07ca      	lsls	r2, r1, #31
 800119c:	bf44      	itt	mi
 800119e:	f041 0120 	orrmi.w	r1, r1, #32
 80011a2:	6021      	strmi	r1, [r4, #0]
 80011a4:	b91b      	cbnz	r3, 80011ae <_printf_i+0x15e>
 80011a6:	6822      	ldr	r2, [r4, #0]
 80011a8:	f022 0220 	bic.w	r2, r2, #32
 80011ac:	6022      	str	r2, [r4, #0]
 80011ae:	2210      	movs	r2, #16
 80011b0:	e7b7      	b.n	8001122 <_printf_i+0xd2>
 80011b2:	064d      	lsls	r5, r1, #25
 80011b4:	bf48      	it	mi
 80011b6:	b29b      	uxthmi	r3, r3
 80011b8:	e7ef      	b.n	800119a <_printf_i+0x14a>
 80011ba:	4665      	mov	r5, ip
 80011bc:	fbb3 f1f2 	udiv	r1, r3, r2
 80011c0:	fb02 3311 	mls	r3, r2, r1, r3
 80011c4:	5cc3      	ldrb	r3, [r0, r3]
 80011c6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80011ca:	460b      	mov	r3, r1
 80011cc:	2900      	cmp	r1, #0
 80011ce:	d1f5      	bne.n	80011bc <_printf_i+0x16c>
 80011d0:	e7b9      	b.n	8001146 <_printf_i+0xf6>
 80011d2:	6813      	ldr	r3, [r2, #0]
 80011d4:	6825      	ldr	r5, [r4, #0]
 80011d6:	6961      	ldr	r1, [r4, #20]
 80011d8:	1d18      	adds	r0, r3, #4
 80011da:	6010      	str	r0, [r2, #0]
 80011dc:	0628      	lsls	r0, r5, #24
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	d501      	bpl.n	80011e6 <_printf_i+0x196>
 80011e2:	6019      	str	r1, [r3, #0]
 80011e4:	e002      	b.n	80011ec <_printf_i+0x19c>
 80011e6:	066a      	lsls	r2, r5, #25
 80011e8:	d5fb      	bpl.n	80011e2 <_printf_i+0x192>
 80011ea:	8019      	strh	r1, [r3, #0]
 80011ec:	2300      	movs	r3, #0
 80011ee:	6123      	str	r3, [r4, #16]
 80011f0:	4665      	mov	r5, ip
 80011f2:	e7b9      	b.n	8001168 <_printf_i+0x118>
 80011f4:	6813      	ldr	r3, [r2, #0]
 80011f6:	1d19      	adds	r1, r3, #4
 80011f8:	6011      	str	r1, [r2, #0]
 80011fa:	681d      	ldr	r5, [r3, #0]
 80011fc:	6862      	ldr	r2, [r4, #4]
 80011fe:	2100      	movs	r1, #0
 8001200:	4628      	mov	r0, r5
 8001202:	f7ff f805 	bl	8000210 <memchr>
 8001206:	b108      	cbz	r0, 800120c <_printf_i+0x1bc>
 8001208:	1b40      	subs	r0, r0, r5
 800120a:	6060      	str	r0, [r4, #4]
 800120c:	6863      	ldr	r3, [r4, #4]
 800120e:	6123      	str	r3, [r4, #16]
 8001210:	2300      	movs	r3, #0
 8001212:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001216:	e7a7      	b.n	8001168 <_printf_i+0x118>
 8001218:	6923      	ldr	r3, [r4, #16]
 800121a:	462a      	mov	r2, r5
 800121c:	4639      	mov	r1, r7
 800121e:	4630      	mov	r0, r6
 8001220:	47c0      	blx	r8
 8001222:	3001      	adds	r0, #1
 8001224:	d0aa      	beq.n	800117c <_printf_i+0x12c>
 8001226:	6823      	ldr	r3, [r4, #0]
 8001228:	079b      	lsls	r3, r3, #30
 800122a:	d413      	bmi.n	8001254 <_printf_i+0x204>
 800122c:	68e0      	ldr	r0, [r4, #12]
 800122e:	9b03      	ldr	r3, [sp, #12]
 8001230:	4298      	cmp	r0, r3
 8001232:	bfb8      	it	lt
 8001234:	4618      	movlt	r0, r3
 8001236:	e7a3      	b.n	8001180 <_printf_i+0x130>
 8001238:	2301      	movs	r3, #1
 800123a:	464a      	mov	r2, r9
 800123c:	4639      	mov	r1, r7
 800123e:	4630      	mov	r0, r6
 8001240:	47c0      	blx	r8
 8001242:	3001      	adds	r0, #1
 8001244:	d09a      	beq.n	800117c <_printf_i+0x12c>
 8001246:	3501      	adds	r5, #1
 8001248:	68e3      	ldr	r3, [r4, #12]
 800124a:	9a03      	ldr	r2, [sp, #12]
 800124c:	1a9b      	subs	r3, r3, r2
 800124e:	42ab      	cmp	r3, r5
 8001250:	dcf2      	bgt.n	8001238 <_printf_i+0x1e8>
 8001252:	e7eb      	b.n	800122c <_printf_i+0x1dc>
 8001254:	2500      	movs	r5, #0
 8001256:	f104 0919 	add.w	r9, r4, #25
 800125a:	e7f5      	b.n	8001248 <_printf_i+0x1f8>
 800125c:	2b00      	cmp	r3, #0
 800125e:	d1ac      	bne.n	80011ba <_printf_i+0x16a>
 8001260:	7803      	ldrb	r3, [r0, #0]
 8001262:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001266:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800126a:	e76c      	b.n	8001146 <_printf_i+0xf6>
 800126c:	080014ad 	.word	0x080014ad
 8001270:	080014be 	.word	0x080014be

08001274 <_sbrk_r>:
 8001274:	b538      	push	{r3, r4, r5, lr}
 8001276:	4c06      	ldr	r4, [pc, #24]	; (8001290 <_sbrk_r+0x1c>)
 8001278:	2300      	movs	r3, #0
 800127a:	4605      	mov	r5, r0
 800127c:	4608      	mov	r0, r1
 800127e:	6023      	str	r3, [r4, #0]
 8001280:	f7ff f8de 	bl	8000440 <_sbrk>
 8001284:	1c43      	adds	r3, r0, #1
 8001286:	d102      	bne.n	800128e <_sbrk_r+0x1a>
 8001288:	6823      	ldr	r3, [r4, #0]
 800128a:	b103      	cbz	r3, 800128e <_sbrk_r+0x1a>
 800128c:	602b      	str	r3, [r5, #0]
 800128e:	bd38      	pop	{r3, r4, r5, pc}
 8001290:	2000008c 	.word	0x2000008c

08001294 <__sread>:
 8001294:	b510      	push	{r4, lr}
 8001296:	460c      	mov	r4, r1
 8001298:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800129c:	f000 f896 	bl	80013cc <_read_r>
 80012a0:	2800      	cmp	r0, #0
 80012a2:	bfab      	itete	ge
 80012a4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80012a6:	89a3      	ldrhlt	r3, [r4, #12]
 80012a8:	181b      	addge	r3, r3, r0
 80012aa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80012ae:	bfac      	ite	ge
 80012b0:	6563      	strge	r3, [r4, #84]	; 0x54
 80012b2:	81a3      	strhlt	r3, [r4, #12]
 80012b4:	bd10      	pop	{r4, pc}

080012b6 <__swrite>:
 80012b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012ba:	461f      	mov	r7, r3
 80012bc:	898b      	ldrh	r3, [r1, #12]
 80012be:	05db      	lsls	r3, r3, #23
 80012c0:	4605      	mov	r5, r0
 80012c2:	460c      	mov	r4, r1
 80012c4:	4616      	mov	r6, r2
 80012c6:	d505      	bpl.n	80012d4 <__swrite+0x1e>
 80012c8:	2302      	movs	r3, #2
 80012ca:	2200      	movs	r2, #0
 80012cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012d0:	f000 f868 	bl	80013a4 <_lseek_r>
 80012d4:	89a3      	ldrh	r3, [r4, #12]
 80012d6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012da:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012de:	81a3      	strh	r3, [r4, #12]
 80012e0:	4632      	mov	r2, r6
 80012e2:	463b      	mov	r3, r7
 80012e4:	4628      	mov	r0, r5
 80012e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012ea:	f000 b817 	b.w	800131c <_write_r>

080012ee <__sseek>:
 80012ee:	b510      	push	{r4, lr}
 80012f0:	460c      	mov	r4, r1
 80012f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012f6:	f000 f855 	bl	80013a4 <_lseek_r>
 80012fa:	1c43      	adds	r3, r0, #1
 80012fc:	89a3      	ldrh	r3, [r4, #12]
 80012fe:	bf15      	itete	ne
 8001300:	6560      	strne	r0, [r4, #84]	; 0x54
 8001302:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001306:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800130a:	81a3      	strheq	r3, [r4, #12]
 800130c:	bf18      	it	ne
 800130e:	81a3      	strhne	r3, [r4, #12]
 8001310:	bd10      	pop	{r4, pc}

08001312 <__sclose>:
 8001312:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001316:	f000 b813 	b.w	8001340 <_close_r>
	...

0800131c <_write_r>:
 800131c:	b538      	push	{r3, r4, r5, lr}
 800131e:	4c07      	ldr	r4, [pc, #28]	; (800133c <_write_r+0x20>)
 8001320:	4605      	mov	r5, r0
 8001322:	4608      	mov	r0, r1
 8001324:	4611      	mov	r1, r2
 8001326:	2200      	movs	r2, #0
 8001328:	6022      	str	r2, [r4, #0]
 800132a:	461a      	mov	r2, r3
 800132c:	f7ff f83b 	bl	80003a6 <_write>
 8001330:	1c43      	adds	r3, r0, #1
 8001332:	d102      	bne.n	800133a <_write_r+0x1e>
 8001334:	6823      	ldr	r3, [r4, #0]
 8001336:	b103      	cbz	r3, 800133a <_write_r+0x1e>
 8001338:	602b      	str	r3, [r5, #0]
 800133a:	bd38      	pop	{r3, r4, r5, pc}
 800133c:	2000008c 	.word	0x2000008c

08001340 <_close_r>:
 8001340:	b538      	push	{r3, r4, r5, lr}
 8001342:	4c06      	ldr	r4, [pc, #24]	; (800135c <_close_r+0x1c>)
 8001344:	2300      	movs	r3, #0
 8001346:	4605      	mov	r5, r0
 8001348:	4608      	mov	r0, r1
 800134a:	6023      	str	r3, [r4, #0]
 800134c:	f7ff f847 	bl	80003de <_close>
 8001350:	1c43      	adds	r3, r0, #1
 8001352:	d102      	bne.n	800135a <_close_r+0x1a>
 8001354:	6823      	ldr	r3, [r4, #0]
 8001356:	b103      	cbz	r3, 800135a <_close_r+0x1a>
 8001358:	602b      	str	r3, [r5, #0]
 800135a:	bd38      	pop	{r3, r4, r5, pc}
 800135c:	2000008c 	.word	0x2000008c

08001360 <_fstat_r>:
 8001360:	b538      	push	{r3, r4, r5, lr}
 8001362:	4c07      	ldr	r4, [pc, #28]	; (8001380 <_fstat_r+0x20>)
 8001364:	2300      	movs	r3, #0
 8001366:	4605      	mov	r5, r0
 8001368:	4608      	mov	r0, r1
 800136a:	4611      	mov	r1, r2
 800136c:	6023      	str	r3, [r4, #0]
 800136e:	f7ff f841 	bl	80003f4 <_fstat>
 8001372:	1c43      	adds	r3, r0, #1
 8001374:	d102      	bne.n	800137c <_fstat_r+0x1c>
 8001376:	6823      	ldr	r3, [r4, #0]
 8001378:	b103      	cbz	r3, 800137c <_fstat_r+0x1c>
 800137a:	602b      	str	r3, [r5, #0]
 800137c:	bd38      	pop	{r3, r4, r5, pc}
 800137e:	bf00      	nop
 8001380:	2000008c 	.word	0x2000008c

08001384 <_isatty_r>:
 8001384:	b538      	push	{r3, r4, r5, lr}
 8001386:	4c06      	ldr	r4, [pc, #24]	; (80013a0 <_isatty_r+0x1c>)
 8001388:	2300      	movs	r3, #0
 800138a:	4605      	mov	r5, r0
 800138c:	4608      	mov	r0, r1
 800138e:	6023      	str	r3, [r4, #0]
 8001390:	f7ff f83f 	bl	8000412 <_isatty>
 8001394:	1c43      	adds	r3, r0, #1
 8001396:	d102      	bne.n	800139e <_isatty_r+0x1a>
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	b103      	cbz	r3, 800139e <_isatty_r+0x1a>
 800139c:	602b      	str	r3, [r5, #0]
 800139e:	bd38      	pop	{r3, r4, r5, pc}
 80013a0:	2000008c 	.word	0x2000008c

080013a4 <_lseek_r>:
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	4c07      	ldr	r4, [pc, #28]	; (80013c4 <_lseek_r+0x20>)
 80013a8:	4605      	mov	r5, r0
 80013aa:	4608      	mov	r0, r1
 80013ac:	4611      	mov	r1, r2
 80013ae:	2200      	movs	r2, #0
 80013b0:	6022      	str	r2, [r4, #0]
 80013b2:	461a      	mov	r2, r3
 80013b4:	f7ff f837 	bl	8000426 <_lseek>
 80013b8:	1c43      	adds	r3, r0, #1
 80013ba:	d102      	bne.n	80013c2 <_lseek_r+0x1e>
 80013bc:	6823      	ldr	r3, [r4, #0]
 80013be:	b103      	cbz	r3, 80013c2 <_lseek_r+0x1e>
 80013c0:	602b      	str	r3, [r5, #0]
 80013c2:	bd38      	pop	{r3, r4, r5, pc}
 80013c4:	2000008c 	.word	0x2000008c

080013c8 <__malloc_lock>:
 80013c8:	4770      	bx	lr

080013ca <__malloc_unlock>:
 80013ca:	4770      	bx	lr

080013cc <_read_r>:
 80013cc:	b538      	push	{r3, r4, r5, lr}
 80013ce:	4c07      	ldr	r4, [pc, #28]	; (80013ec <_read_r+0x20>)
 80013d0:	4605      	mov	r5, r0
 80013d2:	4608      	mov	r0, r1
 80013d4:	4611      	mov	r1, r2
 80013d6:	2200      	movs	r2, #0
 80013d8:	6022      	str	r2, [r4, #0]
 80013da:	461a      	mov	r2, r3
 80013dc:	f7fe ffc6 	bl	800036c <_read>
 80013e0:	1c43      	adds	r3, r0, #1
 80013e2:	d102      	bne.n	80013ea <_read_r+0x1e>
 80013e4:	6823      	ldr	r3, [r4, #0]
 80013e6:	b103      	cbz	r3, 80013ea <_read_r+0x1e>
 80013e8:	602b      	str	r3, [r5, #0]
 80013ea:	bd38      	pop	{r3, r4, r5, pc}
 80013ec:	2000008c 	.word	0x2000008c

080013f0 <_init>:
 80013f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013f2:	bf00      	nop
 80013f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013f6:	bc08      	pop	{r3}
 80013f8:	469e      	mov	lr, r3
 80013fa:	4770      	bx	lr

080013fc <_fini>:
 80013fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013fe:	bf00      	nop
 8001400:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001402:	bc08      	pop	{r3}
 8001404:	469e      	mov	lr, r3
 8001406:	4770      	bx	lr
